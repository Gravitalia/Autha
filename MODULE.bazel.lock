{
  "lockFileVersion": 3,
  "moduleFileHash": "aa88b5b3de20da457f380143bc81fcb36087448d751b3906e9ef65422fd94184",
  "flags": {
    "cmdRegistries": [
      "https://bcr.bazel.build/"
    ],
    "cmdModuleOverrides": {},
    "allowedYankedVersions": [],
    "envVarAllowedYankedVersions": "",
    "ignoreDevDependency": false,
    "directDependenciesMode": "WARNING",
    "compatibilityMode": "ERROR"
  },
  "localOverrideHashes": {
    "bazel_tools": "922ea6752dc9105de5af957f7a99a6933c0a6a712d23df6aad16a9c399f7e787"
  },
  "moduleDepGraph": {
    "<root>": {
      "name": "autha",
      "version": "3.0",
      "key": "<root>",
      "repoName": "autha",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@rust_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_proto//proto:repositories.bzl",
          "extensionName": "proto",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 19,
            "column": 22
          },
          "imports": {},
          "devImports": [],
          "tags": [
            {
              "tagName": "dependencies",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 20,
                "column": 19
              }
            },
            {
              "tagName": "toolchain",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 21,
                "column": 16
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_rust//rust:extensions.bzl",
          "extensionName": "rust",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 26,
            "column": 21
          },
          "imports": {
            "rust_toolchains": "rust_toolchains"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "edition": "2021"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 27,
                "column": 15
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_rust//crate_universe:extension.bzl",
          "extensionName": "crate",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 35,
            "column": 22
          },
          "imports": {
            "crate_index": "crate_index"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "from_cargo",
              "attributeValues": {
                "name": "crate_index",
                "cargo_lockfile": "//:Cargo.lock",
                "manifests": [
                  "//:Cargo.toml",
                  "//autha:Cargo.toml",
                  "//crypto:Cargo.toml",
                  "//db:Cargo.toml",
                  "//image_processor:Cargo.toml"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 39,
                "column": 17
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_oci//oci:extensions.bzl",
          "extensionName": "oci",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 56,
            "column": 20
          },
          "imports": {
            "distroless_cc": "distroless_cc"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchains",
              "attributeValues": {
                "name": "oci",
                "crane_version": "v0.18.0"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 57,
                "column": 15
              }
            },
            {
              "tagName": "pull",
              "attributeValues": {
                "name": "distroless_cc",
                "digest": "sha256:8aad707f96620ee89e27febef51b01c6ff244277a3560fcfcfbe68633ef09193",
                "image": "gcr.io/distroless/cc",
                "platforms": [
                  "linux/amd64",
                  "linux/arm64"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 62,
                "column": 9
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "platforms": "platforms@0.0.8",
        "bazel_skylib": "bazel_skylib@1.5.0",
        "rules_proto": "rules_proto@6.0.0-rc2",
        "com_google_protobuf": "protobuf@23.1",
        "rules_rust": "rules_rust@0.40.0",
        "rules_pkg": "rules_pkg@0.10.1",
        "rules_oci": "rules_oci@1.7.4",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      }
    },
    "platforms@0.0.8": {
      "name": "platforms",
      "version": "0.0.8",
      "key": "platforms@0.0.8",
      "repoName": "platforms",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "rules_license": "rules_license@0.0.8",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "platforms",
          "urls": [
            "https://github.com/bazelbuild/platforms/releases/download/0.0.8/platforms-0.0.8.tar.gz"
          ],
          "integrity": "sha256-gVBAZgU4ns7LbaB8vLUJ1WN6OrmiS8abEQFTE2fYnXQ=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "bazel_skylib@1.5.0": {
      "name": "bazel_skylib",
      "version": "1.5.0",
      "key": "bazel_skylib@1.5.0",
      "repoName": "bazel_skylib",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "//toolchains/unittest:cmd_toolchain",
        "//toolchains/unittest:bash_toolchain"
      ],
      "extensionUsages": [],
      "deps": {
        "platforms": "platforms@0.0.8",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "bazel_skylib~1.5.0",
          "urls": [
            "https://github.com/bazelbuild/bazel-skylib/releases/download/1.5.0/bazel-skylib-1.5.0.tar.gz"
          ],
          "integrity": "sha256-zVWgYudjuTSZIfD124w5MyiNyLpPdt2UFqrGis7jy5Q=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_proto@6.0.0-rc2": {
      "name": "rules_proto",
      "version": "6.0.0-rc2",
      "key": "rules_proto@6.0.0-rc2",
      "repoName": "rules_proto",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "rules_license": "rules_license@0.0.8",
        "bazel_skylib": "bazel_skylib@1.5.0",
        "bazel_features": "bazel_features@1.2.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_proto~6.0.0-rc2",
          "urls": [
            "https://github.com/bazelbuild/rules_proto/releases/download/6.0.0-rc2/rules_proto-6.0.0-rc2.tar.gz"
          ],
          "integrity": "sha256-cf2+0AoHCVIa0hIFjGDROZe5IqXQHb/Zl/DVfWiee2c=",
          "strip_prefix": "rules_proto-6.0.0-rc2",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_proto/6.0.0-rc2/patches/module_dot_bazel_version.patch": "sha256-xDTHv7Npgr0lIdxwTXXD5rcQ31DX09176+T4wn0hF4I="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "protobuf@23.1": {
      "name": "protobuf",
      "version": "23.1",
      "key": "protobuf@23.1",
      "repoName": "protobuf",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@protobuf//:non_module_deps.bzl",
          "extensionName": "non_module_deps",
          "usingModule": "protobuf@23.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/protobuf/23.1/MODULE.bazel",
            "line": 20,
            "column": 32
          },
          "imports": {
            "utf8_range": "utf8_range"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_jvm_external//:extensions.bzl",
          "extensionName": "maven",
          "usingModule": "protobuf@23.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/protobuf/23.1/MODULE.bazel",
            "line": 28,
            "column": 22
          },
          "imports": {
            "maven": "maven"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "install",
              "attributeValues": {
                "name": "maven",
                "artifacts": [
                  "com.google.code.findbugs:jsr305:3.0.2",
                  "com.google.code.gson:gson:2.8.9",
                  "com.google.errorprone:error_prone_annotations:2.3.2",
                  "com.google.j2objc:j2objc-annotations:1.3",
                  "com.google.guava:guava:31.1-jre",
                  "com.google.guava:guava-testlib:31.1-jre",
                  "com.google.truth:truth:1.1.2",
                  "junit:junit:4.13.2",
                  "org.mockito:mockito-core:4.3.1"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/protobuf/23.1/MODULE.bazel",
                "line": 30,
                "column": 14
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.5.0",
        "rules_python": "rules_python@0.24.0",
        "rules_cc": "rules_cc@0.0.9",
        "rules_proto": "rules_proto@6.0.0-rc2",
        "rules_java": "rules_java@7.1.0",
        "rules_pkg": "rules_pkg@0.10.1",
        "platforms": "platforms@0.0.8",
        "com_google_absl": "abseil-cpp@20230802.0.bcr.1",
        "zlib": "zlib@1.3",
        "upb": "upb@0.0.0-20230516-61a97ef",
        "rules_jvm_external": "rules_jvm_external@4.4.2",
        "com_google_googletest": "googletest@1.14.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "protobuf~23.1",
          "urls": [
            "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v23.1.zip"
          ],
          "integrity": "sha256-wOqfTXWzfqjp14zkxnDQZry3zr26GQ+l/IxXsfAMDCw=",
          "strip_prefix": "protobuf-23.1",
          "remote_patches": {
            "https://bcr.bazel.build/modules/protobuf/23.1/patches/0001-Add-MODULE.bazel.patch": "sha256-x8O0nVdHrIdFH2VajXrAzYjLiIaZNcNfZk7kYyor0pg=",
            "https://bcr.bazel.build/modules/protobuf/23.1/patches/0002-Add-utf8_range-dependency.patch": "sha256-UPhKk5lQVa/8675JZJG/h/WTIzmQml6g/wTFJWgWnL8=",
            "https://bcr.bazel.build/modules/protobuf/23.1/patches/0003-Examples-MODULE.bazel.patch": "sha256-mzBuXdk9K9RTN4PhYkoXcSXDXncPjSYjj6nVcq+dNv4=",
            "https://bcr.bazel.build/modules/protobuf/23.1/patches/0004-Relative-labels.patch": "sha256-VDVDwTRcVGkO4c2Ej6zE6gMYmHdk+V0pzG7nuScF3dQ=",
            "https://bcr.bazel.build/modules/protobuf/23.1/patches/0005-Migrate-from-bind-to-alias.patch": "sha256-OHsXlAzbHYMAvGRlKGcxmolaoLXa86Rc5lhs84YAApg=",
            "https://bcr.bazel.build/modules/protobuf/23.1/patches/0006-Make-rules_ruby-a-dev-only-dependency.patch": "sha256-+OEree/96gfqgK7Is+KA7/bi77icq8zaFq/9j+1lFuk=",
            "https://bcr.bazel.build/modules/protobuf/23.1/patches/0007-bazel-Get-rid-of-exec_tools.-13401.patch": "sha256-Thj5ZYqMpgaUrjZv8XyWqyD+I6XQNcZjo4jI14a7QxE="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_rust@0.40.0": {
      "name": "rules_rust",
      "version": "0.40.0",
      "key": "rules_rust@0.40.0",
      "repoName": "rules_rust",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@rust_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_rust//rust/private:extensions.bzl",
          "extensionName": "i",
          "usingModule": "rules_rust@0.40.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_rust/0.40.0/MODULE.bazel",
            "line": 39,
            "column": 30
          },
          "imports": {
            "bazelci_rules": "bazelci_rules",
            "cargo_bazel.buildifier-darwin-amd64": "cargo_bazel.buildifier-darwin-amd64",
            "cargo_bazel.buildifier-darwin-arm64": "cargo_bazel.buildifier-darwin-arm64",
            "cargo_bazel.buildifier-linux-amd64": "cargo_bazel.buildifier-linux-amd64",
            "cargo_bazel.buildifier-linux-arm64": "cargo_bazel.buildifier-linux-arm64",
            "cargo_bazel.buildifier-windows-amd64.exe": "cargo_bazel.buildifier-windows-amd64.exe",
            "com_google_googleapis": "com_google_googleapis",
            "cui": "cui",
            "cui__anyhow-1.0.75": "cui__anyhow-1.0.75",
            "cui__camino-1.1.6": "cui__camino-1.1.6",
            "cui__cargo-lock-9.0.0": "cui__cargo-lock-9.0.0",
            "cui__cargo-platform-0.1.4": "cui__cargo-platform-0.1.4",
            "cui__cargo_metadata-0.18.1": "cui__cargo_metadata-0.18.1",
            "cui__cargo_toml-0.17.1": "cui__cargo_toml-0.17.1",
            "cui__cfg-expr-0.15.5": "cui__cfg-expr-0.15.5",
            "cui__clap-4.3.11": "cui__clap-4.3.11",
            "cui__crates-index-2.2.0": "cui__crates-index-2.2.0",
            "cui__hex-0.4.3": "cui__hex-0.4.3",
            "cui__indoc-2.0.4": "cui__indoc-2.0.4",
            "cui__itertools-0.12.0": "cui__itertools-0.12.0",
            "cui__maplit-1.0.2": "cui__maplit-1.0.2",
            "cui__normpath-1.1.1": "cui__normpath-1.1.1",
            "cui__pathdiff-0.2.1": "cui__pathdiff-0.2.1",
            "cui__regex-1.10.2": "cui__regex-1.10.2",
            "cui__semver-1.0.20": "cui__semver-1.0.20",
            "cui__serde-1.0.190": "cui__serde-1.0.190",
            "cui__serde_json-1.0.108": "cui__serde_json-1.0.108",
            "cui__serde_starlark-0.1.14": "cui__serde_starlark-0.1.14",
            "cui__sha2-0.10.8": "cui__sha2-0.10.8",
            "cui__spdx-0.10.3": "cui__spdx-0.10.3",
            "cui__spectral-0.6.0": "cui__spectral-0.6.0",
            "cui__tempfile-3.8.1": "cui__tempfile-3.8.1",
            "cui__tera-1.19.1": "cui__tera-1.19.1",
            "cui__textwrap-0.16.0": "cui__textwrap-0.16.0",
            "cui__toml-0.8.10": "cui__toml-0.8.10",
            "cui__tracing-0.1.40": "cui__tracing-0.1.40",
            "cui__tracing-subscriber-0.3.17": "cui__tracing-subscriber-0.3.17",
            "generated_inputs_in_external_repo": "generated_inputs_in_external_repo",
            "libc": "libc",
            "llvm-raw": "llvm-raw",
            "rrra__anyhow-1.0.71": "rrra__anyhow-1.0.71",
            "rrra__clap-4.3.11": "rrra__clap-4.3.11",
            "rrra__env_logger-0.10.0": "rrra__env_logger-0.10.0",
            "rrra__itertools-0.11.0": "rrra__itertools-0.11.0",
            "rrra__log-0.4.19": "rrra__log-0.4.19",
            "rrra__serde-1.0.171": "rrra__serde-1.0.171",
            "rrra__serde_json-1.0.102": "rrra__serde_json-1.0.102",
            "rules_rust_bindgen__bindgen-0.69.1": "rules_rust_bindgen__bindgen-0.69.1",
            "rules_rust_bindgen__bindgen-cli-0.69.1": "rules_rust_bindgen__bindgen-cli-0.69.1",
            "rules_rust_bindgen__clang-sys-1.6.1": "rules_rust_bindgen__clang-sys-1.6.1",
            "rules_rust_bindgen__clap-4.3.3": "rules_rust_bindgen__clap-4.3.3",
            "rules_rust_bindgen__clap_complete-4.3.1": "rules_rust_bindgen__clap_complete-4.3.1",
            "rules_rust_bindgen__env_logger-0.10.0": "rules_rust_bindgen__env_logger-0.10.0",
            "rules_rust_prost": "rules_rust_prost",
            "rules_rust_prost__h2-0.3.19": "rules_rust_prost__h2-0.3.19",
            "rules_rust_prost__heck": "rules_rust_prost__heck",
            "rules_rust_prost__prost-0.11.9": "rules_rust_prost__prost-0.11.9",
            "rules_rust_prost__prost-types-0.11.9": "rules_rust_prost__prost-types-0.11.9",
            "rules_rust_prost__protoc-gen-prost-0.2.2": "rules_rust_prost__protoc-gen-prost-0.2.2",
            "rules_rust_prost__protoc-gen-tonic-0.2.2": "rules_rust_prost__protoc-gen-tonic-0.2.2",
            "rules_rust_prost__tokio-1.28.2": "rules_rust_prost__tokio-1.28.2",
            "rules_rust_prost__tokio-stream-0.1.14": "rules_rust_prost__tokio-stream-0.1.14",
            "rules_rust_prost__tonic-0.9.2": "rules_rust_prost__tonic-0.9.2",
            "rules_rust_test_load_arbitrary_tool": "rules_rust_test_load_arbitrary_tool",
            "rules_rust_tinyjson": "rules_rust_tinyjson",
            "rules_rust_toolchain_test_target_json": "rules_rust_toolchain_test_target_json",
            "rules_rust_wasm_bindgen__anyhow-1.0.71": "rules_rust_wasm_bindgen__anyhow-1.0.71",
            "rules_rust_wasm_bindgen__assert_cmd-1.0.8": "rules_rust_wasm_bindgen__assert_cmd-1.0.8",
            "rules_rust_wasm_bindgen__diff-0.1.13": "rules_rust_wasm_bindgen__diff-0.1.13",
            "rules_rust_wasm_bindgen__docopt-1.1.1": "rules_rust_wasm_bindgen__docopt-1.1.1",
            "rules_rust_wasm_bindgen__env_logger-0.8.4": "rules_rust_wasm_bindgen__env_logger-0.8.4",
            "rules_rust_wasm_bindgen__log-0.4.19": "rules_rust_wasm_bindgen__log-0.4.19",
            "rules_rust_wasm_bindgen__predicates-1.0.8": "rules_rust_wasm_bindgen__predicates-1.0.8",
            "rules_rust_wasm_bindgen__rayon-1.7.0": "rules_rust_wasm_bindgen__rayon-1.7.0",
            "rules_rust_wasm_bindgen__rouille-3.6.2": "rules_rust_wasm_bindgen__rouille-3.6.2",
            "rules_rust_wasm_bindgen__serde-1.0.171": "rules_rust_wasm_bindgen__serde-1.0.171",
            "rules_rust_wasm_bindgen__serde_derive-1.0.171": "rules_rust_wasm_bindgen__serde_derive-1.0.171",
            "rules_rust_wasm_bindgen__serde_json-1.0.102": "rules_rust_wasm_bindgen__serde_json-1.0.102",
            "rules_rust_wasm_bindgen__tempfile-3.6.0": "rules_rust_wasm_bindgen__tempfile-3.6.0",
            "rules_rust_wasm_bindgen__ureq-2.8.0": "rules_rust_wasm_bindgen__ureq-2.8.0",
            "rules_rust_wasm_bindgen__walrus-0.20.3": "rules_rust_wasm_bindgen__walrus-0.20.3",
            "rules_rust_wasm_bindgen__wasm-bindgen-0.2.91": "rules_rust_wasm_bindgen__wasm-bindgen-0.2.91",
            "rules_rust_wasm_bindgen__wasm-bindgen-cli-support-0.2.91": "rules_rust_wasm_bindgen__wasm-bindgen-cli-support-0.2.91",
            "rules_rust_wasm_bindgen__wasm-bindgen-shared-0.2.91": "rules_rust_wasm_bindgen__wasm-bindgen-shared-0.2.91",
            "rules_rust_wasm_bindgen__wasmparser-0.102.0": "rules_rust_wasm_bindgen__wasmparser-0.102.0",
            "rules_rust_wasm_bindgen__wasmprinter-0.2.60": "rules_rust_wasm_bindgen__wasmprinter-0.2.60",
            "rules_rust_wasm_bindgen_cli": "rules_rust_wasm_bindgen_cli"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_rust//rust:extensions.bzl",
          "extensionName": "rust",
          "usingModule": "rules_rust@0.40.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_rust/0.40.0/MODULE.bazel",
            "line": 131,
            "column": 21
          },
          "imports": {
            "rust_toolchains": "rust_toolchains",
            "rust_host_tools": "rust_host_tools"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "edition": "2021"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_rust/0.40.0/MODULE.bazel",
                "line": 132,
                "column": 15
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_rust//crate_universe/private/module_extensions:cargo_bazel_bootstrap.bzl",
          "extensionName": "cargo_bazel_bootstrap",
          "usingModule": "rules_rust@0.40.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_rust/0.40.0/MODULE.bazel",
            "line": 141,
            "column": 38
          },
          "imports": {
            "cargo_bazel_bootstrap": "cargo_bazel_bootstrap"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.5.0",
        "platforms": "platforms@0.0.8",
        "rules_cc": "rules_cc@0.0.9",
        "rules_license": "rules_license@0.0.8",
        "rules_proto": "rules_proto@6.0.0-rc2",
        "build_bazel_apple_support": "apple_support@1.13.0",
        "com_google_protobuf": "protobuf@23.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_rust~0.40.0",
          "urls": [
            "https://github.com/bazelbuild/rules_rust/releases/download/0.40.0/rules_rust-v0.40.0.tar.gz"
          ],
          "integrity": "sha256-ww398ehv1QZQp26mRbOkXy8AZnsGGHpoXpVU4WfKl+4=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_pkg@0.10.1": {
      "name": "rules_pkg",
      "version": "0.10.1",
      "key": "rules_pkg@0.10.1",
      "repoName": "rules_pkg",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "rules_license": "rules_license@0.0.8",
        "rules_python": "rules_python@0.24.0",
        "bazel_skylib": "bazel_skylib@1.5.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_pkg~0.10.1",
          "urls": [
            "https://github.com/bazelbuild/rules_pkg/releases/download/0.10.1/rules_pkg-0.10.1.tar.gz"
          ],
          "integrity": "sha256-0lCSSi7MUXaAj8TCXVz16eeeY0bXnVqxxJPiieci0dA=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_oci@1.7.4": {
      "name": "rules_oci",
      "version": "1.7.4",
      "key": "rules_oci@1.7.4",
      "repoName": "rules_oci",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@oci_crane_toolchains//:all",
        "@oci_crane_registry_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_oci//oci:extensions.bzl",
          "extensionName": "oci",
          "usingModule": "rules_oci@1.7.4",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_oci/1.7.4/MODULE.bazel",
            "line": 14,
            "column": 20
          },
          "imports": {
            "oci_crane_registry_toolchains": "oci_crane_registry_toolchains",
            "oci_crane_toolchains": "oci_crane_toolchains"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchains",
              "attributeValues": {
                "crane_version": "v0.18.0"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_oci/1.7.4/MODULE.bazel",
                "line": 15,
                "column": 15
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "aspect_bazel_lib": "aspect_bazel_lib@1.36.0",
        "bazel_skylib": "bazel_skylib@1.5.0",
        "platforms": "platforms@0.0.8",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_oci~1.7.4",
          "urls": [
            "https://github.com/bazel-contrib/rules_oci/releases/download/v1.7.4/rules_oci-v1.7.4.tar.gz"
          ],
          "integrity": "sha256-SidulWbANJFknu9j8nwoFswiL0HM3r2X0sUVnoSRfDs=",
          "strip_prefix": "rules_oci-1.7.4",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_oci/1.7.4/patches/module_dot_bazel_version.patch": "sha256-AvvGe2eMfSeeaNZNs0cqW3dnMChuCLMtVCYgg6Ze7jU="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "bazel_tools@_": {
      "name": "bazel_tools",
      "version": "",
      "key": "bazel_tools@_",
      "repoName": "bazel_tools",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@local_config_cc_toolchains//:all",
        "@local_config_sh//:local_sh_toolchain"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@bazel_tools//tools/cpp:cc_configure.bzl",
          "extensionName": "cc_configure_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 17,
            "column": 29
          },
          "imports": {
            "local_config_cc": "local_config_cc",
            "local_config_cc_toolchains": "local_config_cc_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/osx:xcode_configure.bzl",
          "extensionName": "xcode_configure_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 21,
            "column": 32
          },
          "imports": {
            "local_config_xcode": "local_config_xcode"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_java//java:extensions.bzl",
          "extensionName": "toolchains",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 24,
            "column": 32
          },
          "imports": {
            "local_jdk": "local_jdk",
            "remote_java_tools": "remote_java_tools",
            "remote_java_tools_linux": "remote_java_tools_linux",
            "remote_java_tools_windows": "remote_java_tools_windows",
            "remote_java_tools_darwin_x86_64": "remote_java_tools_darwin_x86_64",
            "remote_java_tools_darwin_arm64": "remote_java_tools_darwin_arm64"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/sh:sh_configure.bzl",
          "extensionName": "sh_configure_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 35,
            "column": 39
          },
          "imports": {
            "local_config_sh": "local_config_sh"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/test:extensions.bzl",
          "extensionName": "remote_coverage_tools_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 39,
            "column": 48
          },
          "imports": {
            "remote_coverage_tools": "remote_coverage_tools"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/android:android_extensions.bzl",
          "extensionName": "remote_android_tools_extensions",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 42,
            "column": 42
          },
          "imports": {
            "android_gmaven_r8": "android_gmaven_r8",
            "android_tools": "android_tools"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "rules_cc": "rules_cc@0.0.9",
        "rules_java": "rules_java@7.1.0",
        "rules_license": "rules_license@0.0.8",
        "rules_proto": "rules_proto@6.0.0-rc2",
        "rules_python": "rules_python@0.24.0",
        "platforms": "platforms@0.0.8",
        "com_google_protobuf": "protobuf@23.1",
        "zlib": "zlib@1.3",
        "build_bazel_apple_support": "apple_support@1.13.0",
        "local_config_platform": "local_config_platform@_"
      }
    },
    "local_config_platform@_": {
      "name": "local_config_platform",
      "version": "",
      "key": "local_config_platform@_",
      "repoName": "local_config_platform",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "platforms": "platforms@0.0.8",
        "bazel_tools": "bazel_tools@_"
      }
    },
    "rules_license@0.0.8": {
      "name": "rules_license",
      "version": "0.0.8",
      "key": "rules_license@0.0.8",
      "repoName": "rules_license",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_license~0.0.8",
          "urls": [
            "https://github.com/bazelbuild/rules_license/releases/download/0.0.8/rules_license-0.0.8.tar.gz"
          ],
          "integrity": "sha256-JBsG8wl/0Yb/RogyFQ1swUIkfcQqMqrvtW0AmYlf0ik=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "bazel_features@1.2.0": {
      "name": "bazel_features",
      "version": "1.2.0",
      "key": "bazel_features@1.2.0",
      "repoName": "bazel_features",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@bazel_features//private:extensions.bzl",
          "extensionName": "version_extension",
          "usingModule": "bazel_features@1.2.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/bazel_features/1.2.0/MODULE.bazel",
            "line": 6,
            "column": 24
          },
          "imports": {
            "bazel_features_globals": "bazel_features_globals",
            "bazel_features_version": "bazel_features_version"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "bazel_features~1.2.0",
          "urls": [
            "https://github.com/bazel-contrib/bazel_features/releases/download/v1.2.0/bazel_features-v1.2.0.tar.gz"
          ],
          "integrity": "sha256-uHicg8iT1+8wQdPyeVd0k2sn/2FwGnBd9S/UHW3b9pI=",
          "strip_prefix": "bazel_features-1.2.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/bazel_features/1.2.0/patches/module_dot_bazel_version.patch": "sha256-B0rNFSA7VB65YY95ORkzTgsn21RkUwlAb1Xy2y2PyXA="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_python@0.24.0": {
      "name": "rules_python",
      "version": "0.24.0",
      "key": "rules_python@0.24.0",
      "repoName": "rules_python",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@pythons_hub//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_python//python/extensions/private:internal_deps.bzl",
          "extensionName": "internal_deps",
          "usingModule": "rules_python@0.24.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_python/0.24.0/MODULE.bazel",
            "line": 14,
            "column": 30
          },
          "imports": {
            "pypi__build": "pypi__build",
            "pypi__click": "pypi__click",
            "pypi__colorama": "pypi__colorama",
            "pypi__importlib_metadata": "pypi__importlib_metadata",
            "pypi__installer": "pypi__installer",
            "pypi__more_itertools": "pypi__more_itertools",
            "pypi__packaging": "pypi__packaging",
            "pypi__pep517": "pypi__pep517",
            "pypi__pip": "pypi__pip",
            "pypi__pip_tools": "pypi__pip_tools",
            "pypi__setuptools": "pypi__setuptools",
            "pypi__tomli": "pypi__tomli",
            "pypi__wheel": "pypi__wheel",
            "pypi__zipp": "pypi__zipp"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "install",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_python/0.24.0/MODULE.bazel",
                "line": 15,
                "column": 22
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_python//python/extensions:python.bzl",
          "extensionName": "python",
          "usingModule": "rules_python@0.24.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_python/0.24.0/MODULE.bazel",
            "line": 36,
            "column": 23
          },
          "imports": {
            "pythons_hub": "pythons_hub"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": true,
                "python_version": "3.11"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_python/0.24.0/MODULE.bazel",
                "line": 42,
                "column": 17
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "platforms": "platforms@0.0.8",
        "bazel_skylib": "bazel_skylib@1.5.0",
        "rules_proto": "rules_proto@6.0.0-rc2",
        "com_google_protobuf": "protobuf@23.1",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_python~0.24.0",
          "urls": [
            "https://github.com/bazelbuild/rules_python/releases/download/0.24.0/rules_python-0.24.0.tar.gz"
          ],
          "integrity": "sha256-CoADsEQpTXhArH2dc+7wXWzraC11FngaTsYu6zRwJXg=",
          "strip_prefix": "rules_python-0.24.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_python/0.24.0/patches/module_dot_bazel_version.patch": "sha256-cz8Rx8aNLvYvSpiVWk8umcsBy6jAAC0YwU42zj1cNlU="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "rules_cc@0.0.9": {
      "name": "rules_cc",
      "version": "0.0.9",
      "key": "rules_cc@0.0.9",
      "repoName": "rules_cc",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@local_config_cc_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@bazel_tools//tools/cpp:cc_configure.bzl",
          "extensionName": "cc_configure_extension",
          "usingModule": "rules_cc@0.0.9",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_cc/0.0.9/MODULE.bazel",
            "line": 9,
            "column": 29
          },
          "imports": {
            "local_config_cc_toolchains": "local_config_cc_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "platforms": "platforms@0.0.8",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_cc~0.0.9",
          "urls": [
            "https://github.com/bazelbuild/rules_cc/releases/download/0.0.9/rules_cc-0.0.9.tar.gz"
          ],
          "integrity": "sha256-IDeHW5pEVtzkp50RKorohbvEqtlo5lh9ym5k86CQDN8=",
          "strip_prefix": "rules_cc-0.0.9",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_cc/0.0.9/patches/module_dot_bazel_version.patch": "sha256-mM+qzOI0SgAdaJBlWOSMwMPKpaA9b7R37Hj/tp5bb4g="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "rules_java@7.1.0": {
      "name": "rules_java",
      "version": "7.1.0",
      "key": "rules_java@7.1.0",
      "repoName": "rules_java",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "//toolchains:all",
        "@local_jdk//:runtime_toolchain_definition",
        "@local_jdk//:bootstrap_runtime_toolchain_definition",
        "@remotejdk11_linux_toolchain_config_repo//:all",
        "@remotejdk11_linux_aarch64_toolchain_config_repo//:all",
        "@remotejdk11_linux_ppc64le_toolchain_config_repo//:all",
        "@remotejdk11_linux_s390x_toolchain_config_repo//:all",
        "@remotejdk11_macos_toolchain_config_repo//:all",
        "@remotejdk11_macos_aarch64_toolchain_config_repo//:all",
        "@remotejdk11_win_toolchain_config_repo//:all",
        "@remotejdk11_win_arm64_toolchain_config_repo//:all",
        "@remotejdk17_linux_toolchain_config_repo//:all",
        "@remotejdk17_linux_aarch64_toolchain_config_repo//:all",
        "@remotejdk17_linux_ppc64le_toolchain_config_repo//:all",
        "@remotejdk17_linux_s390x_toolchain_config_repo//:all",
        "@remotejdk17_macos_toolchain_config_repo//:all",
        "@remotejdk17_macos_aarch64_toolchain_config_repo//:all",
        "@remotejdk17_win_toolchain_config_repo//:all",
        "@remotejdk17_win_arm64_toolchain_config_repo//:all",
        "@remotejdk21_linux_toolchain_config_repo//:all",
        "@remotejdk21_linux_aarch64_toolchain_config_repo//:all",
        "@remotejdk21_macos_toolchain_config_repo//:all",
        "@remotejdk21_macos_aarch64_toolchain_config_repo//:all",
        "@remotejdk21_win_toolchain_config_repo//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_java//java:extensions.bzl",
          "extensionName": "toolchains",
          "usingModule": "rules_java@7.1.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_java/7.1.0/MODULE.bazel",
            "line": 19,
            "column": 27
          },
          "imports": {
            "remote_java_tools": "remote_java_tools",
            "remote_java_tools_linux": "remote_java_tools_linux",
            "remote_java_tools_windows": "remote_java_tools_windows",
            "remote_java_tools_darwin_x86_64": "remote_java_tools_darwin_x86_64",
            "remote_java_tools_darwin_arm64": "remote_java_tools_darwin_arm64",
            "local_jdk": "local_jdk",
            "remotejdk11_linux_toolchain_config_repo": "remotejdk11_linux_toolchain_config_repo",
            "remotejdk11_linux_aarch64_toolchain_config_repo": "remotejdk11_linux_aarch64_toolchain_config_repo",
            "remotejdk11_linux_ppc64le_toolchain_config_repo": "remotejdk11_linux_ppc64le_toolchain_config_repo",
            "remotejdk11_linux_s390x_toolchain_config_repo": "remotejdk11_linux_s390x_toolchain_config_repo",
            "remotejdk11_macos_toolchain_config_repo": "remotejdk11_macos_toolchain_config_repo",
            "remotejdk11_macos_aarch64_toolchain_config_repo": "remotejdk11_macos_aarch64_toolchain_config_repo",
            "remotejdk11_win_toolchain_config_repo": "remotejdk11_win_toolchain_config_repo",
            "remotejdk11_win_arm64_toolchain_config_repo": "remotejdk11_win_arm64_toolchain_config_repo",
            "remotejdk17_linux_toolchain_config_repo": "remotejdk17_linux_toolchain_config_repo",
            "remotejdk17_linux_aarch64_toolchain_config_repo": "remotejdk17_linux_aarch64_toolchain_config_repo",
            "remotejdk17_linux_ppc64le_toolchain_config_repo": "remotejdk17_linux_ppc64le_toolchain_config_repo",
            "remotejdk17_linux_s390x_toolchain_config_repo": "remotejdk17_linux_s390x_toolchain_config_repo",
            "remotejdk17_macos_toolchain_config_repo": "remotejdk17_macos_toolchain_config_repo",
            "remotejdk17_macos_aarch64_toolchain_config_repo": "remotejdk17_macos_aarch64_toolchain_config_repo",
            "remotejdk17_win_toolchain_config_repo": "remotejdk17_win_toolchain_config_repo",
            "remotejdk17_win_arm64_toolchain_config_repo": "remotejdk17_win_arm64_toolchain_config_repo",
            "remotejdk21_linux_toolchain_config_repo": "remotejdk21_linux_toolchain_config_repo",
            "remotejdk21_linux_aarch64_toolchain_config_repo": "remotejdk21_linux_aarch64_toolchain_config_repo",
            "remotejdk21_macos_toolchain_config_repo": "remotejdk21_macos_toolchain_config_repo",
            "remotejdk21_macos_aarch64_toolchain_config_repo": "remotejdk21_macos_aarch64_toolchain_config_repo",
            "remotejdk21_win_toolchain_config_repo": "remotejdk21_win_toolchain_config_repo"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "platforms": "platforms@0.0.8",
        "rules_cc": "rules_cc@0.0.9",
        "bazel_skylib": "bazel_skylib@1.5.0",
        "rules_proto": "rules_proto@6.0.0-rc2",
        "rules_license": "rules_license@0.0.8",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_java~7.1.0",
          "urls": [
            "https://github.com/bazelbuild/rules_java/releases/download/7.1.0/rules_java-7.1.0.tar.gz"
          ],
          "integrity": "sha256-o3pOX2OrgnFuXdau75iO2EYcegC46TYnImKJn1h81OE=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "abseil-cpp@20230802.0.bcr.1": {
      "name": "abseil-cpp",
      "version": "20230802.0.bcr.1",
      "key": "abseil-cpp@20230802.0.bcr.1",
      "repoName": "abseil-cpp",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "rules_cc": "rules_cc@0.0.9",
        "platforms": "platforms@0.0.8",
        "bazel_skylib": "bazel_skylib@1.5.0",
        "com_google_googletest": "googletest@1.14.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "abseil-cpp~20230802.0.bcr.1",
          "urls": [
            "https://github.com/abseil/abseil-cpp/archive/refs/tags/20230802.0.tar.gz"
          ],
          "integrity": "sha256-WdKXavnW7PABqBo1dJpuVRozW5SdNJGM+t4Hc3udk8U=",
          "strip_prefix": "abseil-cpp-20230802.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/abseil-cpp/20230802.0.bcr.1/patches/module_dot_bazel.patch": "sha256-Ku6wJ7uNqANq3fVmW03ySSUddevratZDsJ67NqtXIEY="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "zlib@1.3": {
      "name": "zlib",
      "version": "1.3",
      "key": "zlib@1.3",
      "repoName": "zlib",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "platforms": "platforms@0.0.8",
        "rules_cc": "rules_cc@0.0.9",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "zlib~1.3",
          "urls": [
            "https://github.com/madler/zlib/releases/download/v1.3/zlib-1.3.tar.gz"
          ],
          "integrity": "sha256-/wukwpIBPbwnUws6geH5qBPNOd4Byl4Pi/NVcC76WT4=",
          "strip_prefix": "zlib-1.3",
          "remote_patches": {
            "https://bcr.bazel.build/modules/zlib/1.3/patches/add_build_file.patch": "sha256-Ei+FYaaOo7A3jTKunMEodTI0Uw5NXQyZEcboMC8JskY=",
            "https://bcr.bazel.build/modules/zlib/1.3/patches/module_dot_bazel.patch": "sha256-fPWLM+2xaF/kuy+kZc1YTfW6hNjrkG400Ho7gckuyJk="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "upb@0.0.0-20230516-61a97ef": {
      "name": "upb",
      "version": "0.0.0-20230516-61a97ef",
      "key": "upb@0.0.0-20230516-61a97ef",
      "repoName": "upb",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@upb//:non_module_deps.bzl",
          "extensionName": "non_module_deps",
          "usingModule": "upb@0.0.0-20230516-61a97ef",
          "location": {
            "file": "https://bcr.bazel.build/modules/upb/0.0.0-20230516-61a97ef/MODULE.bazel",
            "line": 15,
            "column": 32
          },
          "imports": {
            "utf8_range": "utf8_range"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.5.0",
        "rules_proto": "rules_proto@6.0.0-rc2",
        "com_google_protobuf": "protobuf@23.1",
        "com_google_absl": "abseil-cpp@20230802.0.bcr.1",
        "rules_pkg": "rules_pkg@0.10.1",
        "platforms": "platforms@0.0.8",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "upb~0.0.0-20230516-61a97ef",
          "urls": [
            "https://github.com/protocolbuffers/upb/archive/61a97efa24a5ce01fb8cc73c9d1e6e7060f8ea98.tar.gz"
          ],
          "integrity": "sha256-fRnyrJweUIqGonKRPZqmfIFHgn+UkDWCiRC7BdnyzwM=",
          "strip_prefix": "upb-61a97efa24a5ce01fb8cc73c9d1e6e7060f8ea98",
          "remote_patches": {
            "https://bcr.bazel.build/modules/upb/0.0.0-20230516-61a97ef/patches/0001-Add-MODULE.bazel.patch": "sha256-YSOPeNFt006ghZRI1D056RQ1USwCodZnjXMw6pAPhKc=",
            "https://bcr.bazel.build/modules/upb/0.0.0-20230516-61a97ef/patches/0002-Add-utf8_range-dependency.patch": "sha256-L9jPxcjZqoJh5t9mH4BR01puRI5aUY4jtYptZt5T/p8=",
            "https://bcr.bazel.build/modules/upb/0.0.0-20230516-61a97ef/patches/0003-Backport-path-generation-instead-of-hardcoded-one.patch": "sha256-K+OqQb2b+5k43UOwHupBlfqakuNST470j/yTfvwjj04="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_jvm_external@4.4.2": {
      "name": "rules_jvm_external",
      "version": "4.4.2",
      "key": "rules_jvm_external@4.4.2",
      "repoName": "rules_jvm_external",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_jvm_external//:non-module-deps.bzl",
          "extensionName": "non_module_deps",
          "usingModule": "rules_jvm_external@4.4.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_jvm_external/4.4.2/MODULE.bazel",
            "line": 9,
            "column": 32
          },
          "imports": {
            "io_bazel_rules_kotlin": "io_bazel_rules_kotlin"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": ":extensions.bzl",
          "extensionName": "maven",
          "usingModule": "rules_jvm_external@4.4.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_jvm_external/4.4.2/MODULE.bazel",
            "line": 16,
            "column": 22
          },
          "imports": {
            "rules_jvm_external_deps": "rules_jvm_external_deps"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "install",
              "attributeValues": {
                "name": "rules_jvm_external_deps",
                "artifacts": [
                  "com.google.cloud:google-cloud-core:1.93.10",
                  "com.google.cloud:google-cloud-storage:1.113.4",
                  "com.google.code.gson:gson:2.9.0",
                  "org.apache.maven:maven-artifact:3.8.6",
                  "software.amazon.awssdk:s3:2.17.183"
                ],
                "lock_file": "@rules_jvm_external//:rules_jvm_external_deps_install.json"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_jvm_external/4.4.2/MODULE.bazel",
                "line": 18,
                "column": 14
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.5.0",
        "io_bazel_stardoc": "stardoc@0.5.4",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_jvm_external~4.4.2",
          "urls": [
            "https://github.com/bazelbuild/rules_jvm_external/archive/refs/tags/4.4.2.zip"
          ],
          "integrity": "sha256-c1YC9QgT6y6pPKP15DsZWb2AshO4NqB6YqKddXZwt3s=",
          "strip_prefix": "rules_jvm_external-4.4.2",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "googletest@1.14.0": {
      "name": "googletest",
      "version": "1.14.0",
      "key": "googletest@1.14.0",
      "repoName": "googletest",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "com_google_absl": "abseil-cpp@20230802.0.bcr.1",
        "platforms": "platforms@0.0.8",
        "rules_cc": "rules_cc@0.0.9",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "googletest~1.14.0",
          "urls": [
            "https://github.com/google/googletest/archive/refs/tags/v1.14.0.tar.gz"
          ],
          "integrity": "sha256-itWYxzrXluDYKAsILOvYKmMNc+c808cAV5OKZQG7pdc=",
          "strip_prefix": "googletest-1.14.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/googletest/1.14.0/patches/module_dot_bazel.patch": "sha256-CSomzvti38LCuURDG5EEoa3O1tQF3cKKt/mknnP1qcc="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "apple_support@1.13.0": {
      "name": "apple_support",
      "version": "1.13.0",
      "key": "apple_support@1.13.0",
      "repoName": "build_bazel_apple_support",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@local_config_apple_cc_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@build_bazel_apple_support//crosstool:setup.bzl",
          "extensionName": "apple_cc_configure_extension",
          "usingModule": "apple_support@1.13.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/apple_support/1.13.0/MODULE.bazel",
            "line": 19,
            "column": 35
          },
          "imports": {
            "local_config_apple_cc": "local_config_apple_cc",
            "local_config_apple_cc_toolchains": "local_config_apple_cc_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.5.0",
        "platforms": "platforms@0.0.8",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "apple_support~1.13.0",
          "urls": [
            "https://github.com/bazelbuild/apple_support/releases/download/1.13.0/apple_support.1.13.0.tar.gz"
          ],
          "integrity": "sha256-HEAx5ytFagSNgXf1mlWBgIwHWF+p4lXG9f77h1KvfkA=",
          "strip_prefix": "",
          "remote_patches": {
            "https://bcr.bazel.build/modules/apple_support/1.13.0/patches/module_dot_bazel_version.patch": "sha256-OqLgfAMNy6ZUF/WaVkNXzB/KcCYLlHLspYNk67mcASA="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "aspect_bazel_lib@1.36.0": {
      "name": "aspect_bazel_lib",
      "version": "1.36.0",
      "key": "aspect_bazel_lib@1.36.0",
      "repoName": "aspect_bazel_lib",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@copy_directory_toolchains//:all",
        "@copy_to_directory_toolchains//:all",
        "@jq_toolchains//:all",
        "@yq_toolchains//:all",
        "@coreutils_toolchains//:all",
        "@expand_template_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@aspect_bazel_lib//lib:extensions.bzl",
          "extensionName": "ext",
          "usingModule": "aspect_bazel_lib@1.36.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/1.36.0/MODULE.bazel",
            "line": 16,
            "column": 20
          },
          "imports": {
            "copy_directory_toolchains": "copy_directory_toolchains",
            "copy_to_directory_toolchains": "copy_to_directory_toolchains",
            "coreutils_toolchains": "coreutils_toolchains",
            "expand_template_toolchains": "expand_template_toolchains",
            "jq_toolchains": "jq_toolchains",
            "yq_toolchains": "yq_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.5.0",
        "platforms": "platforms@0.0.8",
        "io_bazel_stardoc": "stardoc@0.5.4",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "aspect_bazel_lib~1.36.0",
          "urls": [
            "https://github.com/aspect-build/bazel-lib/releases/download/v1.36.0/bazel-lib-v1.36.0.tar.gz"
          ],
          "integrity": "sha256-y/Rz1jCrZ7NkYdg7OP3ETlb0W3jQPEBeSVgoAhESTXk=",
          "strip_prefix": "bazel-lib-1.36.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/aspect_bazel_lib/1.36.0/patches/go_dev_dep.patch": "sha256-OcqYZNkw6zXpYsZhidT99VrrydGAuEbgDkiFyVRlKec=",
            "https://bcr.bazel.build/modules/aspect_bazel_lib/1.36.0/patches/module_dot_bazel_version.patch": "sha256-cetZXQWGkLstl2v0BlbA5fqcPpTbFf/0BHNiyfuz+Ro="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "stardoc@0.5.4": {
      "name": "stardoc",
      "version": "0.5.4",
      "key": "stardoc@0.5.4",
      "repoName": "stardoc",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.5.0",
        "rules_java": "rules_java@7.1.0",
        "rules_license": "rules_license@0.0.8",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "stardoc~0.5.4",
          "urls": [
            "https://github.com/bazelbuild/stardoc/releases/download/0.5.4/stardoc-0.5.4.tar.gz"
          ],
          "integrity": "sha256-7FcTnkZvquVj8vw5YJ2klIpHm7UbbWeu3X2bG4BZxDM=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    }
  },
  "moduleExtensions": {
    "@@apple_support~1.13.0//crosstool:setup.bzl%apple_cc_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "TMkUP4/N3ZORvZrcDg9FxSoW9r/7+uDVH/SI2biRyJg=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_apple_cc": {
            "bzlFile": "@@apple_support~1.13.0//crosstool:setup.bzl",
            "ruleClassName": "_apple_cc_autoconf",
            "attributes": {
              "name": "apple_support~1.13.0~apple_cc_configure_extension~local_config_apple_cc"
            }
          },
          "local_config_apple_cc_toolchains": {
            "bzlFile": "@@apple_support~1.13.0//crosstool:setup.bzl",
            "ruleClassName": "_apple_cc_autoconf_toolchains",
            "attributes": {
              "name": "apple_support~1.13.0~apple_cc_configure_extension~local_config_apple_cc_toolchains"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "apple_support~1.13.0",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@aspect_bazel_lib~1.36.0//lib:extensions.bzl%ext": {
      "general": {
        "bzlTransitiveDigest": "TqwllVtd1vHvhHW7ZEVrYUPuPEo7T6lbB1ENv0JmTKc=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "expand_template_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~expand_template_windows_amd64",
              "platform": "windows_amd64"
            }
          },
          "copy_to_directory_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~copy_to_directory_windows_amd64",
              "platform": "windows_amd64"
            }
          },
          "jq": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_host_alias_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~jq"
            }
          },
          "jq_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~jq_darwin_amd64",
              "platform": "darwin_amd64",
              "version": "1.6"
            }
          },
          "expand_template_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~expand_template_darwin_arm64",
              "platform": "darwin_arm64"
            }
          },
          "copy_to_directory_freebsd_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~copy_to_directory_freebsd_amd64",
              "platform": "freebsd_amd64"
            }
          },
          "expand_template_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~expand_template_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "copy_to_directory_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~copy_to_directory_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "coreutils_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~coreutils_darwin_arm64",
              "platform": "darwin_arm64",
              "version": "0.0.16"
            }
          },
          "coreutils_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~coreutils_linux_amd64",
              "platform": "linux_amd64",
              "version": "0.0.16"
            }
          },
          "copy_directory_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~copy_directory_toolchains",
              "user_repository_name": "copy_directory"
            }
          },
          "copy_to_directory_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~copy_to_directory_linux_arm64",
              "platform": "linux_arm64"
            }
          },
          "yq_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~yq_linux_amd64",
              "platform": "linux_amd64",
              "version": "4.25.2"
            }
          },
          "copy_to_directory_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~copy_to_directory_darwin_arm64",
              "platform": "darwin_arm64"
            }
          },
          "copy_directory_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~copy_directory_darwin_amd64",
              "platform": "darwin_amd64"
            }
          },
          "coreutils_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~coreutils_darwin_amd64",
              "platform": "darwin_amd64",
              "version": "0.0.16"
            }
          },
          "coreutils_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~coreutils_linux_arm64",
              "platform": "linux_arm64",
              "version": "0.0.16"
            }
          },
          "coreutils_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~coreutils_toolchains",
              "user_repository_name": "coreutils"
            }
          },
          "copy_directory_freebsd_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~copy_directory_freebsd_amd64",
              "platform": "freebsd_amd64"
            }
          },
          "yq_linux_s390x": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~yq_linux_s390x",
              "platform": "linux_s390x",
              "version": "4.25.2"
            }
          },
          "yq": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_host_alias_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~yq"
            }
          },
          "expand_template_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~expand_template_darwin_amd64",
              "platform": "darwin_amd64"
            }
          },
          "copy_directory_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~copy_directory_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "jq_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~jq_darwin_arm64",
              "platform": "darwin_arm64",
              "version": "1.6"
            }
          },
          "yq_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~yq_darwin_amd64",
              "platform": "darwin_amd64",
              "version": "4.25.2"
            }
          },
          "copy_directory_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~copy_directory_linux_arm64",
              "platform": "linux_arm64"
            }
          },
          "expand_template_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~expand_template_linux_arm64",
              "platform": "linux_arm64"
            }
          },
          "jq_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~jq_linux_amd64",
              "platform": "linux_amd64",
              "version": "1.6"
            }
          },
          "expand_template_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~expand_template_toolchains",
              "user_repository_name": "expand_template"
            }
          },
          "yq_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~yq_windows_amd64",
              "platform": "windows_amd64",
              "version": "4.25.2"
            }
          },
          "copy_to_directory_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~copy_to_directory_darwin_amd64",
              "platform": "darwin_amd64"
            }
          },
          "jq_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~jq_windows_amd64",
              "platform": "windows_amd64",
              "version": "1.6"
            }
          },
          "expand_template_freebsd_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~expand_template_freebsd_amd64",
              "platform": "freebsd_amd64"
            }
          },
          "yq_linux_ppc64le": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~yq_linux_ppc64le",
              "platform": "linux_ppc64le",
              "version": "4.25.2"
            }
          },
          "copy_to_directory_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~copy_to_directory_toolchains",
              "user_repository_name": "copy_to_directory"
            }
          },
          "jq_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~jq_toolchains",
              "user_repository_name": "jq"
            }
          },
          "copy_directory_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~copy_directory_darwin_arm64",
              "platform": "darwin_arm64"
            }
          },
          "copy_directory_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~copy_directory_windows_amd64",
              "platform": "windows_amd64"
            }
          },
          "yq_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~yq_darwin_arm64",
              "platform": "darwin_arm64",
              "version": "4.25.2"
            }
          },
          "yq_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~yq_toolchains",
              "user_repository_name": "yq"
            }
          },
          "coreutils_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~coreutils_windows_amd64",
              "platform": "windows_amd64",
              "version": "0.0.16"
            }
          },
          "yq_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~1.36.0~ext~yq_linux_arm64",
              "platform": "linux_arm64",
              "version": "4.25.2"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "aspect_bazel_lib~1.36.0",
            "aspect_bazel_lib",
            "aspect_bazel_lib~1.36.0"
          ],
          [
            "aspect_bazel_lib~1.36.0",
            "bazel_skylib",
            "bazel_skylib~1.5.0"
          ],
          [
            "aspect_bazel_lib~1.36.0",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@bazel_features~1.2.0//private:extensions.bzl%version_extension": {
      "general": {
        "bzlTransitiveDigest": "xm7Skm1Las5saxzFWt2hbS+e68BWi+MXyt6+lKIhjPA=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "bazel_features_version": {
            "bzlFile": "@@bazel_features~1.2.0//private:version_repo.bzl",
            "ruleClassName": "version_repo",
            "attributes": {
              "name": "bazel_features~1.2.0~version_extension~bazel_features_version"
            }
          },
          "bazel_features_globals": {
            "bzlFile": "@@bazel_features~1.2.0//private:globals_repo.bzl",
            "ruleClassName": "globals_repo",
            "attributes": {
              "name": "bazel_features~1.2.0~version_extension~bazel_features_globals",
              "globals": {
                "RunEnvironmentInfo": "5.3.0",
                "DefaultInfo": "0.0.1",
                "__TestingOnly_NeverAvailable": "1000000000.0.0"
              }
            }
          }
        },
        "recordedRepoMappingEntries": []
      }
    },
    "@@bazel_tools//tools/cpp:cc_configure.bzl%cc_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "mcsWHq3xORJexV5/4eCvNOLxFOQKV6eli3fkr+tEaqE=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_cc": {
            "bzlFile": "@@bazel_tools//tools/cpp:cc_configure.bzl",
            "ruleClassName": "cc_autoconf",
            "attributes": {
              "name": "bazel_tools~cc_configure_extension~local_config_cc"
            }
          },
          "local_config_cc_toolchains": {
            "bzlFile": "@@bazel_tools//tools/cpp:cc_configure.bzl",
            "ruleClassName": "cc_autoconf_toolchains",
            "attributes": {
              "name": "bazel_tools~cc_configure_extension~local_config_cc_toolchains"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "bazel_tools",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@bazel_tools//tools/osx:xcode_configure.bzl%xcode_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "Qh2bWTU6QW6wkrd87qrU4YeY+SG37Nvw3A0PR4Y0L2Y=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_xcode": {
            "bzlFile": "@@bazel_tools//tools/osx:xcode_configure.bzl",
            "ruleClassName": "xcode_autoconf",
            "attributes": {
              "name": "bazel_tools~xcode_configure_extension~local_config_xcode",
              "xcode_locator": "@bazel_tools//tools/osx:xcode_locator.m",
              "remote_xcode": ""
            }
          }
        },
        "recordedRepoMappingEntries": []
      }
    },
    "@@bazel_tools//tools/sh:sh_configure.bzl%sh_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "hp4NgmNjEg5+xgvzfh6L83bt9/aiiWETuNpwNuF1MSU=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_sh": {
            "bzlFile": "@@bazel_tools//tools/sh:sh_configure.bzl",
            "ruleClassName": "sh_config",
            "attributes": {
              "name": "bazel_tools~sh_configure_extension~local_config_sh"
            }
          }
        },
        "recordedRepoMappingEntries": []
      }
    },
    "@@protobuf~23.1//:non_module_deps.bzl%non_module_deps": {
      "general": {
        "bzlTransitiveDigest": "y/QVhgwEpduKjMEF4YflykcfvrWnGGE8W8O3bTxy5eI=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "utf8_range": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "urls": [
                "https://github.com/protocolbuffers/utf8_range/archive/de0b4a8ff9b5d4c98108bdfe723291a33c52c54f.zip"
              ],
              "strip_prefix": "utf8_range-de0b4a8ff9b5d4c98108bdfe723291a33c52c54f",
              "name": "protobuf~23.1~non_module_deps~utf8_range",
              "sha256": "5da960e5e5d92394c809629a03af3c7709d2d3d0ca731dacb3a9fb4bf28f7702"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "protobuf~23.1",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@rules_java~7.1.0//java:extensions.bzl%toolchains": {
      "general": {
        "bzlTransitiveDigest": "D02GmifxnV/IhYgspsJMDZ/aE8HxAjXgek5gi6FSto4=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "remotejdk21_linux_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_linux_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux//:jdk\",\n)\n"
            }
          },
          "remotejdk17_linux_s390x_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_s390x_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_s390x//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_s390x//:jdk\",\n)\n"
            }
          },
          "remotejdk17_macos_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_macos_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos//:jdk\",\n)\n"
            }
          },
          "remotejdk21_macos_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_macos_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk17_linux_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk21_macos_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_macos_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "2a7a99a3ea263dbd8d32a67d1e6e363ba8b25c645c826f5e167a02bbafaff1fa",
              "strip_prefix": "zulu21.28.85-ca-jdk21.0.0-macosx_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-macosx_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-macosx_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk17_linux_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux//:jdk\",\n)\n"
            }
          },
          "remotejdk17_macos_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_macos_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "314b04568ec0ae9b36ba03c9cbd42adc9e1265f74678923b19297d66eb84dcca",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-macosx_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_aarch64.tar.gz"
              ]
            }
          },
          "remote_java_tools_windows": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remote_java_tools_windows",
              "sha256": "c5c70c214a350f12cbf52da8270fa43ba629b795f3dd328028a38f8f0d39c2a1",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.1/java_tools_windows-v13.1.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.1/java_tools_windows-v13.1.zip"
              ]
            }
          },
          "remotejdk11_win": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_win",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "43408193ce2fa0862819495b5ae8541085b95660153f2adcf91a52d3a1710e83",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-win_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-win_x64.zip",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-win_x64.zip"
              ]
            }
          },
          "remotejdk11_win_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_win_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "54174439f2b3fddd11f1048c397fe7bb45d4c9d66d452d6889b013d04d21c4de",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-linux_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk17_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "b9482f2304a1a68a614dfacddcf29569a72f0fac32e6c74f83dc1b9a157b8340",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-linux_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_x64.tar.gz"
              ]
            }
          },
          "remotejdk11_linux_s390x_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_s390x_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_s390x//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_s390x//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux//:jdk\",\n)\n"
            }
          },
          "remotejdk11_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_macos",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "bcaab11cfe586fae7583c6d9d311c64384354fb2638eb9a012eca4c3f1a1d9fd",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-macosx_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_x64.tar.gz"
              ]
            }
          },
          "remotejdk11_win_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_win_arm64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "b8a28e6e767d90acf793ea6f5bed0bb595ba0ba5ebdf8b99f395266161e53ec2",
              "strip_prefix": "jdk-11.0.13+8",
              "urls": [
                "https://mirror.bazel.build/aka.ms/download-jdk/microsoft-jdk-11.0.13.8.1-windows-aarch64.zip"
              ]
            }
          },
          "remotejdk17_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_macos",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "640453e8afe8ffe0fb4dceb4535fb50db9c283c64665eebb0ba68b19e65f4b1f",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-macosx_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_x64.tar.gz"
              ]
            }
          },
          "remotejdk21_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_macos",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "9639b87db586d0c89f7a9892ae47f421e442c64b97baebdff31788fbe23265bd",
              "strip_prefix": "zulu21.28.85-ca-jdk21.0.0-macosx_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-macosx_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-macosx_x64.tar.gz"
              ]
            }
          },
          "remotejdk21_macos_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_macos_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos//:jdk\",\n)\n"
            }
          },
          "remotejdk17_macos_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_macos_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk17_win": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_win",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "192f2afca57701de6ec496234f7e45d971bf623ff66b8ee4a5c81582054e5637",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-win_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_x64.zip",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_x64.zip"
              ]
            }
          },
          "remotejdk11_macos_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_macos_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_ppc64le_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_ppc64le_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_ppc64le//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_ppc64le//:jdk\",\n)\n"
            }
          },
          "remotejdk21_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_linux",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "0c0eadfbdc47a7ca64aeab51b9c061f71b6e4d25d2d87674512e9b6387e9e3a6",
              "strip_prefix": "zulu21.28.85-ca-jdk21.0.0-linux_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-linux_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-linux_x64.tar.gz"
              ]
            }
          },
          "remote_java_tools_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remote_java_tools_linux",
              "sha256": "d134da9b04c9023fb6e56a5d4bffccee73f7bc9572ddc4e747778dacccd7a5a7",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.1/java_tools_linux-v13.1.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.1/java_tools_linux-v13.1.zip"
              ]
            }
          },
          "remotejdk21_win": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_win",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "e9959d500a0d9a7694ac243baf657761479da132f0f94720cbffd092150bd802",
              "strip_prefix": "zulu21.28.85-ca-jdk21.0.0-win_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-win_x64.zip",
                "https://cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-win_x64.zip"
              ]
            }
          },
          "remotejdk21_linux_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_linux_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "1fb64b8036c5d463d8ab59af06bf5b6b006811e6012e3b0eb6bccf57f1c55835",
              "strip_prefix": "zulu21.28.85-ca-jdk21.0.0-linux_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-linux_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-linux_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk11_linux_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_s390x": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_s390x",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "a58fc0361966af0a5d5a31a2d8a208e3c9bb0f54f345596fd80b99ea9a39788b",
              "strip_prefix": "jdk-11.0.15+10",
              "urls": [
                "https://mirror.bazel.build/github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_s390x_linux_hotspot_11.0.15_10.tar.gz",
                "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_s390x_linux_hotspot_11.0.15_10.tar.gz"
              ]
            }
          },
          "remotejdk17_linux_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "6531cef61e416d5a7b691555c8cf2bdff689201b8a001ff45ab6740062b44313",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-linux_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk17_win_arm64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_win_arm64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win_arm64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win_arm64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "a34b404f87a08a61148b38e1416d837189e1df7a040d949e743633daf4695a3c",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-linux_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_x64.tar.gz"
              ]
            }
          },
          "remotejdk11_macos_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_macos_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos//:jdk\",\n)\n"
            }
          },
          "remotejdk17_linux_ppc64le_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_ppc64le_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_ppc64le//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_ppc64le//:jdk\",\n)\n"
            }
          },
          "remotejdk17_win_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_win_arm64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "6802c99eae0d788e21f52d03cab2e2b3bf42bc334ca03cbf19f71eb70ee19f85",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-win_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_aarch64.zip",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_aarch64.zip"
              ]
            }
          },
          "remote_java_tools_darwin_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remote_java_tools_darwin_arm64",
              "sha256": "dab5bb87ec43e980faea6e1cec14bafb217b8e2f5346f53aa784fd715929a930",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.1/java_tools_darwin_arm64-v13.1.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.1/java_tools_darwin_arm64-v13.1.zip"
              ]
            }
          },
          "remotejdk17_linux_ppc64le": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_ppc64le",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "00a4c07603d0218cd678461b5b3b7e25b3253102da4022d31fc35907f21a2efd",
              "strip_prefix": "jdk-17.0.8.1+1",
              "urls": [
                "https://mirror.bazel.build/github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_ppc64le_linux_hotspot_17.0.8.1_1.tar.gz",
                "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_ppc64le_linux_hotspot_17.0.8.1_1.tar.gz"
              ]
            }
          },
          "remotejdk21_linux_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_linux_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_win_arm64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_win_arm64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win_arm64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win_arm64//:jdk\",\n)\n"
            }
          },
          "local_jdk": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:local_java_repository.bzl",
            "ruleClassName": "_local_java_repository_rule",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~local_jdk",
              "java_home": "",
              "version": "",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = {RUNTIME_VERSION},\n)\n"
            }
          },
          "remote_java_tools_darwin_x86_64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remote_java_tools_darwin_x86_64",
              "sha256": "0db40d8505a2b65ef0ed46e4256757807db8162f7acff16225be57c1d5726dbc",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.1/java_tools_darwin_x86_64-v13.1.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.1/java_tools_darwin_x86_64-v13.1.zip"
              ]
            }
          },
          "remote_java_tools": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remote_java_tools",
              "sha256": "286bdbbd66e616fc4ed3f90101418729a73baa7e8c23a98ffbef558f74c0ad14",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.1/java_tools-v13.1.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.1/java_tools-v13.1.zip"
              ]
            }
          },
          "remotejdk17_linux_s390x": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_s390x",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "ffacba69c6843d7ca70d572489d6cc7ab7ae52c60f0852cedf4cf0d248b6fc37",
              "strip_prefix": "jdk-17.0.8.1+1",
              "urls": [
                "https://mirror.bazel.build/github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_s390x_linux_hotspot_17.0.8.1_1.tar.gz",
                "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_s390x_linux_hotspot_17.0.8.1_1.tar.gz"
              ]
            }
          },
          "remotejdk17_win_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_win_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_ppc64le": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_ppc64le",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "a8fba686f6eb8ae1d1a9566821dbd5a85a1108b96ad857fdbac5c1e4649fc56f",
              "strip_prefix": "jdk-11.0.15+10",
              "urls": [
                "https://mirror.bazel.build/github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_ppc64le_linux_hotspot_11.0.15_10.tar.gz",
                "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_ppc64le_linux_hotspot_11.0.15_10.tar.gz"
              ]
            }
          },
          "remotejdk11_macos_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_macos_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "7632bc29f8a4b7d492b93f3bc75a7b61630894db85d136456035ab2a24d38885",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-macosx_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk21_win_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_win_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_win//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_win//:jdk\",\n)\n"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "rules_java~7.1.0",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_java~7.1.0",
            "remote_java_tools",
            "rules_java~7.1.0~toolchains~remote_java_tools"
          ]
        ]
      }
    },
    "@@rules_oci~1.7.4//oci:extensions.bzl%oci": {
      "general": {
        "bzlTransitiveDigest": "lvczCgZ1aZYiGsTTpGQnVzycUZafl88hUYdcgM1uRgA=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "oci_crane_registry_toolchains": {
            "bzlFile": "@@rules_oci~1.7.4//oci/private:toolchains_repo.bzl",
            "ruleClassName": "toolchains_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~oci_crane_registry_toolchains",
              "toolchain_type": "@rules_oci//oci:registry_toolchain_type",
              "toolchain": "@oci_crane_{platform}//:registry_toolchain"
            }
          },
          "copy_to_directory_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~copy_to_directory_windows_amd64",
              "platform": "windows_amd64"
            }
          },
          "jq": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_host_alias_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~jq"
            }
          },
          "oci_crane_darwin_amd64": {
            "bzlFile": "@@rules_oci~1.7.4//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~oci_crane_darwin_amd64",
              "platform": "darwin_amd64",
              "crane_version": "v0.18.0"
            }
          },
          "jq_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~jq_darwin_amd64",
              "platform": "darwin_amd64",
              "version": "1.6"
            }
          },
          "copy_to_directory_freebsd_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~copy_to_directory_freebsd_amd64",
              "platform": "freebsd_amd64"
            }
          },
          "copy_to_directory_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~copy_to_directory_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "oci_crane_linux_arm64": {
            "bzlFile": "@@rules_oci~1.7.4//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~oci_crane_linux_arm64",
              "platform": "linux_arm64",
              "crane_version": "v0.18.0"
            }
          },
          "coreutils_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~coreutils_darwin_arm64",
              "platform": "darwin_arm64",
              "version": "0.0.16"
            }
          },
          "coreutils_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~coreutils_linux_amd64",
              "platform": "linux_amd64",
              "version": "0.0.16"
            }
          },
          "yq_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~yq_linux_amd64",
              "platform": "linux_amd64",
              "version": "4.25.2"
            }
          },
          "copy_to_directory_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~copy_to_directory_linux_arm64",
              "platform": "linux_arm64"
            }
          },
          "oci_crane_linux_armv6": {
            "bzlFile": "@@rules_oci~1.7.4//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~oci_crane_linux_armv6",
              "platform": "linux_armv6",
              "crane_version": "v0.18.0"
            }
          },
          "copy_to_directory_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~copy_to_directory_darwin_arm64",
              "platform": "darwin_arm64"
            }
          },
          "oci_crane_linux_amd64": {
            "bzlFile": "@@rules_oci~1.7.4//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~oci_crane_linux_amd64",
              "platform": "linux_amd64",
              "crane_version": "v0.18.0"
            }
          },
          "coreutils_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~coreutils_darwin_amd64",
              "platform": "darwin_amd64",
              "version": "0.0.16"
            }
          },
          "coreutils_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~coreutils_linux_arm64",
              "platform": "linux_arm64",
              "version": "0.0.16"
            }
          },
          "coreutils_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_toolchains_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~coreutils_toolchains",
              "user_repository_name": "coreutils"
            }
          },
          "distroless_cc_linux_amd64": {
            "bzlFile": "@@rules_oci~1.7.4//oci/private:pull.bzl",
            "ruleClassName": "oci_pull",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~distroless_cc_linux_amd64",
              "scheme": "https",
              "registry": "gcr.io",
              "repository": "distroless/cc",
              "identifier": "sha256:8aad707f96620ee89e27febef51b01c6ff244277a3560fcfcfbe68633ef09193",
              "platform": "linux/amd64",
              "target_name": "distroless_cc_linux_amd64"
            }
          },
          "yq_linux_s390x": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~yq_linux_s390x",
              "platform": "linux_s390x",
              "version": "4.25.2"
            }
          },
          "yq": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_host_alias_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~yq"
            }
          },
          "oci_crane_darwin_arm64": {
            "bzlFile": "@@rules_oci~1.7.4//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~oci_crane_darwin_arm64",
              "platform": "darwin_arm64",
              "crane_version": "v0.18.0"
            }
          },
          "jq_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~jq_darwin_arm64",
              "platform": "darwin_arm64",
              "version": "1.6"
            }
          },
          "yq_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~yq_darwin_amd64",
              "platform": "darwin_amd64",
              "version": "4.25.2"
            }
          },
          "oci_crane_linux_i386": {
            "bzlFile": "@@rules_oci~1.7.4//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~oci_crane_linux_i386",
              "platform": "linux_i386",
              "crane_version": "v0.18.0"
            }
          },
          "jq_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~jq_linux_amd64",
              "platform": "linux_amd64",
              "version": "1.6"
            }
          },
          "distroless_cc_linux_arm64": {
            "bzlFile": "@@rules_oci~1.7.4//oci/private:pull.bzl",
            "ruleClassName": "oci_pull",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~distroless_cc_linux_arm64",
              "scheme": "https",
              "registry": "gcr.io",
              "repository": "distroless/cc",
              "identifier": "sha256:8aad707f96620ee89e27febef51b01c6ff244277a3560fcfcfbe68633ef09193",
              "platform": "linux/arm64",
              "target_name": "distroless_cc_linux_arm64"
            }
          },
          "distroless_cc": {
            "bzlFile": "@@rules_oci~1.7.4//oci/private:pull.bzl",
            "ruleClassName": "oci_alias",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~distroless_cc",
              "target_name": "distroless_cc",
              "scheme": "https",
              "registry": "gcr.io",
              "repository": "distroless/cc",
              "identifier": "sha256:8aad707f96620ee89e27febef51b01c6ff244277a3560fcfcfbe68633ef09193",
              "platforms": {
                "@@platforms//cpu:x86_64": "@distroless_cc_linux_amd64",
                "@@platforms//cpu:arm64": "@distroless_cc_linux_arm64"
              },
              "bzlmod_repository": "distroless_cc",
              "reproducible": true
            }
          },
          "yq_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~yq_windows_amd64",
              "platform": "windows_amd64",
              "version": "4.25.2"
            }
          },
          "oci_crane_windows_armv6": {
            "bzlFile": "@@rules_oci~1.7.4//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~oci_crane_windows_armv6",
              "platform": "windows_armv6",
              "crane_version": "v0.18.0"
            }
          },
          "oci_crane_toolchains": {
            "bzlFile": "@@rules_oci~1.7.4//oci/private:toolchains_repo.bzl",
            "ruleClassName": "toolchains_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~oci_crane_toolchains",
              "toolchain_type": "@rules_oci//oci:crane_toolchain_type",
              "toolchain": "@oci_crane_{platform}//:crane_toolchain"
            }
          },
          "jq_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~jq_windows_amd64",
              "platform": "windows_amd64",
              "version": "1.6"
            }
          },
          "copy_to_directory_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~copy_to_directory_darwin_amd64",
              "platform": "darwin_amd64"
            }
          },
          "yq_linux_ppc64le": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~yq_linux_ppc64le",
              "platform": "linux_ppc64le",
              "version": "4.25.2"
            }
          },
          "jq_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_toolchains_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~jq_toolchains",
              "user_repository_name": "jq"
            }
          },
          "copy_to_directory_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_toolchains_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~copy_to_directory_toolchains",
              "user_repository_name": "copy_to_directory"
            }
          },
          "yq_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~yq_darwin_arm64",
              "platform": "darwin_arm64",
              "version": "4.25.2"
            }
          },
          "yq_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_toolchains_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~yq_toolchains",
              "user_repository_name": "yq"
            }
          },
          "oci_crane_windows_amd64": {
            "bzlFile": "@@rules_oci~1.7.4//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~oci_crane_windows_amd64",
              "platform": "windows_amd64",
              "crane_version": "v0.18.0"
            }
          },
          "oci_crane_linux_s390x": {
            "bzlFile": "@@rules_oci~1.7.4//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~oci_crane_linux_s390x",
              "platform": "linux_s390x",
              "crane_version": "v0.18.0"
            }
          },
          "coreutils_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~coreutils_windows_amd64",
              "platform": "windows_amd64",
              "version": "0.0.16"
            }
          },
          "yq_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~1.36.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.7.4~oci~yq_linux_arm64",
              "platform": "linux_arm64",
              "version": "4.25.2"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "aspect_bazel_lib~1.36.0",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_oci~1.7.4",
            "aspect_bazel_lib",
            "aspect_bazel_lib~1.36.0"
          ],
          [
            "rules_oci~1.7.4",
            "bazel_skylib",
            "bazel_skylib~1.5.0"
          ]
        ]
      }
    },
    "@@rules_python~0.24.0//python/extensions:python.bzl%python": {
      "general": {
        "bzlTransitiveDigest": "MVoR5pi4VuC+9OZZBqlx1+cbNK5737ZdE0G7SdAU+bk=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "python_3_11": {
            "bzlFile": "@@rules_python~0.24.0//python/private:toolchains_repo.bzl",
            "ruleClassName": "toolchain_aliases",
            "attributes": {
              "name": "rules_python~0.24.0~python~python_3_11",
              "python_version": "3.11.1",
              "user_repository_name": "python_3_11"
            }
          },
          "python_3_11_aarch64-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.24.0//python:repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.24.0~python~python_3_11_aarch64-unknown-linux-gnu",
              "sha256": "debf15783bdcb5530504f533d33fda75a7b905cec5361ae8f33da5ba6599f8b4",
              "patches": [],
              "platform": "aarch64-unknown-linux-gnu",
              "python_version": "3.11.1",
              "release_filename": "20230116/cpython-3.11.1+20230116-aarch64-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20230116/cpython-3.11.1+20230116-aarch64-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_11_aarch64-apple-darwin": {
            "bzlFile": "@@rules_python~0.24.0//python:repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.24.0~python~python_3_11_aarch64-apple-darwin",
              "sha256": "4918cdf1cab742a90f85318f88b8122aeaa2d04705803c7b6e78e81a3dd40f80",
              "patches": [],
              "platform": "aarch64-apple-darwin",
              "python_version": "3.11.1",
              "release_filename": "20230116/cpython-3.11.1+20230116-aarch64-apple-darwin-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20230116/cpython-3.11.1+20230116-aarch64-apple-darwin-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_11_x86_64-apple-darwin": {
            "bzlFile": "@@rules_python~0.24.0//python:repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.24.0~python~python_3_11_x86_64-apple-darwin",
              "sha256": "20a4203d069dc9b710f70b09e7da2ce6f473d6b1110f9535fb6f4c469ed54733",
              "patches": [],
              "platform": "x86_64-apple-darwin",
              "python_version": "3.11.1",
              "release_filename": "20230116/cpython-3.11.1+20230116-x86_64-apple-darwin-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20230116/cpython-3.11.1+20230116-x86_64-apple-darwin-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "pythons_hub": {
            "bzlFile": "@@rules_python~0.24.0//python/extensions/private:pythons_hub.bzl",
            "ruleClassName": "hub_repo",
            "attributes": {
              "name": "rules_python~0.24.0~python~pythons_hub",
              "default_python_version": "3.11",
              "toolchain_prefixes": [
                "_0000_python_3_11_"
              ],
              "toolchain_python_versions": [
                "3.11"
              ],
              "toolchain_set_python_version_constraints": [
                "False"
              ],
              "toolchain_user_repository_names": [
                "python_3_11"
              ]
            }
          },
          "python_versions": {
            "bzlFile": "@@rules_python~0.24.0//python/private:toolchains_repo.bzl",
            "ruleClassName": "multi_toolchain_aliases",
            "attributes": {
              "name": "rules_python~0.24.0~python~python_versions",
              "python_versions": {
                "3.11": "python_3_11"
              }
            }
          },
          "python_3_11_x86_64-pc-windows-msvc": {
            "bzlFile": "@@rules_python~0.24.0//python:repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.24.0~python~python_3_11_x86_64-pc-windows-msvc",
              "sha256": "edc08979cb0666a597466176511529c049a6f0bba8adf70df441708f766de5bf",
              "patches": [],
              "platform": "x86_64-pc-windows-msvc",
              "python_version": "3.11.1",
              "release_filename": "20230116/cpython-3.11.1+20230116-x86_64-pc-windows-msvc-shared-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20230116/cpython-3.11.1+20230116-x86_64-pc-windows-msvc-shared-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_11_x86_64-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.24.0//python:repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.24.0~python~python_3_11_x86_64-unknown-linux-gnu",
              "sha256": "02a551fefab3750effd0e156c25446547c238688a32fabde2995c941c03a6423",
              "patches": [],
              "platform": "x86_64-unknown-linux-gnu",
              "python_version": "3.11.1",
              "release_filename": "20230116/cpython-3.11.1+20230116-x86_64-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20230116/cpython-3.11.1+20230116-x86_64-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "rules_python~0.24.0",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@rules_rust~0.40.0//crate_universe:extension.bzl%crate": {
      "general": {
        "bzlTransitiveDigest": "+RRLbDbXBeTzznB8XrG3gR/KX0b69m3hvsXwoeSSBmA=",
        "accumulatedFileDigests": {
          "@@rules_rust~0.40.0~rust~rust_host_tools//:bin/rustc": "e586e78466e2baca360fdc6f29007d2215a40a39dda99935dda887b850010153",
          "@@//image_processor:Cargo.toml": "d84f158fe9c2daf08f7d1c39bbdd3e0d70553e39a8392d77221a511485901b1e",
          "@@//autha:Cargo.toml": "47ffe95da161726206d2b05ed590816153c3828de2241e3564c4103f1d30e240",
          "@@rules_rust~0.40.0~cargo_bazel_bootstrap~cargo_bazel_bootstrap//:cargo-bazel": "827a403962ec523fcc299bdf10ff07733339dfc738ef1679cca11f3c5b9bb536",
          "@@//db:Cargo.toml": "88351b6e586b765e51bc9272b620c605b7935e4d5c006f94efe10e56ffc1cf3d",
          "@@rules_rust~0.40.0~rust~rust_host_tools//:bin/cargo": "bdb93a31345287f3dc0841af1e0a59de07cf840a764740d9c739a29c6a89baeb",
          "@@//:Cargo.lock": "f298405652674213e581dc420d191b8dbf38123af9ae73a7562469f96f07b124",
          "@@//:Cargo.toml": "da96e984e0bc006652f63c9ee0dfa3b631a929678cb5bfb33e3c5e7eae9faba0",
          "@@//crypto:Cargo.toml": "546af1512f0a29e5ecaead5f6ee63437b8aa2d512dd389206fa5f619cfd0e314"
        },
        "envVariables": {},
        "generatedRepoSpecs": {
          "crate_index__block-buffer-0.10.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__block-buffer-0.10.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/block-buffer/0.10.4/download"
              ],
              "strip_prefix": "block-buffer-0.10.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"block_buffer\",\n    deps = [\n        \"@crate_index__generic-array-0.14.7//:generic_array\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=block-buffer\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.4\",\n)\n"
            }
          },
          "crate_index__hmac-0.12.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__hmac-0.12.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hmac/0.12.1/download"
              ],
              "strip_prefix": "hmac-0.12.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"hmac\",\n    deps = [\n        \"@crate_index__digest-0.10.7//:digest\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=hmac\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.12.1\",\n)\n"
            }
          },
          "crate_index__rayon-1.9.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__rayon-1.9.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e4963ed1bc86e4f3ee217022bd855b297cef07fb9eac5dfa1f788b220b49b3bd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rayon/1.9.0/download"
              ],
              "strip_prefix": "rayon-1.9.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rayon\",\n    deps = [\n        \"@crate_index__either-1.10.0//:either\",\n        \"@crate_index__rayon-core-1.12.1//:rayon_core\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rayon\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.9.0\",\n)\n"
            }
          },
          "crate_index__tinyvec_macros-0.1.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tinyvec_macros-0.1.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tinyvec_macros/0.1.1/download"
              ],
              "strip_prefix": "tinyvec_macros-0.1.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tinyvec_macros\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tinyvec_macros\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.1\",\n)\n"
            }
          },
          "crate_index__windows_aarch64_msvc-0.48.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows_aarch64_msvc-0.48.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_aarch64_msvc/0.48.5/download"
              ],
              "strip_prefix": "windows_aarch64_msvc-0.48.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_aarch64_msvc\",\n    deps = [\n        \"@crate_index__windows_aarch64_msvc-0.48.5//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_aarch64_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.48.5\",\n)\n\ncargo_build_script(\n    name = \"windows_aarch64_msvc_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_aarch64_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.48.5\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":windows_aarch64_msvc_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__event-listener-strategy-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__event-listener-strategy-0.4.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "958e4d70b6d5e81971bebec42271ec641e7ff4e170a6fa605f2b8a8b65cb97d3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/event-listener-strategy/0.4.0/download"
              ],
              "strip_prefix": "event-listener-strategy-0.4.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"event_listener_strategy\",\n    deps = [\n        \"@crate_index__event-listener-4.0.3//:event_listener\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=event-listener-strategy\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.0\",\n)\n"
            }
          },
          "crate_index__polling-2.8.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__polling-2.8.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4b2d323e8ca7996b3e23126511a523f7e62924d93ecd5ae73b333815b0eb3dce",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/polling/2.8.0/download"
              ],
              "strip_prefix": "polling-2.8.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"polling\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__log-0.4.21//:log\",\n        \"@crate_index__polling-2.8.0//:build_script_build\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__bitflags-1.3.2//:bitflags\",  # cfg(windows)\n            \"@crate_index__concurrent-queue-2.4.0//:concurrent_queue\",  # cfg(windows)\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(windows)\n            \"@crate_index__windows-sys-0.48.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__bitflags-1.3.2//:bitflags\",  # cfg(windows)\n            \"@crate_index__concurrent-queue-2.4.0//:concurrent_queue\",  # cfg(windows)\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(windows)\n            \"@crate_index__windows-sys-0.48.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__bitflags-1.3.2//:bitflags\",  # cfg(windows)\n            \"@crate_index__concurrent-queue-2.4.0//:concurrent_queue\",  # cfg(windows)\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(windows)\n            \"@crate_index__windows-sys-0.48.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=polling\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.8.0\",\n)\n\ncargo_build_script(\n    name = \"polling_bs\",\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__autocfg-1.1.0//:autocfg\",\n    ],\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=polling\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"2.8.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":polling_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__heck-0.4.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__heck-0.4.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/heck/0.4.1/download"
              ],
              "strip_prefix": "heck-0.4.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"heck\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=heck\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.1\",\n)\n"
            }
          },
          "crate_index__event-listener-2.5.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__event-listener-2.5.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "0206175f82b8d6bf6652ff7d71a1e27fd2e4efde587fd368662814d6ec1d9ce0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/event-listener/2.5.3/download"
              ],
              "strip_prefix": "event-listener-2.5.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"event_listener\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=event-listener\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.5.3\",\n)\n"
            }
          },
          "crate_index__cipher-0.4.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__cipher-0.4.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "773f3b9af64447d2ce9850330c473515014aa235e6a783b02db81ff39e4a3dad",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cipher/0.4.4/download"
              ],
              "strip_prefix": "cipher-0.4.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"cipher\",\n    deps = [\n        \"@crate_index__crypto-common-0.1.6//:crypto_common\",\n        \"@crate_index__inout-0.1.3//:inout\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"block-padding\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=cipher\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.4\",\n)\n"
            }
          },
          "crate_index__windows_i686_msvc-0.48.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows_i686_msvc-0.48.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_i686_msvc/0.48.5/download"
              ],
              "strip_prefix": "windows_i686_msvc-0.48.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_i686_msvc\",\n    deps = [\n        \"@crate_index__windows_i686_msvc-0.48.5//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_i686_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.48.5\",\n)\n\ncargo_build_script(\n    name = \"windows_i686_msvc_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_i686_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.48.5\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":windows_i686_msvc_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__scylla-macros-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__scylla-macros-0.4.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "eb6085ff9c3fd7e5163826901d39164ab86f11bdca16b2f766a00c528ff9cef9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/scylla-macros/0.4.0/download"
              ],
              "strip_prefix": "scylla-macros-0.4.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"scylla_macros\",\n    deps = [\n        \"@crate_index__darling-0.20.8//:darling\",\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.52//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=scylla-macros\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.0\",\n)\n"
            }
          },
          "crate_index__wasm-bindgen-backend-0.2.91": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__wasm-bindgen-backend-0.2.91",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c9e7e1900c352b609c8488ad12639a311045f40a35491fb69ba8c12f758af70b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-backend/0.2.91/download"
              ],
              "strip_prefix": "wasm-bindgen-backend-0.2.91",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"wasm_bindgen_backend\",\n    deps = [\n        \"@crate_index__bumpalo-3.15.3//:bumpalo\",\n        \"@crate_index__log-0.4.21//:log\",\n        \"@crate_index__once_cell-1.19.0//:once_cell\",\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.52//:syn\",\n        \"@crate_index__wasm-bindgen-shared-0.2.91//:wasm_bindgen_shared\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"spans\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=wasm-bindgen-backend\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.91\",\n)\n"
            }
          },
          "crate_index__scheduled-thread-pool-0.2.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__scheduled-thread-pool-0.2.7",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3cbc66816425a074528352f5789333ecff06ca41b36b0b0efdfbb29edc391a19",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/scheduled-thread-pool/0.2.7/download"
              ],
              "strip_prefix": "scheduled-thread-pool-0.2.7",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"scheduled_thread_pool\",\n    deps = [\n        \"@crate_index__parking_lot-0.12.1//:parking_lot\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=scheduled-thread-pool\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.7\",\n)\n"
            }
          },
          "crate_index__rustls-0.21.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__rustls-0.21.10",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f9d5a6813c0759e4609cd494e8e725babae6a2ca7b62a5536a13daaec6fcb7ba",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustls/0.21.10/download"
              ],
              "strip_prefix": "rustls-0.21.10",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rustls\",\n    deps = [\n        \"@crate_index__log-0.4.21//:log\",\n        \"@crate_index__ring-0.17.8//:ring\",\n        \"@crate_index__rustls-0.21.10//:build_script_build\",\n        \"@crate_index__rustls-webpki-0.101.7//:webpki\",\n        \"@crate_index__sct-0.7.1//:sct\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"log\",\n        \"logging\",\n        \"tls12\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rustls\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.21.10\",\n)\n\ncargo_build_script(\n    name = \"rustls_bs\",\n    crate_features = [\n        \"default\",\n        \"log\",\n        \"logging\",\n        \"tls12\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    link_deps = [\n        \"@crate_index__ring-0.17.8//:ring\",\n    ],\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rustls\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.21.10\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":rustls_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows_x86_64_gnullvm-0.52.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows_x86_64_gnullvm-0.52.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "77ca79f2451b49fa9e2af39f0747fe999fcda4f5e241b2898624dca97a1f2177",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_gnullvm/0.52.4/download"
              ],
              "strip_prefix": "windows_x86_64_gnullvm-0.52.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_x86_64_gnullvm\",\n    deps = [\n        \"@crate_index__windows_x86_64_gnullvm-0.52.4//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_gnullvm\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.4\",\n)\n\ncargo_build_script(\n    name = \"windows_x86_64_gnullvm_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_gnullvm\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.52.4\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":windows_x86_64_gnullvm_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__foreign-types-0.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__foreign-types-0.3.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/foreign-types/0.3.2/download"
              ],
              "strip_prefix": "foreign-types-0.3.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"foreign_types\",\n    deps = [\n        \"@crate_index__foreign-types-shared-0.1.1//:foreign_types_shared\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=foreign-types\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.2\",\n)\n"
            }
          },
          "crate_index__headers-core-0.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__headers-core-0.2.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e7f66481bfee273957b1f20485a4ff3362987f85b2c236580d81b4eb7a326429",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/headers-core/0.2.0/download"
              ],
              "strip_prefix": "headers-core-0.2.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"headers_core\",\n    deps = [\n        \"@crate_index__http-0.2.11//:http\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=headers-core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.0\",\n)\n"
            }
          },
          "crate_index__totp-lite-2.0.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__totp-lite-2.0.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f8e43134db17199f7f721803383ac5854edd0d3d523cc34dba321d6acfbe76c3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/totp-lite/2.0.1/download"
              ],
              "strip_prefix": "totp-lite-2.0.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"totp_lite\",\n    deps = [\n        \"@crate_index__digest-0.10.7//:digest\",\n        \"@crate_index__hmac-0.12.1//:hmac\",\n        \"@crate_index__sha1-0.10.6//:sha1\",\n        \"@crate_index__sha2-0.10.8//:sha2\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=totp-lite\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.0.1\",\n)\n"
            }
          },
          "crate_index__num_enum-0.6.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__num_enum-0.6.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7a015b430d3c108a207fd776d2e2196aaf8b1cf8cf93253e3a097ff3085076a1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num_enum/0.6.1/download"
              ],
              "strip_prefix": "num_enum-0.6.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"num_enum\",\n    proc_macro_deps = [\n        \"@crate_index__num_enum_derive-0.6.1//:num_enum_derive\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=num_enum\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.6.1\",\n)\n"
            }
          },
          "crate_index__redox_syscall-0.4.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__redox_syscall-0.4.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/redox_syscall/0.4.1/download"
              ],
              "strip_prefix": "redox_syscall-0.4.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"syscall\",\n    deps = [\n        \"@crate_index__bitflags-1.3.2//:bitflags\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=redox_syscall\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.1\",\n)\n"
            }
          },
          "crate_index__tokio-util-0.7.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tokio-util-0.7.10",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5419f34732d9eb6ee4c3578b7989078579b7f039cbbb9ca2c4da015749371e15",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tokio-util/0.7.10/download"
              ],
              "strip_prefix": "tokio-util-0.7.10",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tokio_util\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-sink-0.3.30//:futures_sink\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n        \"@crate_index__tokio-1.36.0//:tokio\",\n        \"@crate_index__tracing-0.1.40//:tracing\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"codec\",\n        \"default\",\n        \"io\",\n        \"tracing\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tokio-util\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.7.10\",\n)\n"
            }
          },
          "crate_index__hashbrown-0.12.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__hashbrown-0.12.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hashbrown/0.12.3/download"
              ],
              "strip_prefix": "hashbrown-0.12.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"hashbrown\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"raw\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=hashbrown\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.12.3\",\n)\n"
            }
          },
          "crate_index__prost-derive-0.12.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__prost-derive-0.12.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "efb6c9a1dd1def8e2124d17e83a20af56f1570d6c2d2bd9e266ccb768df3840e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/prost-derive/0.12.3/download"
              ],
              "strip_prefix": "prost-derive-0.12.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"prost_derive\",\n    deps = [\n        \"@crate_index__anyhow-1.0.80//:anyhow\",\n        \"@crate_index__itertools-0.11.0//:itertools\",\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.52//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=prost-derive\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.12.3\",\n)\n"
            }
          },
          "crate_index__pin-utils-0.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__pin-utils-0.1.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/pin-utils/0.1.0/download"
              ],
              "strip_prefix": "pin-utils-0.1.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"pin_utils\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pin-utils\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.0\",\n)\n"
            }
          },
          "crate_index__winapi-util-0.1.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__winapi-util-0.1.6",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f29e6f9198ba0d26b4c9f07dbe6f9ed633e1f3d5b8b414090084349e46a52596",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi-util/0.1.6/download"
              ],
              "strip_prefix": "winapi-util-0.1.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"winapi_util\",\n    deps = select({\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__winapi-0.3.9//:winapi\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__winapi-0.3.9//:winapi\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__winapi-0.3.9//:winapi\",  # cfg(windows)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=winapi-util\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.6\",\n)\n"
            }
          },
          "crate_index__axum-0.6.20": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__axum-0.6.20",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3b829e4e32b91e643de6eafe82b1d90675f5874230191a4ffbc1b336dec4d6bf",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/axum/0.6.20/download"
              ],
              "strip_prefix": "axum-0.6.20",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"axum\",\n    deps = [\n        \"@crate_index__axum-0.6.20//:build_script_build\",\n        \"@crate_index__axum-core-0.3.4//:axum_core\",\n        \"@crate_index__bitflags-1.3.2//:bitflags\",\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__futures-util-0.3.30//:futures_util\",\n        \"@crate_index__http-0.2.11//:http\",\n        \"@crate_index__http-body-0.4.6//:http_body\",\n        \"@crate_index__hyper-0.14.28//:hyper\",\n        \"@crate_index__itoa-1.0.10//:itoa\",\n        \"@crate_index__matchit-0.7.3//:matchit\",\n        \"@crate_index__memchr-2.7.1//:memchr\",\n        \"@crate_index__mime-0.3.17//:mime\",\n        \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n        \"@crate_index__serde-1.0.197//:serde\",\n        \"@crate_index__sync_wrapper-0.1.2//:sync_wrapper\",\n        \"@crate_index__tower-0.4.13//:tower\",\n        \"@crate_index__tower-layer-0.3.2//:tower_layer\",\n        \"@crate_index__tower-service-0.3.2//:tower_service\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__async-trait-0.1.77//:async_trait\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=axum\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.6.20\",\n)\n\ncargo_build_script(\n    name = \"axum_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    proc_macro_deps = [\n        \"@crate_index__rustversion-1.0.14//:rustversion\",\n    ],\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=axum\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.6.20\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":axum_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__futures-macro-0.3.30": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__futures-macro-0.3.30",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "87750cf4b7a4c0625b1529e4c543c2182106e4dedc60a2a6455e00d212c489ac",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/futures-macro/0.3.30/download"
              ],
              "strip_prefix": "futures-macro-0.3.30",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"futures_macro\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.52//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=futures-macro\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.30\",\n)\n"
            }
          },
          "crate_index__socket2-0.4.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__socket2-0.4.10",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9f7916fc008ca5542385b89a3d3ce689953c143e9304a9bf8beec1de48994c0d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/socket2/0.4.10/download"
              ],
              "strip_prefix": "socket2-0.4.10",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"socket2\",\n    deps = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__winapi-0.3.9//:winapi\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__winapi-0.3.9//:winapi\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__winapi-0.3.9//:winapi\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"all\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=socket2\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.10\",\n)\n"
            }
          },
          "crate_index__color_quant-1.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__color_quant-1.1.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3d7b894f5411737b7867f4827955924d7c254fc9f4d91a6aad6b097804b1018b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/color_quant/1.1.0/download"
              ],
              "strip_prefix": "color_quant-1.1.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"color_quant\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=color_quant\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.1.0\",\n)\n"
            }
          },
          "crate_index__futures-channel-0.3.30": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__futures-channel-0.3.30",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "eac8f7d7865dcb88bd4373ab671c8cf4508703796caa2b1985a9ca867b3fcb78",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/futures-channel/0.3.30/download"
              ],
              "strip_prefix": "futures-channel-0.3.30",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"futures_channel\",\n    deps = [\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-sink-0.3.30//:futures_sink\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"futures-sink\",\n        \"sink\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=futures-channel\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.30\",\n)\n"
            }
          },
          "crate_index__reactor-trait-1.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__reactor-trait-1.1.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "438a4293e4d097556730f4711998189416232f009c137389e0f961d2bc0ddc58",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/reactor-trait/1.1.0/download"
              ],
              "strip_prefix": "reactor-trait-1.1.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"reactor_trait\",\n    deps = [\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-io-0.3.30//:futures_io\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__async-trait-0.1.77//:async_trait\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=reactor-trait\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.1.0\",\n)\n"
            }
          },
          "crate_index__piper-0.2.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__piper-0.2.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "668d31b1c4eba19242f2088b2bf3316b82ca31082a8335764db4e083db7485d4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/piper/0.2.1/download"
              ],
              "strip_prefix": "piper-0.2.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"piper\",\n    deps = [\n        \"@crate_index__atomic-waker-1.1.2//:atomic_waker\",\n        \"@crate_index__fastrand-2.0.1//:fastrand\",\n        \"@crate_index__futures-io-0.3.30//:futures_io\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"futures-io\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=piper\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.1\",\n)\n"
            }
          },
          "crate_index__event-listener-4.0.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__event-listener-4.0.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "67b215c49b2b248c855fb73579eb1f4f26c38ffdc12973e20e07b91d78d5646e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/event-listener/4.0.3/download"
              ],
              "strip_prefix": "event-listener-4.0.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"event_listener\",\n    deps = [\n        \"@crate_index__concurrent-queue-2.4.0//:concurrent_queue\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"parking\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=event-listener\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"4.0.3\",\n)\n"
            }
          },
          "crate_index__strsim-0.10.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__strsim-0.10.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/strsim/0.10.0/download"
              ],
              "strip_prefix": "strsim-0.10.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"strsim\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=strsim\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.0\",\n)\n"
            }
          },
          "crate_index__constant_time_eq-0.3.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__constant_time_eq-0.3.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f7144d30dcf0fafbce74250a3963025d8d52177934239851c917d29f1df280c2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/constant_time_eq/0.3.0/download"
              ],
              "strip_prefix": "constant_time_eq-0.3.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"constant_time_eq\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=constant_time_eq\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.0\",\n)\n"
            }
          },
          "crate_index__libc-0.2.153": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__libc-0.2.153",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9c198f91728a82281a64e1f4f9eeb25d82cb32a5de251c6bd1b5154d63a8e7bd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/libc/0.2.153/download"
              ],
              "strip_prefix": "libc-0.2.153",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"libc\",\n    deps = [\n        \"@crate_index__libc-0.2.153//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"extra_traits\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=libc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.153\",\n)\n\ncargo_build_script(\n    name = \"libc_bs\",\n    crate_features = [\n        \"default\",\n        \"extra_traits\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=libc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.2.153\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":libc_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__memcache-0.17.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__memcache-0.17.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "0396084c5d5e2ef2c480a51933b56e9673898f14657212eebbffcbcc12c7153a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/memcache/0.17.2/download"
              ],
              "strip_prefix": "memcache-0.17.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"memcache\",\n    deps = [\n        \"@crate_index__byteorder-1.5.0//:byteorder\",\n        \"@crate_index__openssl-0.10.64//:openssl\",\n        \"@crate_index__r2d2-0.8.10//:r2d2\",\n        \"@crate_index__rand-0.8.5//:rand\",\n        \"@crate_index__url-2.5.0//:url\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__enum_dispatch-0.3.12//:enum_dispatch\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"openssl\",\n        \"tls\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=memcache\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.17.2\",\n)\n"
            }
          },
          "crate_index__unicode-normalization-0.1.23": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__unicode-normalization-0.1.23",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a56d1686db2308d901306f92a263857ef59ea39678a5458e7cb17f01415101f5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicode-normalization/0.1.23/download"
              ],
              "strip_prefix": "unicode-normalization-0.1.23",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"unicode_normalization\",\n    deps = [\n        \"@crate_index__tinyvec-1.6.0//:tinyvec\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=unicode-normalization\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.23\",\n)\n"
            }
          },
          "crate_index__tokio-native-tls-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tokio-native-tls-0.3.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bbae76ab933c85776efabc971569dd6119c580d8f5d448769dec1764bf796ef2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tokio-native-tls/0.3.1/download"
              ],
              "strip_prefix": "tokio-native-tls-0.3.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tokio_native_tls\",\n    deps = [\n        \"@crate_index__native-tls-0.2.11//:native_tls\",\n        \"@crate_index__tokio-1.36.0//:tokio\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tokio-native-tls\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.1\",\n)\n"
            }
          },
          "crate_index__unsafe-libyaml-0.2.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__unsafe-libyaml-0.2.10",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ab4c90930b95a82d00dc9e9ac071b4991924390d46cbd0dfe566148667605e4b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unsafe-libyaml/0.2.10/download"
              ],
              "strip_prefix": "unsafe-libyaml-0.2.10",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"unsafe_libyaml\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=unsafe-libyaml\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.10\",\n)\n"
            }
          },
          "crate_index__itoa-1.0.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__itoa-1.0.10",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b1a46d1a171d865aa5f83f92695765caa047a9b4cbae2cbf37dbd613a793fd4c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/itoa/1.0.10/download"
              ],
              "strip_prefix": "itoa-1.0.10",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"itoa\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=itoa\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.10\",\n)\n"
            }
          },
          "crate_index__rand_core-0.6.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__rand_core-0.6.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rand_core/0.6.4/download"
              ],
              "strip_prefix": "rand_core-0.6.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rand_core\",\n    deps = [\n        \"@crate_index__getrandom-0.2.12//:getrandom\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"getrandom\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rand_core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.6.4\",\n)\n"
            }
          },
          "crate_index__cc-1.0.88": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__cc-1.0.88",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "02f341c093d19155a6e41631ce5971aac4e9a868262212153124c15fa22d1cdc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cc/1.0.88/download"
              ],
              "strip_prefix": "cc-1.0.88",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"cc\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=cc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.88\",\n)\n"
            }
          },
          "crate_index__polling-3.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__polling-3.5.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "24f040dee2588b4963afb4e420540439d126f73fdacf4a9c486a96d840bac3c9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/polling/3.5.0/download"
              ],
              "strip_prefix": "polling-3.5.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"polling\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__tracing-0.1.40//:tracing\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__concurrent-queue-2.4.0//:concurrent_queue\",  # cfg(windows)\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(windows)\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__concurrent-queue-2.4.0//:concurrent_queue\",  # cfg(windows)\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(windows)\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__concurrent-queue-2.4.0//:concurrent_queue\",  # cfg(windows)\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(windows)\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=polling\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"3.5.0\",\n)\n"
            }
          },
          "crate_index__headers-0.3.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__headers-0.3.9",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "06683b93020a07e3dbcf5f8c0f6d40080d725bea7936fc01ad345c01b97dc270",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/headers/0.3.9/download"
              ],
              "strip_prefix": "headers-0.3.9",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"headers\",\n    deps = [\n        \"@crate_index__base64-0.21.7//:base64\",\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__headers-core-0.2.0//:headers_core\",\n        \"@crate_index__http-0.2.11//:http\",\n        \"@crate_index__httpdate-1.0.3//:httpdate\",\n        \"@crate_index__mime-0.3.17//:mime\",\n        \"@crate_index__sha1-0.10.6//:sha1\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=headers\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.9\",\n)\n"
            }
          },
          "crate_index__backtrace-0.3.69": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__backtrace-0.3.69",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "2089b7e3f35b9dd2d0ed921ead4f6d318c27680d4a5bd167b3ee120edb105837",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/backtrace/0.3.69/download"
              ],
              "strip_prefix": "backtrace-0.3.69",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"backtrace\",\n    deps = [\n        \"@crate_index__backtrace-0.3.69//:build_script_build\",\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__rustc-demangle-0.1.23//:rustc_demangle\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [\n            \"@crate_index__addr2line-0.21.0//:addr2line\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n            \"@crate_index__object-0.32.2//:object\",  # cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=backtrace\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.69\",\n)\n\ncargo_build_script(\n    name = \"backtrace_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__cc-1.0.88//:cc\",\n    ],\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=backtrace\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.3.69\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":backtrace_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__async-io-2.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__async-io-2.3.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8f97ab0c5b00a7cdbe5a371b9a782ee7be1316095885c8a4ea1daf490eb0ef65",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/async-io/2.3.1/download"
              ],
              "strip_prefix": "async-io-2.3.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"async_io\",\n    deps = [\n        \"@crate_index__async-lock-3.3.0//:async_lock\",\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__concurrent-queue-2.4.0//:concurrent_queue\",\n        \"@crate_index__futures-io-0.3.30//:futures_io\",\n        \"@crate_index__futures-lite-2.2.0//:futures_lite\",\n        \"@crate_index__parking-2.2.0//:parking\",\n        \"@crate_index__polling-3.5.0//:polling\",\n        \"@crate_index__rustix-0.38.31//:rustix\",\n        \"@crate_index__slab-0.4.9//:slab\",\n        \"@crate_index__tracing-0.1.40//:tracing\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=async-io\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.3.1\",\n)\n"
            }
          },
          "crate_index__reqwest-0.11.24": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__reqwest-0.11.24",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c6920094eb85afde5e4a138be3f2de8bbdf28000f0029e72c45025a56b042251",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/reqwest/0.11.24/download"
              ],
              "strip_prefix": "reqwest-0.11.24",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"reqwest\",\n    deps = [\n        \"@crate_index__base64-0.21.7//:base64\",\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-util-0.3.30//:futures_util\",\n        \"@crate_index__http-0.2.11//:http\",\n        \"@crate_index__mime_guess-2.0.4//:mime_guess\",\n        \"@crate_index__serde-1.0.197//:serde\",\n        \"@crate_index__serde_json-1.0.114//:serde_json\",\n        \"@crate_index__serde_urlencoded-0.7.1//:serde_urlencoded\",\n        \"@crate_index__sync_wrapper-0.1.2//:sync_wrapper\",\n        \"@crate_index__tower-service-0.3.2//:tower_service\",\n        \"@crate_index__url-2.5.0//:url\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__system-configuration-0.5.1//:system_configuration\",  # cfg(target_os = \"macos\")\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__winreg-0.50.0//:winreg\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__system-configuration-0.5.1//:system_configuration\",  # cfg(target_os = \"macos\")\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__winreg-0.50.0//:winreg\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"@crate_index__js-sys-0.3.68//:js_sys\",  # cfg(target_arch = \"wasm32\")\n            \"@crate_index__wasm-bindgen-0.2.91//:wasm_bindgen\",  # cfg(target_arch = \"wasm32\")\n            \"@crate_index__wasm-bindgen-futures-0.4.41//:wasm_bindgen_futures\",  # cfg(target_arch = \"wasm32\")\n            \"@crate_index__wasm-streams-0.4.0//:wasm_streams\",  # cfg(target_arch = \"wasm32\")\n            \"@crate_index__web-sys-0.3.68//:web_sys\",  # cfg(target_arch = \"wasm32\")\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"@crate_index__js-sys-0.3.68//:js_sys\",  # cfg(target_arch = \"wasm32\")\n            \"@crate_index__wasm-bindgen-0.2.91//:wasm_bindgen\",  # cfg(target_arch = \"wasm32\")\n            \"@crate_index__wasm-bindgen-futures-0.4.41//:wasm_bindgen_futures\",  # cfg(target_arch = \"wasm32\")\n            \"@crate_index__wasm-streams-0.4.0//:wasm_streams\",  # cfg(target_arch = \"wasm32\")\n            \"@crate_index__web-sys-0.3.68//:web_sys\",  # cfg(target_arch = \"wasm32\")\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__system-configuration-0.5.1//:system_configuration\",  # cfg(target_os = \"macos\")\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__winreg-0.50.0//:winreg\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [\n            \"@crate_index__encoding_rs-0.8.33//:encoding_rs\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__h2-0.3.24//:h2\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__http-body-0.4.6//:http_body\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-0.14.28//:hyper\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__hyper-tls-0.5.0//:hyper_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__ipnet-2.9.0//:ipnet\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__mime-0.3.17//:mime\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__native-tls-0.2.11//:native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-1.36.0//:tokio\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",  # cfg(not(target_arch = \"wasm32\"))\n            \"@crate_index__tokio-util-0.7.10//:tokio_util\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    aliases = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:aarch64-linux-android\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:i686-apple-darwin\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:i686-linux-android\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:x86_64-linux-android\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": {\n            \"@crate_index__native-tls-0.2.11//:native_tls\": \"native_tls_crate\",  # cfg(not(target_arch = \"wasm32\"))\n        },\n        \"//conditions:default\": {},\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"__tls\",\n        \"default\",\n        \"default-tls\",\n        \"hyper-tls\",\n        \"json\",\n        \"mime_guess\",\n        \"multipart\",\n        \"native-tls-crate\",\n        \"serde_json\",\n        \"stream\",\n        \"tokio-native-tls\",\n        \"tokio-util\",\n        \"wasm-streams\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=reqwest\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.11.24\",\n)\n"
            }
          },
          "crate_index__num-traits-0.2.18": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__num-traits-0.2.18",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "da0df0e5185db44f69b44f26786fe401b6c293d1907744beaa7fa62b2e5a517a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num-traits/0.2.18/download"
              ],
              "strip_prefix": "num-traits-0.2.18",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"num_traits\",\n    deps = [\n        \"@crate_index__num-traits-0.2.18//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"i128\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=num-traits\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.18\",\n)\n\ncargo_build_script(\n    name = \"num-traits_bs\",\n    crate_features = [\n        \"default\",\n        \"i128\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__autocfg-1.1.0//:autocfg\",\n    ],\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=num-traits\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.2.18\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":num-traits_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__png-0.17.13": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__png-0.17.13",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "06e4b0d3d1312775e782c86c91a111aa1f910cbb65e1337f9975b5f9a554b5e1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/png/0.17.13/download"
              ],
              "strip_prefix": "png-0.17.13",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"png\",\n    deps = [\n        \"@crate_index__bitflags-1.3.2//:bitflags\",\n        \"@crate_index__crc32fast-1.4.0//:crc32fast\",\n        \"@crate_index__fdeflate-0.3.4//:fdeflate\",\n        \"@crate_index__flate2-1.0.28//:flate2\",\n        \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=png\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.17.13\",\n)\n"
            }
          },
          "crate_index__errno-0.3.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__errno-0.3.8",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a258e46cdc063eb8519c00b9fc845fc47bcfca4130e2f08e88665ceda8474245",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/errno/0.3.8/download"
              ],
              "strip_prefix": "errno-0.3.8",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"errno\",\n    deps = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(target_os = \"wasi\")\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=errno\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.8\",\n)\n"
            }
          },
          "crate_index__event-listener-strategy-0.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__event-listener-strategy-0.5.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "feedafcaa9b749175d5ac357452a9d41ea2911da598fde46ce1fe02c37751291",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/event-listener-strategy/0.5.0/download"
              ],
              "strip_prefix": "event-listener-strategy-0.5.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"event_listener_strategy\",\n    deps = [\n        \"@crate_index__event-listener-5.2.0//:event_listener\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=event-listener-strategy\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.5.0\",\n)\n"
            }
          },
          "crate_index__sha2-0.10.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__sha2-0.10.8",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/sha2/0.10.8/download"
              ],
              "strip_prefix": "sha2-0.10.8",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"sha2\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__digest-0.10.7//:digest\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=sha2\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.8\",\n)\n"
            }
          },
          "crate_index__android-tzdata-0.1.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__android-tzdata-0.1.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/android-tzdata/0.1.1/download"
              ],
              "strip_prefix": "android-tzdata-0.1.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"android_tzdata\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=android-tzdata\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.1\",\n)\n"
            }
          },
          "crate_index__regex-syntax-0.8.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__regex-syntax-0.8.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c08c74e62047bb2de4ff487b251e4a92e24f48745648451635cec7d591162d9f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex-syntax/0.8.2/download"
              ],
              "strip_prefix": "regex-syntax-0.8.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"regex_syntax\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n        \"unicode-bool\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=regex-syntax\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.2\",\n)\n"
            }
          },
          "crate_index__plotters-backend-0.3.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__plotters-backend-0.3.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9e76628b4d3a7581389a35d5b6e2139607ad7c75b17aed325f210aa91f4a9609",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/plotters-backend/0.3.5/download"
              ],
              "strip_prefix": "plotters-backend-0.3.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"plotters_backend\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=plotters-backend\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.5\",\n)\n"
            }
          },
          "crate_index__rc2-0.8.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__rc2-0.8.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "62c64daa8e9438b84aaae55010a93f396f8e60e3911590fcba770d04643fc1dd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rc2/0.8.1/download"
              ],
              "strip_prefix": "rc2-0.8.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rc2\",\n    deps = [\n        \"@crate_index__cipher-0.4.4//:cipher\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rc2\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.1\",\n)\n"
            }
          },
          "crate_index__clap-4.5.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__clap-4.5.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c918d541ef2913577a0f9566e9ce27cb35b6df072075769e0b26cb5a554520da",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/clap/4.5.1/download"
              ],
              "strip_prefix": "clap-4.5.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"clap\",\n    deps = [\n        \"@crate_index__clap_builder-4.5.1//:clap_builder\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=clap\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"4.5.1\",\n)\n"
            }
          },
          "crate_index__windows-core-0.52.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows-core-0.52.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows-core/0.52.0/download"
              ],
              "strip_prefix": "windows-core-0.52.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_core\",\n    deps = [\n        \"@crate_index__windows-targets-0.52.4//:windows_targets\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows-core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.0\",\n)\n"
            }
          },
          "crate_index__foreign-types-shared-0.1.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__foreign-types-shared-0.1.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/foreign-types-shared/0.1.1/download"
              ],
              "strip_prefix": "foreign-types-shared-0.1.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"foreign_types_shared\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=foreign-types-shared\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.1\",\n)\n"
            }
          },
          "crate_index__rust-argon2-2.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__rust-argon2-2.1.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9d9848531d60c9cbbcf9d166c885316c24bc0e2a9d3eba0956bb6cbbd79bc6e8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rust-argon2/2.1.0/download"
              ],
              "strip_prefix": "rust-argon2-2.1.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"argon2\",\n    deps = [\n        \"@crate_index__base64-0.21.7//:base64\",\n        \"@crate_index__blake2b_simd-1.0.2//:blake2b_simd\",\n        \"@crate_index__constant_time_eq-0.3.0//:constant_time_eq\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rust-argon2\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.1.0\",\n)\n"
            }
          },
          "crate_index__darling_macro-0.20.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__darling_macro-0.20.8",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a668eda54683121533a393014d8692171709ff57a7d61f187b6e782719f8933f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/darling_macro/0.20.8/download"
              ],
              "strip_prefix": "darling_macro-0.20.8",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"darling_macro\",\n    deps = [\n        \"@crate_index__darling_core-0.20.8//:darling_core\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.52//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=darling_macro\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.20.8\",\n)\n"
            }
          },
          "crate_index__version_check-0.9.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__version_check-0.9.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/version_check/0.9.4/download"
              ],
              "strip_prefix": "version_check-0.9.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"version_check\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=version_check\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.9.4\",\n)\n"
            }
          },
          "crate_index__windows-sys-0.52.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows-sys-0.52.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows-sys/0.52.0/download"
              ],
              "strip_prefix": "windows-sys-0.52.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_sys\",\n    deps = [\n        \"@crate_index__windows-targets-0.52.4//:windows_targets\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"Wdk\",\n        \"Wdk_Foundation\",\n        \"Wdk_Storage\",\n        \"Wdk_Storage_FileSystem\",\n        \"Win32\",\n        \"Win32_Foundation\",\n        \"Win32_NetworkManagement\",\n        \"Win32_NetworkManagement_IpHelper\",\n        \"Win32_Networking\",\n        \"Win32_Networking_WinSock\",\n        \"Win32_Security\",\n        \"Win32_Security_Authentication\",\n        \"Win32_Security_Authentication_Identity\",\n        \"Win32_Security_Credentials\",\n        \"Win32_Security_Cryptography\",\n        \"Win32_Storage\",\n        \"Win32_Storage_FileSystem\",\n        \"Win32_System\",\n        \"Win32_System_Console\",\n        \"Win32_System_Diagnostics\",\n        \"Win32_System_Diagnostics_Debug\",\n        \"Win32_System_IO\",\n        \"Win32_System_LibraryLoader\",\n        \"Win32_System_Memory\",\n        \"Win32_System_Threading\",\n        \"Win32_System_WindowsProgramming\",\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.0\",\n)\n"
            }
          },
          "crate_index__crypto-common-0.1.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__crypto-common-0.1.6",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crypto-common/0.1.6/download"
              ],
              "strip_prefix": "crypto-common-0.1.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"crypto_common\",\n    deps = [\n        \"@crate_index__generic-array-0.14.7//:generic_array\",\n        \"@crate_index__typenum-1.17.0//:typenum\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=crypto-common\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.6\",\n)\n"
            }
          },
          "crate_index__unicase-2.7.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__unicase-2.7.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f7d2d4dafb69621809a81864c9c1b864479e1235c0dd4e199924b9742439ed89",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicase/2.7.0/download"
              ],
              "strip_prefix": "unicase-2.7.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"unicase\",\n    deps = [\n        \"@crate_index__unicase-2.7.0//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=unicase\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.7.0\",\n)\n\ncargo_build_script(\n    name = \"unicase_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__version_check-0.9.4//:version_check\",\n    ],\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=unicase\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"2.7.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":unicase_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__same-file-1.0.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__same-file-1.0.6",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/same-file/1.0.6/download"
              ],
              "strip_prefix": "same-file-1.0.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"same_file\",\n    deps = select({\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__winapi-util-0.1.6//:winapi_util\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__winapi-util-0.1.6//:winapi_util\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__winapi-util-0.1.6//:winapi_util\",  # cfg(windows)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=same-file\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.6\",\n)\n"
            }
          },
          "crate_index__windows_i686_msvc-0.52.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows_i686_msvc-0.52.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1515e9a29e5bed743cb4415a9ecf5dfca648ce85ee42e15873c3cd8610ff8e02",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_i686_msvc/0.52.4/download"
              ],
              "strip_prefix": "windows_i686_msvc-0.52.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_i686_msvc\",\n    deps = [\n        \"@crate_index__windows_i686_msvc-0.52.4//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_i686_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.4\",\n)\n\ncargo_build_script(\n    name = \"windows_i686_msvc_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_i686_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.52.4\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":windows_i686_msvc_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__anes-0.1.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__anes-0.1.6",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anes/0.1.6/download"
              ],
              "strip_prefix": "anes-0.1.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"anes\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=anes\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.6\",\n)\n"
            }
          },
          "crate_index__smallvec-1.13.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__smallvec-1.13.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e6ecd384b10a64542d77071bd64bd7b231f4ed5940fba55e98c3de13824cf3d7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/smallvec/1.13.1/download"
              ],
              "strip_prefix": "smallvec-1.13.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"smallvec\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=smallvec\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.13.1\",\n)\n"
            }
          },
          "crate_index__windows_aarch64_msvc-0.52.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows_aarch64_msvc-0.52.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "da9f259dd3bcf6990b55bffd094c4f7235817ba4ceebde8e6d11cd0c5633b675",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_aarch64_msvc/0.52.4/download"
              ],
              "strip_prefix": "windows_aarch64_msvc-0.52.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_aarch64_msvc\",\n    deps = [\n        \"@crate_index__windows_aarch64_msvc-0.52.4//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_aarch64_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.4\",\n)\n\ncargo_build_script(\n    name = \"windows_aarch64_msvc_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_aarch64_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.52.4\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":windows_aarch64_msvc_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__serde-1.0.197": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__serde-1.0.197",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3fb1c873e1b9b056a4dc4c0c198b24c3ffa059243875552b2bd0933b1aee4ce2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/serde/1.0.197/download"
              ],
              "strip_prefix": "serde-1.0.197",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"serde\",\n    deps = [\n        \"@crate_index__serde-1.0.197//:build_script_build\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__serde_derive-1.0.197//:serde_derive\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"derive\",\n        \"rc\",\n        \"serde_derive\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=serde\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.197\",\n)\n\ncargo_build_script(\n    name = \"serde_bs\",\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"derive\",\n        \"rc\",\n        \"serde_derive\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=serde\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.0.197\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":serde_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__blocking-1.5.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__blocking-1.5.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "6a37913e8dc4ddcc604f0c6d3bf2887c995153af3611de9e23c352b44c1b9118",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/blocking/1.5.1/download"
              ],
              "strip_prefix": "blocking-1.5.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"blocking\",\n    deps = [\n        \"@crate_index__async-channel-2.2.0//:async_channel\",\n        \"@crate_index__async-task-4.7.0//:async_task\",\n        \"@crate_index__fastrand-2.0.1//:fastrand\",\n        \"@crate_index__futures-io-0.3.30//:futures_io\",\n        \"@crate_index__futures-lite-2.2.0//:futures_lite\",\n        \"@crate_index__piper-0.2.1//:piper\",\n        \"@crate_index__tracing-0.1.40//:tracing\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [\n            \"@crate_index__async-lock-3.3.0//:async_lock\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=blocking\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.5.1\",\n)\n"
            }
          },
          "crate_index__time-macros-0.2.17": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__time-macros-0.2.17",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7ba3a3ef41e6672a2f0f001392bb5dcd3ff0a9992d618ca761a11c3121547774",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/time-macros/0.2.17/download"
              ],
              "strip_prefix": "time-macros-0.2.17",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"time_macros\",\n    deps = [\n        \"@crate_index__num-conv-0.1.0//:num_conv\",\n        \"@crate_index__time-core-0.1.2//:time_core\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"formatting\",\n        \"parsing\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=time-macros\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.17\",\n)\n"
            }
          },
          "crate_index__plotters-0.3.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__plotters-0.3.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d2c224ba00d7cadd4d5c660deaf2098e5e80e07846537c51f9cfa4be50c1fd45",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/plotters/0.3.5/download"
              ],
              "strip_prefix": "plotters-0.3.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"plotters\",\n    deps = [\n        \"@crate_index__num-traits-0.2.18//:num_traits\",\n        \"@crate_index__plotters-backend-0.3.5//:plotters_backend\",\n        \"@crate_index__plotters-svg-0.3.5//:plotters_svg\",\n    ] + select({\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"@crate_index__wasm-bindgen-0.2.91//:wasm_bindgen\",  # cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))\n            \"@crate_index__web-sys-0.3.68//:web_sys\",  # cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"area_series\",\n        \"line_series\",\n        \"plotters-svg\",\n        \"svg_backend\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=plotters\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.5\",\n)\n"
            }
          },
          "crate_index__want-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__want-0.3.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/want/0.3.1/download"
              ],
              "strip_prefix": "want-0.3.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"want\",\n    deps = [\n        \"@crate_index__try-lock-0.2.5//:try_lock\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=want\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.1\",\n)\n"
            }
          },
          "crate_index__enum_dispatch-0.3.12": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__enum_dispatch-0.3.12",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8f33313078bb8d4d05a2733a94ac4c2d8a0df9a2b84424ebf4f33bfc224a890e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/enum_dispatch/0.3.12/download"
              ],
              "strip_prefix": "enum_dispatch-0.3.12",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"enum_dispatch\",\n    deps = [\n        \"@crate_index__once_cell-1.19.0//:once_cell\",\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.52//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=enum_dispatch\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.12\",\n)\n"
            }
          },
          "crate_index__walkdir-2.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__walkdir-2.5.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/walkdir/2.5.0/download"
              ],
              "strip_prefix": "walkdir-2.5.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"walkdir\",\n    deps = [\n        \"@crate_index__same-file-1.0.6//:same_file\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__winapi-util-0.1.6//:winapi_util\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__winapi-util-0.1.6//:winapi_util\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__winapi-util-0.1.6//:winapi_util\",  # cfg(windows)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=walkdir\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.5.0\",\n)\n"
            }
          },
          "crate_index__plotters-svg-0.3.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__plotters-svg-0.3.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "38f6d39893cca0701371e3c27294f09797214b86f1fb951b89ade8ec04e2abab",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/plotters-svg/0.3.5/download"
              ],
              "strip_prefix": "plotters-svg-0.3.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"plotters_svg\",\n    deps = [\n        \"@crate_index__plotters-backend-0.3.5//:plotters_backend\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=plotters-svg\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.5\",\n)\n"
            }
          },
          "crate_index__tracing-0.1.40": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tracing-0.1.40",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tracing/0.1.40/download"
              ],
              "strip_prefix": "tracing-0.1.40",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tracing\",\n    deps = [\n        \"@crate_index__log-0.4.21//:log\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n        \"@crate_index__tracing-core-0.1.32//:tracing_core\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__tracing-attributes-0.1.27//:tracing_attributes\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"attributes\",\n        \"default\",\n        \"log\",\n        \"std\",\n        \"tracing-attributes\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tracing\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.40\",\n)\n"
            }
          },
          "crate_index__tower-0.4.13": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tower-0.4.13",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b8fa9be0de6cf49e536ce1851f987bd21a43b771b09473c3549a6c853db37c1c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tower/0.4.13/download"
              ],
              "strip_prefix": "tower-0.4.13",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tower\",\n    deps = [\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-util-0.3.30//:futures_util\",\n        \"@crate_index__indexmap-1.9.3//:indexmap\",\n        \"@crate_index__pin-project-1.1.4//:pin_project\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n        \"@crate_index__rand-0.8.5//:rand\",\n        \"@crate_index__slab-0.4.9//:slab\",\n        \"@crate_index__tokio-1.36.0//:tokio\",\n        \"@crate_index__tokio-util-0.7.10//:tokio_util\",\n        \"@crate_index__tower-layer-0.3.2//:tower_layer\",\n        \"@crate_index__tower-service-0.3.2//:tower_service\",\n        \"@crate_index__tracing-0.1.40//:tracing\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"__common\",\n        \"balance\",\n        \"buffer\",\n        \"discover\",\n        \"futures-core\",\n        \"futures-util\",\n        \"indexmap\",\n        \"limit\",\n        \"load\",\n        \"make\",\n        \"pin-project\",\n        \"pin-project-lite\",\n        \"rand\",\n        \"ready-cache\",\n        \"slab\",\n        \"timeout\",\n        \"tokio\",\n        \"tokio-util\",\n        \"tracing\",\n        \"util\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tower\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.13\",\n)\n"
            }
          },
          "crate_index__futures-task-0.3.30": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__futures-task-0.3.30",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "38d84fa142264698cdce1a9f9172cf383a0c82de1bddcf3092901442c4097004",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/futures-task/0.3.30/download"
              ],
              "strip_prefix": "futures-task-0.3.30",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"futures_task\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=futures-task\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.30\",\n)\n"
            }
          },
          "crate_index__object-0.32.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__object-0.32.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a6a622008b6e321afc04970976f62ee297fdbaa6f95318ca343e3eebb9648441",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/object/0.32.2/download"
              ],
              "strip_prefix": "object-0.32.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"object\",\n    deps = [\n        \"@crate_index__memchr-2.7.1//:memchr\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=object\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.32.2\",\n)\n"
            }
          },
          "crate_index__lazy_static-1.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__lazy_static-1.4.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/lazy_static/1.4.0/download"
              ],
              "strip_prefix": "lazy_static-1.4.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"lazy_static\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=lazy_static\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.4.0\",\n)\n"
            }
          },
          "crate_index__rustls-native-certs-0.6.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__rustls-native-certs-0.6.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a9aace74cb666635c918e9c12bc0d348266037aa8eb599b5cba565709a8dff00",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustls-native-certs/0.6.3/download"
              ],
              "strip_prefix": "rustls-native-certs-0.6.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rustls_native_certs\",\n    deps = [\n        \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__security-framework-2.9.2//:security_framework\",  # cfg(target_os = \"macos\")\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__schannel-0.1.23//:schannel\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__security-framework-2.9.2//:security_framework\",  # cfg(target_os = \"macos\")\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__schannel-0.1.23//:schannel\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__security-framework-2.9.2//:security_framework\",  # cfg(target_os = \"macos\")\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__schannel-0.1.23//:schannel\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(all(unix, not(target_os = \"macos\")))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rustls-native-certs\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.6.3\",\n)\n"
            }
          },
          "crate_index__system-configuration-0.5.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__system-configuration-0.5.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ba3a3adc5c275d719af8cb4272ea1c4a6d668a777f37e115f6d11ddbc1c8e0e7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/system-configuration/0.5.1/download"
              ],
              "strip_prefix": "system-configuration-0.5.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"system_configuration\",\n    deps = [\n        \"@crate_index__bitflags-1.3.2//:bitflags\",\n        \"@crate_index__core-foundation-0.9.4//:core_foundation\",\n        \"@crate_index__system-configuration-sys-0.5.0//:system_configuration_sys\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=system-configuration\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.5.1\",\n)\n"
            }
          },
          "crate_index__form_urlencoded-1.2.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__form_urlencoded-1.2.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/form_urlencoded/1.2.1/download"
              ],
              "strip_prefix": "form_urlencoded-1.2.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"form_urlencoded\",\n    deps = [\n        \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=form_urlencoded\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.2.1\",\n)\n"
            }
          },
          "crate_index__httpdate-1.0.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__httpdate-1.0.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "df3b46402a9d5adb4c86a0cf463f42e19994e3ee891101b1841f30a545cb49a9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/httpdate/1.0.3/download"
              ],
              "strip_prefix": "httpdate-1.0.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"httpdate\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=httpdate\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.3\",\n)\n"
            }
          },
          "crate_index__tonic-0.11.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tonic-0.11.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "76c4eb7a4e9ef9d4763600161f12f5070b92a578e1b634db88a6887844c91a13",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tonic/0.11.0/download"
              ],
              "strip_prefix": "tonic-0.11.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tonic\",\n    deps = [\n        \"@crate_index__async-stream-0.3.5//:async_stream\",\n        \"@crate_index__axum-0.6.20//:axum\",\n        \"@crate_index__base64-0.21.7//:base64\",\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__h2-0.3.24//:h2\",\n        \"@crate_index__http-0.2.11//:http\",\n        \"@crate_index__http-body-0.4.6//:http_body\",\n        \"@crate_index__hyper-0.14.28//:hyper\",\n        \"@crate_index__hyper-timeout-0.4.1//:hyper_timeout\",\n        \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",\n        \"@crate_index__pin-project-1.1.4//:pin_project\",\n        \"@crate_index__prost-0.12.3//:prost\",\n        \"@crate_index__tokio-1.36.0//:tokio\",\n        \"@crate_index__tokio-stream-0.1.14//:tokio_stream\",\n        \"@crate_index__tower-0.4.13//:tower\",\n        \"@crate_index__tower-layer-0.3.2//:tower_layer\",\n        \"@crate_index__tower-service-0.3.2//:tower_service\",\n        \"@crate_index__tracing-0.1.40//:tracing\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__async-trait-0.1.77//:async_trait\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"channel\",\n        \"codegen\",\n        \"default\",\n        \"prost\",\n        \"transport\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tonic\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.11.0\",\n)\n"
            }
          },
          "crate_index__amq-protocol-types-7.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__amq-protocol-types-7.1.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "156ff13c8a3ced600b4e54ed826a2ae6242b6069d00dd98466827cef07d3daff",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/amq-protocol-types/7.1.2/download"
              ],
              "strip_prefix": "amq-protocol-types-7.1.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"amq_protocol_types\",\n    deps = [\n        \"@crate_index__cookie-factory-0.3.2//:cookie_factory\",\n        \"@crate_index__nom-7.1.3//:nom\",\n        \"@crate_index__serde-1.0.197//:serde\",\n        \"@crate_index__serde_json-1.0.114//:serde_json\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=amq-protocol-types\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"7.1.2\",\n)\n"
            }
          },
          "crate_index__system-configuration-sys-0.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__system-configuration-sys-0.5.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a75fb188eb626b924683e3b95e3a48e63551fcfb51949de2f06a9d91dbee93c9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/system-configuration-sys/0.5.0/download"
              ],
              "strip_prefix": "system-configuration-sys-0.5.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"system_configuration_sys\",\n    deps = [\n        \"@crate_index__core-foundation-sys-0.8.6//:core_foundation_sys\",\n        \"@crate_index__libc-0.2.153//:libc\",\n        \"@crate_index__system-configuration-sys-0.5.0//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=system-configuration-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.5.0\",\n)\n\ncargo_build_script(\n    name = \"system-configuration-sys_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=system-configuration-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.5.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":system-configuration-sys_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows_x86_64_gnullvm-0.48.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows_x86_64_gnullvm-0.48.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_gnullvm/0.48.5/download"
              ],
              "strip_prefix": "windows_x86_64_gnullvm-0.48.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_x86_64_gnullvm\",\n    deps = [\n        \"@crate_index__windows_x86_64_gnullvm-0.48.5//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_gnullvm\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.48.5\",\n)\n\ncargo_build_script(\n    name = \"windows_x86_64_gnullvm_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_gnullvm\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.48.5\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":windows_x86_64_gnullvm_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__async-lock-2.8.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__async-lock-2.8.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "287272293e9d8c41773cec55e365490fe034813a2f172f502d6ddcf75b2f582b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/async-lock/2.8.0/download"
              ],
              "strip_prefix": "async-lock-2.8.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"async_lock\",\n    deps = [\n        \"@crate_index__event-listener-2.5.3//:event_listener\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=async-lock\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.8.0\",\n)\n"
            }
          },
          "crate_index__memchr-2.7.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__memchr-2.7.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "523dc4f511e55ab87b694dc30d0f820d60906ef06413f93d4d7a1385599cc149",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/memchr/2.7.1/download"
              ],
              "strip_prefix": "memchr-2.7.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"memchr\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=memchr\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.7.1\",\n)\n"
            }
          },
          "crate_index__parking-2.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__parking-2.2.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bb813b8af86854136c6922af0598d719255ecb2179515e6e7730d468f05c9cae",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/parking/2.2.0/download"
              ],
              "strip_prefix": "parking-2.2.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"parking\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=parking\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.2.0\",\n)\n"
            }
          },
          "crate_index__powerfmt-0.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__powerfmt-0.2.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/powerfmt/0.2.0/download"
              ],
              "strip_prefix": "powerfmt-0.2.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"powerfmt\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=powerfmt\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.0\",\n)\n"
            }
          },
          "crate_index__cfg-if-1.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__cfg-if-1.0.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cfg-if/1.0.0/download"
              ],
              "strip_prefix": "cfg-if-1.0.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"cfg_if\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=cfg-if\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.0\",\n)\n"
            }
          },
          "crate_index__hermit-abi-0.3.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__hermit-abi-0.3.9",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hermit-abi/0.3.9/download"
              ],
              "strip_prefix": "hermit-abi-0.3.9",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"hermit_abi\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=hermit-abi\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.9\",\n)\n"
            }
          },
          "crate_index__http-body-0.4.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__http-body-0.4.6",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7ceab25649e9960c0311ea418d17bee82c0dcec1bd053b5f9a66e265a693bed2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/http-body/0.4.6/download"
              ],
              "strip_prefix": "http-body-0.4.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"http_body\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__http-0.2.11//:http\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=http-body\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.6\",\n)\n"
            }
          },
          "crate_index__pkg-config-0.3.30": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__pkg-config-0.3.30",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d231b230927b5e4ad203db57bbcbee2802f6bce620b1e4a9024a07d94e2907ec",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/pkg-config/0.3.30/download"
              ],
              "strip_prefix": "pkg-config-0.3.30",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"pkg_config\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pkg-config\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.30\",\n)\n"
            }
          },
          "crate_index__socket2-0.5.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__socket2-0.5.6",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "05ffd9c0a93b7543e062e759284fcf5f5e3b098501104bfbdde4d404db792871",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/socket2/0.5.6/download"
              ],
              "strip_prefix": "socket2-0.5.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"socket2\",\n    deps = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"all\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=socket2\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.5.6\",\n)\n"
            }
          },
          "crate_index__des-0.8.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__des-0.8.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ffdd80ce8ce993de27e9f063a444a4d53ce8e8db4c1f00cc03af5ad5a9867a1e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/des/0.8.1/download"
              ],
              "strip_prefix": "des-0.8.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"des\",\n    deps = [\n        \"@crate_index__cipher-0.4.4//:cipher\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=des\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.1\",\n)\n"
            }
          },
          "crate_index__async-io-1.13.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__async-io-1.13.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "0fc5b45d93ef0529756f812ca52e44c221b35341892d3dcc34132ac02f3dd2af",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/async-io/1.13.0/download"
              ],
              "strip_prefix": "async-io-1.13.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"async_io\",\n    deps = [\n        \"@crate_index__async-io-1.13.0//:build_script_build\",\n        \"@crate_index__async-lock-2.8.0//:async_lock\",\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__concurrent-queue-2.4.0//:concurrent_queue\",\n        \"@crate_index__futures-lite-1.13.0//:futures_lite\",\n        \"@crate_index__log-0.4.21//:log\",\n        \"@crate_index__parking-2.2.0//:parking\",\n        \"@crate_index__polling-2.8.0//:polling\",\n        \"@crate_index__rustix-0.37.27//:rustix\",\n        \"@crate_index__slab-0.4.9//:slab\",\n        \"@crate_index__socket2-0.4.10//:socket2\",\n        \"@crate_index__waker-fn-1.1.1//:waker_fn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=async-io\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.13.0\",\n)\n\ncargo_build_script(\n    name = \"async-io_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__autocfg-1.1.0//:autocfg\",\n    ],\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=async-io\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.13.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":async-io_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__proc-macro2-1.0.78": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__proc-macro2-1.0.78",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e2422ad645d89c99f8f3e6b88a9fdeca7fabeac836b1002371c4367c8f984aae",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/proc-macro2/1.0.78/download"
              ],
              "strip_prefix": "proc-macro2-1.0.78",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"proc_macro2\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.78//:build_script_build\",\n        \"@crate_index__unicode-ident-1.0.12//:unicode_ident\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"proc-macro\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=proc-macro2\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.78\",\n)\n\ncargo_build_script(\n    name = \"proc-macro2_bs\",\n    crate_features = [\n        \"default\",\n        \"proc-macro\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=proc-macro2\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.0.78\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":proc-macro2_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows_x86_64_gnu-0.48.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows_x86_64_gnu-0.48.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_gnu/0.48.5/download"
              ],
              "strip_prefix": "windows_x86_64_gnu-0.48.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_x86_64_gnu\",\n    deps = [\n        \"@crate_index__windows_x86_64_gnu-0.48.5//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.48.5\",\n)\n\ncargo_build_script(\n    name = \"windows_x86_64_gnu_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.48.5\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":windows_x86_64_gnu_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__autocfg-1.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__autocfg-1.1.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/autocfg/1.1.0/download"
              ],
              "strip_prefix": "autocfg-1.1.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"autocfg\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=autocfg\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.1.0\",\n)\n"
            }
          },
          "crate_index__futures-0.3.30": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__futures-0.3.30",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "645c6916888f6cb6350d2550b80fb63e734897a8498abe35cfb732b6487804b0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/futures/0.3.30/download"
              ],
              "strip_prefix": "futures-0.3.30",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"futures\",\n    deps = [\n        \"@crate_index__futures-channel-0.3.30//:futures_channel\",\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-executor-0.3.30//:futures_executor\",\n        \"@crate_index__futures-io-0.3.30//:futures_io\",\n        \"@crate_index__futures-sink-0.3.30//:futures_sink\",\n        \"@crate_index__futures-task-0.3.30//:futures_task\",\n        \"@crate_index__futures-util-0.3.30//:futures_util\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"async-await\",\n        \"default\",\n        \"executor\",\n        \"futures-executor\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=futures\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.30\",\n)\n"
            }
          },
          "crate_index__scopeguard-1.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__scopeguard-1.2.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/scopeguard/1.2.0/download"
              ],
              "strip_prefix": "scopeguard-1.2.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"scopeguard\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=scopeguard\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.2.0\",\n)\n"
            }
          },
          "crate_index__strum-0.23.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__strum-0.23.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "cae14b91c7d11c9a851d3fbc80a963198998c2a64eec840477fa92d8ce9b70bb",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/strum/0.23.0/download"
              ],
              "strip_prefix": "strum-0.23.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"strum\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=strum\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.23.0\",\n)\n"
            }
          },
          "crate_index__axum-core-0.3.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__axum-core-0.3.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "759fa577a247914fd3f7f76d62972792636412fbfd634cd452f6a385a74d2d2c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/axum-core/0.3.4/download"
              ],
              "strip_prefix": "axum-core-0.3.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"axum_core\",\n    deps = [\n        \"@crate_index__axum-core-0.3.4//:build_script_build\",\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__futures-util-0.3.30//:futures_util\",\n        \"@crate_index__http-0.2.11//:http\",\n        \"@crate_index__http-body-0.4.6//:http_body\",\n        \"@crate_index__mime-0.3.17//:mime\",\n        \"@crate_index__tower-layer-0.3.2//:tower_layer\",\n        \"@crate_index__tower-service-0.3.2//:tower_service\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__async-trait-0.1.77//:async_trait\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=axum-core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.4\",\n)\n\ncargo_build_script(\n    name = \"axum-core_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    proc_macro_deps = [\n        \"@crate_index__rustversion-1.0.14//:rustversion\",\n    ],\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=axum-core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.3.4\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":axum-core_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__schannel-0.1.23": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__schannel-0.1.23",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "fbc91545643bcf3a0bbb6569265615222618bdf33ce4ffbbd13c4bbd4c093534",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/schannel/0.1.23/download"
              ],
              "strip_prefix": "schannel-0.1.23",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"schannel\",\n    deps = [\n        \"@crate_index__windows-sys-0.52.0//:windows_sys\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=schannel\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.23\",\n)\n"
            }
          },
          "crate_index__security-framework-2.9.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__security-framework-2.9.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "05b64fb303737d99b81884b2c63433e9ae28abebe5eb5045dcdd175dc2ecf4de",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/security-framework/2.9.2/download"
              ],
              "strip_prefix": "security-framework-2.9.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"security_framework\",\n    deps = [\n        \"@crate_index__bitflags-1.3.2//:bitflags\",\n        \"@crate_index__core-foundation-0.9.4//:core_foundation\",\n        \"@crate_index__core-foundation-sys-0.8.6//:core_foundation_sys\",\n        \"@crate_index__libc-0.2.153//:libc\",\n        \"@crate_index__security-framework-sys-2.9.1//:security_framework_sys\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"OSX_10_9\",\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=security-framework\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.9.2\",\n)\n"
            }
          },
          "crate_index__syn-2.0.52": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__syn-2.0.52",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b699d15b36d1f02c3e7c69f8ffef53de37aefae075d8488d4ba1a7788d574a07",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/syn/2.0.52/download"
              ],
              "strip_prefix": "syn-2.0.52",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"syn\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__unicode-ident-1.0.12//:unicode_ident\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"clone-impls\",\n        \"default\",\n        \"derive\",\n        \"extra-traits\",\n        \"full\",\n        \"parsing\",\n        \"printing\",\n        \"proc-macro\",\n        \"quote\",\n        \"visit-mut\",\n    ] + select({\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"visit\",  # wasm32-unknown-unknown\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"visit\",  # wasm32-wasi\n        ],\n        \"//conditions:default\": [],\n    }),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=syn\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.0.52\",\n)\n"
            }
          },
          "crate_index__siphasher-0.3.11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__siphasher-0.3.11",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/siphasher/0.3.11/download"
              ],
              "strip_prefix": "siphasher-0.3.11",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"siphasher\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=siphasher\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.11\",\n)\n"
            }
          },
          "crate_index__core-foundation-sys-0.8.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__core-foundation-sys-0.8.6",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "06ea2b9bc92be3c2baa9334a323ebca2d6f074ff852cd1d7b11064035cd3868f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/core-foundation-sys/0.8.6/download"
              ],
              "strip_prefix": "core-foundation-sys-0.8.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"core_foundation_sys\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"link\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=core-foundation-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.6\",\n)\n"
            }
          },
          "crate_index__bytes-1.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__bytes-1.5.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a2bd12c1caf447e69cd4528f47f94d203fd2582878ecb9e9465484c4148a8223",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bytes/1.5.0/download"
              ],
              "strip_prefix": "bytes-1.5.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"bytes\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=bytes\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.5.0\",\n)\n"
            }
          },
          "crate_index__twox-hash-1.6.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__twox-hash-1.6.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "97fee6b57c6a41524a810daee9286c02d7752c4253064d0b05472833a438f675",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/twox-hash/1.6.3/download"
              ],
              "strip_prefix": "twox-hash-1.6.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"twox_hash\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__rand-0.8.5//:rand\",\n        \"@crate_index__static_assertions-1.1.0//:static_assertions\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"rand\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=twox-hash\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.6.3\",\n)\n"
            }
          },
          "crate_index__phf-0.11.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__phf-0.11.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ade2d8b8f33c7333b51bcf0428d37e217e9f32192ae4772156f65063b8ce03dc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/phf/0.11.2/download"
              ],
              "strip_prefix": "phf-0.11.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"phf\",\n    deps = [\n        \"@crate_index__phf_shared-0.11.2//:phf_shared\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=phf\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.11.2\",\n)\n"
            }
          },
          "crate_index__prost-types-0.12.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__prost-types-0.12.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "193898f59edcf43c26227dcd4c8427f00d99d61e95dcde58dabd49fa291d470e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/prost-types/0.12.3/download"
              ],
              "strip_prefix": "prost-types-0.12.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"prost_types\",\n    deps = [\n        \"@crate_index__prost-0.12.3//:prost\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=prost-types\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.12.3\",\n)\n"
            }
          },
          "crate_index__syn-1.0.109": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__syn-1.0.109",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/syn/1.0.109/download"
              ],
              "strip_prefix": "syn-1.0.109",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"syn\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-1.0.109//:build_script_build\",\n        \"@crate_index__unicode-ident-1.0.12//:unicode_ident\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"clone-impls\",\n        \"default\",\n        \"derive\",\n        \"extra-traits\",\n        \"parsing\",\n        \"printing\",\n        \"proc-macro\",\n        \"quote\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=syn\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.109\",\n)\n\ncargo_build_script(\n    name = \"syn_bs\",\n    crate_features = [\n        \"clone-impls\",\n        \"default\",\n        \"derive\",\n        \"extra-traits\",\n        \"parsing\",\n        \"printing\",\n        \"proc-macro\",\n        \"quote\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=syn\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.0.109\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":syn_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows_i686_gnu-0.48.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows_i686_gnu-0.48.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_i686_gnu/0.48.5/download"
              ],
              "strip_prefix": "windows_i686_gnu-0.48.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_i686_gnu\",\n    deps = [\n        \"@crate_index__windows_i686_gnu-0.48.5//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_i686_gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.48.5\",\n)\n\ncargo_build_script(\n    name = \"windows_i686_gnu_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_i686_gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.48.5\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":windows_i686_gnu_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__http-0.2.11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__http-0.2.11",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8947b1a6fad4393052c7ba1f4cd97bed3e953a95c79c92ad9b051a04611d9fbb",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/http/0.2.11/download"
              ],
              "strip_prefix": "http-0.2.11",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"http\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__fnv-1.0.7//:fnv\",\n        \"@crate_index__itoa-1.0.10//:itoa\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=http\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.11\",\n)\n"
            }
          },
          "crate_index__rayon-core-1.12.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__rayon-core-1.12.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rayon-core/1.12.1/download"
              ],
              "strip_prefix": "rayon-core-1.12.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rayon_core\",\n    deps = [\n        \"@crate_index__crossbeam-deque-0.8.5//:crossbeam_deque\",\n        \"@crate_index__crossbeam-utils-0.8.19//:crossbeam_utils\",\n        \"@crate_index__rayon-core-1.12.1//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rayon-core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.12.1\",\n)\n\ncargo_build_script(\n    name = \"rayon-core_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    links = \"rayon-core\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rayon-core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.12.1\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":rayon-core_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__prost-0.12.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__prost-0.12.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "146c289cda302b98a28d40c8b3b90498d6e526dd24ac2ecea73e4e491685b94a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/prost/0.12.3/download"
              ],
              "strip_prefix": "prost-0.12.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"prost\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__prost-derive-0.12.3//:prost_derive\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"prost-derive\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=prost\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.12.3\",\n)\n"
            }
          },
          "crate_index__hashbrown-0.14.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__hashbrown-0.14.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "290f1a1d9242c78d09ce40a5e87e7554ee637af1351968159f4952f028f75604",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hashbrown/0.14.3/download"
              ],
              "strip_prefix": "hashbrown-0.14.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"hashbrown\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"raw\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=hashbrown\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.14.3\",\n)\n"
            }
          },
          "crate_index__windows_x86_64_gnu-0.52.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows_x86_64_gnu-0.52.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5eee091590e89cc02ad514ffe3ead9eb6b660aedca2183455434b93546371a03",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_gnu/0.52.4/download"
              ],
              "strip_prefix": "windows_x86_64_gnu-0.52.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_x86_64_gnu\",\n    deps = [\n        \"@crate_index__windows_x86_64_gnu-0.52.4//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.4\",\n)\n\ncargo_build_script(\n    name = \"windows_x86_64_gnu_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.52.4\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":windows_x86_64_gnu_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__equivalent-1.0.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__equivalent-1.0.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/equivalent/1.0.1/download"
              ],
              "strip_prefix": "equivalent-1.0.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"equivalent\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=equivalent\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.1\",\n)\n"
            }
          },
          "crate_index__mio-0.8.11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__mio-0.8.11",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a4a650543ca06a924e8b371db273b2756685faae30f8487da1b56505a8f78b0c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/mio/0.8.11/download"
              ],
              "strip_prefix": "mio-0.8.11",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"mio\",\n    deps = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.48.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.48.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(target_os = \"wasi\")\n            \"@crate_index__wasi-0.11.0-wasi-snapshot-preview1//:wasi\",  # cfg(target_os = \"wasi\")\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.48.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"net\",\n        \"os-ext\",\n        \"os-poll\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=mio\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.11\",\n)\n"
            }
          },
          "crate_index__untrusted-0.9.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__untrusted-0.9.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/untrusted/0.9.0/download"
              ],
              "strip_prefix": "untrusted-0.9.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"untrusted\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=untrusted\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.9.0\",\n)\n"
            }
          },
          "crate_index__chrono-0.4.34": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__chrono-0.4.34",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5bc015644b92d5890fab7489e49d21f879d5c990186827d42ec511919404f38b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/chrono/0.4.34/download"
              ],
              "strip_prefix": "chrono-0.4.34",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"chrono\",\n    deps = [\n        \"@crate_index__num-traits-0.2.18//:num_traits\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__android-tzdata-0.1.1//:android_tzdata\",  # cfg(target_os = \"android\")\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__windows-targets-0.52.4//:windows_targets\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__android-tzdata-0.1.1//:android_tzdata\",  # cfg(target_os = \"android\")\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__android-tzdata-0.1.1//:android_tzdata\",  # cfg(target_os = \"android\")\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__windows-targets-0.52.4//:windows_targets\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"@crate_index__js-sys-0.3.68//:js_sys\",  # cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))\n            \"@crate_index__wasm-bindgen-0.2.91//:wasm_bindgen\",  # cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__android-tzdata-0.1.1//:android_tzdata\",  # cfg(target_os = \"android\")\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__windows-targets-0.52.4//:windows_targets\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__iana-time-zone-0.1.60//:iana_time_zone\",  # cfg(unix)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"android-tzdata\",\n        \"clock\",\n        \"default\",\n        \"iana-time-zone\",\n        \"js-sys\",\n        \"now\",\n        \"oldtime\",\n        \"std\",\n        \"wasm-bindgen\",\n        \"wasmbind\",\n        \"winapi\",\n        \"windows-targets\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=chrono\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.34\",\n)\n"
            }
          },
          "crate_index__serde_json-1.0.114": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__serde_json-1.0.114",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c5f09b1bd632ef549eaa9f60a1f8de742bdbc698e6cee2095fc84dde5f549ae0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/serde_json/1.0.114/download"
              ],
              "strip_prefix": "serde_json-1.0.114",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"serde_json\",\n    deps = [\n        \"@crate_index__itoa-1.0.10//:itoa\",\n        \"@crate_index__ryu-1.0.17//:ryu\",\n        \"@crate_index__serde-1.0.197//:serde\",\n        \"@crate_index__serde_json-1.0.114//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=serde_json\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.114\",\n)\n\ncargo_build_script(\n    name = \"serde_json_bs\",\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=serde_json\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.0.114\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":serde_json_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__simple_asn1-0.6.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__simple_asn1-0.6.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "adc4e5204eb1910f40f9cfa375f6f05b68c3abac4b6fd879c8ff5e7ae8a0a085",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/simple_asn1/0.6.2/download"
              ],
              "strip_prefix": "simple_asn1-0.6.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"simple_asn1\",\n    deps = [\n        \"@crate_index__num-bigint-0.4.4//:num_bigint\",\n        \"@crate_index__num-traits-0.2.18//:num_traits\",\n        \"@crate_index__thiserror-1.0.57//:thiserror\",\n        \"@crate_index__time-0.3.34//:time\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=simple_asn1\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.6.2\",\n)\n"
            }
          },
          "crate_index__ring-0.17.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__ring-0.17.8",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ring/0.17.8/download"
              ],
              "strip_prefix": "ring-0.17.8",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"ring\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__getrandom-0.2.12//:getrandom\",\n        \"@crate_index__ring-0.17.8//:build_script_build\",\n        \"@crate_index__untrusted-0.9.0//:untrusted\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(target_arch = \"aarch64\", target_arch = \"arm\")))\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(all(target_arch = \"aarch64\", target_os = \"windows\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(target_arch = \"aarch64\", target_arch = \"arm\")))\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(target_arch = \"aarch64\", target_arch = \"arm\")))\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(target_arch = \"aarch64\", target_arch = \"arm\")))\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(target_arch = \"aarch64\", target_arch = \"arm\")))\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(target_arch = \"aarch64\", target_arch = \"arm\")))\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [\n            \"@crate_index__spin-0.9.8//:spin\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"dev_urandom_fallback\",\n        \"std\",\n    ] + select({\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"wasm32_unknown_unknown_js\",  # wasm32-unknown-unknown\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"wasm32_unknown_unknown_js\",  # wasm32-wasi\n        ],\n        \"//conditions:default\": [],\n    }),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=ring\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.17.8\",\n)\n\ncargo_build_script(\n    name = \"ring_bs\",\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"dev_urandom_fallback\",\n        \"std\",\n    ] + select({\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"wasm32_unknown_unknown_js\",  # wasm32-unknown-unknown\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"wasm32_unknown_unknown_js\",  # wasm32-wasi\n        ],\n        \"//conditions:default\": [],\n    }),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__cc-1.0.88//:cc\",\n    ],\n    edition = \"2021\",\n    links = \"ring_core_0_17_8\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=ring\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.17.8\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":ring_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__aes-0.8.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__aes-0.8.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b169f7a6d4742236a0a00c541b845991d0ac43e546831af1249753ab4c3aa3a0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/aes/0.8.4/download"
              ],
              "strip_prefix": "aes-0.8.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"aes\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__cipher-0.4.4//:cipher\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=aes\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.4\",\n)\n"
            }
          },
          "crate_index__native-tls-0.2.11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__native-tls-0.2.11",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "07226173c32f2926027b63cce4bcd8076c3552846cbe7925f3aaffeac0a3b92e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/native-tls/0.2.11/download"
              ],
              "strip_prefix": "native-tls-0.2.11",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"native_tls\",\n    deps = [\n        \"@crate_index__native-tls-0.2.11//:build_script_build\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__lazy_static-1.4.0//:lazy_static\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__security-framework-2.9.2//:security_framework\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__security-framework-sys-2.9.1//:security_framework_sys\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__tempfile-3.10.1//:tempfile\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__lazy_static-1.4.0//:lazy_static\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__security-framework-2.9.2//:security_framework\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__security-framework-sys-2.9.1//:security_framework_sys\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__tempfile-3.10.1//:tempfile\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__lazy_static-1.4.0//:lazy_static\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__security-framework-2.9.2//:security_framework\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__security-framework-sys-2.9.1//:security_framework_sys\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__tempfile-3.10.1//:tempfile\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__schannel-0.1.23//:schannel\",  # cfg(target_os = \"windows\")\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__lazy_static-1.4.0//:lazy_static\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__security-framework-2.9.2//:security_framework\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__security-framework-sys-2.9.1//:security_framework_sys\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__tempfile-3.10.1//:tempfile\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__schannel-0.1.23//:schannel\",  # cfg(target_os = \"windows\")\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__lazy_static-1.4.0//:lazy_static\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__security-framework-2.9.2//:security_framework\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__security-framework-sys-2.9.1//:security_framework_sys\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__tempfile-3.10.1//:tempfile\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__lazy_static-1.4.0//:lazy_static\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__security-framework-2.9.2//:security_framework\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__security-framework-sys-2.9.1//:security_framework_sys\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n            \"@crate_index__tempfile-3.10.1//:tempfile\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__schannel-0.1.23//:schannel\",  # cfg(target_os = \"windows\")\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [\n            \"@crate_index__log-0.4.21//:log\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-0.10.64//:openssl\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-probe-0.1.5//:openssl_probe\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=native-tls\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.11\",\n)\n\ncargo_build_script(\n    name = \"native-tls_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    link_deps = select({\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [\n            \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",  # cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))\n        ],\n        \"//conditions:default\": [],\n    }),\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=native-tls\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.2.11\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":native-tls_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__windows_i686_gnu-0.52.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows_i686_gnu-0.52.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b474d8268f99e0995f25b9f095bc7434632601028cf86590aea5c8a5cb7801d3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_i686_gnu/0.52.4/download"
              ],
              "strip_prefix": "windows_i686_gnu-0.52.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_i686_gnu\",\n    deps = [\n        \"@crate_index__windows_i686_gnu-0.52.4//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_i686_gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.4\",\n)\n\ncargo_build_script(\n    name = \"windows_i686_gnu_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_i686_gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.52.4\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":windows_i686_gnu_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__amq-protocol-uri-7.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__amq-protocol-uri-7.1.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "751bbd7d440576066233e740576f1b31fdc6ab86cfabfbd48c548de77eca73e4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/amq-protocol-uri/7.1.2/download"
              ],
              "strip_prefix": "amq-protocol-uri-7.1.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"amq_protocol_uri\",\n    deps = [\n        \"@crate_index__amq-protocol-types-7.1.2//:amq_protocol_types\",\n        \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",\n        \"@crate_index__url-2.5.0//:url\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=amq-protocol-uri\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"7.1.2\",\n)\n"
            }
          },
          "crate_index__pin-project-internal-1.1.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__pin-project-internal-1.1.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "266c042b60c9c76b8d53061e52b2e0d1116abc57cefc8c5cd671619a56ac3690",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/pin-project-internal/1.1.4/download"
              ],
              "strip_prefix": "pin-project-internal-1.1.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"pin_project_internal\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.52//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pin-project-internal\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.1.4\",\n)\n"
            }
          },
          "crate_index__amq-protocol-tcp-7.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__amq-protocol-tcp-7.1.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9cb2100adae7da61953a2c3a01935d86caae13329fadce3333f524d6d6ce12e2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/amq-protocol-tcp/7.1.2/download"
              ],
              "strip_prefix": "amq-protocol-tcp-7.1.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"amq_protocol_tcp\",\n    deps = [\n        \"@crate_index__amq-protocol-uri-7.1.2//:amq_protocol_uri\",\n        \"@crate_index__tcp-stream-0.26.1//:tcp_stream\",\n        \"@crate_index__tracing-0.1.40//:tracing\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"rustls-connector\",\n        \"rustls-native-certs\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=amq-protocol-tcp\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"7.1.2\",\n)\n"
            }
          },
          "crate_index__num_enum_derive-0.6.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__num_enum_derive-0.6.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "96667db765a921f7b295ffee8b60472b686a51d4f21c2ee4ffdb94c7013b65a6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num_enum_derive/0.6.1/download"
              ],
              "strip_prefix": "num_enum_derive-0.6.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"num_enum_derive\",\n    deps = [\n        \"@crate_index__proc-macro-crate-1.3.1//:proc_macro_crate\",\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.52//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"proc-macro-crate\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=num_enum_derive\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.6.1\",\n)\n"
            }
          },
          "crate_index__base64-0.21.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__base64-0.21.7",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/base64/0.21.7/download"
              ],
              "strip_prefix": "base64-0.21.7",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"base64\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=base64\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.21.7\",\n)\n"
            }
          },
          "crate_index__linux-raw-sys-0.4.13": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__linux-raw-sys-0.4.13",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "01cda141df6706de531b6c46c3a33ecca755538219bd484262fa09410c13539c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/linux-raw-sys/0.4.13/download"
              ],
              "strip_prefix": "linux-raw-sys-0.4.13",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"linux_raw_sys\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"general\",\n        \"if_ether\",\n        \"ioctl\",\n        \"net\",\n        \"netlink\",\n        \"no_std\",\n        \"prctl\",\n        \"xdp\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"elf\",  # aarch64-unknown-linux-gnu\n            \"errno\",  # aarch64-unknown-linux-gnu\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"elf\",  # aarch64-unknown-nixos-gnu\n            \"errno\",  # aarch64-unknown-nixos-gnu\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"elf\",  # arm-unknown-linux-gnueabi\n            \"errno\",  # arm-unknown-linux-gnueabi\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"elf\",  # armv7-unknown-linux-gnueabi\n            \"errno\",  # armv7-unknown-linux-gnueabi\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"elf\",  # i686-unknown-linux-gnu\n            \"errno\",  # i686-unknown-linux-gnu\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"elf\",  # x86_64-unknown-linux-gnu\n            \"errno\",  # x86_64-unknown-linux-gnu\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"elf\",  # x86_64-unknown-nixos-gnu\n            \"errno\",  # x86_64-unknown-nixos-gnu\n        ],\n        \"//conditions:default\": [],\n    }),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=linux-raw-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.13\",\n)\n"
            }
          },
          "crate_index__mime_guess-2.0.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__mime_guess-2.0.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4192263c238a5f0d0c6bfd21f336a313a4ce1c450542449ca191bb657b4642ef",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/mime_guess/2.0.4/download"
              ],
              "strip_prefix": "mime_guess-2.0.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"mime_guess\",\n    deps = [\n        \"@crate_index__mime-0.3.17//:mime\",\n        \"@crate_index__mime_guess-2.0.4//:build_script_build\",\n        \"@crate_index__unicase-2.7.0//:unicase\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"rev-mappings\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=mime_guess\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.0.4\",\n)\n\ncargo_build_script(\n    name = \"mime_guess_bs\",\n    crate_features = [\n        \"default\",\n        \"rev-mappings\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__unicase-2.7.0//:unicase\",\n    ],\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=mime_guess\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"2.0.4\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":mime_guess_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__hyper-tls-0.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__hyper-tls-0.5.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d6183ddfa99b85da61a140bea0efc93fdf56ceaa041b37d553518030827f9905",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hyper-tls/0.5.0/download"
              ],
              "strip_prefix": "hyper-tls-0.5.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"hyper_tls\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__hyper-0.14.28//:hyper\",\n        \"@crate_index__native-tls-0.2.11//:native_tls\",\n        \"@crate_index__tokio-1.36.0//:tokio\",\n        \"@crate_index__tokio-native-tls-0.3.1//:tokio_native_tls\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=hyper-tls\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.5.0\",\n)\n"
            }
          },
          "crate_index__itertools-0.10.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__itertools-0.10.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/itertools/0.10.5/download"
              ],
              "strip_prefix": "itertools-0.10.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"itertools\",\n    deps = [\n        \"@crate_index__either-1.10.0//:either\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"use_alloc\",\n        \"use_std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=itertools\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.5\",\n)\n"
            }
          },
          "crate_index__tinyvec-1.6.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tinyvec-1.6.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "87cc5ceb3875bb20c2890005a4e226a4651264a5c75edb2421b52861a0a0cb50",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tinyvec/1.6.0/download"
              ],
              "strip_prefix": "tinyvec-1.6.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tinyvec\",\n    deps = [\n        \"@crate_index__tinyvec_macros-0.1.1//:tinyvec_macros\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"tinyvec_macros\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tinyvec\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.6.0\",\n)\n"
            }
          },
          "crate_index__serde_urlencoded-0.7.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__serde_urlencoded-0.7.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/serde_urlencoded/0.7.1/download"
              ],
              "strip_prefix": "serde_urlencoded-0.7.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"serde_urlencoded\",\n    deps = [\n        \"@crate_index__form_urlencoded-1.2.1//:form_urlencoded\",\n        \"@crate_index__itoa-1.0.10//:itoa\",\n        \"@crate_index__ryu-1.0.17//:ryu\",\n        \"@crate_index__serde-1.0.197//:serde\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=serde_urlencoded\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.7.1\",\n)\n"
            }
          },
          "crate_index__bitflags-2.4.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__bitflags-2.4.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ed570934406eb16438a4e976b1b4500774099c13b8cb96eec99f620f05090ddf",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bitflags/2.4.2/download"
              ],
              "strip_prefix": "bitflags-2.4.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"bitflags\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=bitflags\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.4.2\",\n)\n"
            }
          },
          "crate_index__web-sys-0.3.68": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__web-sys-0.3.68",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "96565907687f7aceb35bc5fc03770a8a0471d82e479f25832f54a0e3f4b28446",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/web-sys/0.3.68/download"
              ],
              "strip_prefix": "web-sys-0.3.68",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"web_sys\",\n    deps = [\n        \"@crate_index__js-sys-0.3.68//:js_sys\",\n        \"@crate_index__wasm-bindgen-0.2.91//:wasm_bindgen\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"AbortController\",\n        \"AbortSignal\",\n        \"Blob\",\n        \"BlobPropertyBag\",\n        \"EventTarget\",\n        \"File\",\n        \"FormData\",\n        \"Headers\",\n        \"QueuingStrategy\",\n        \"ReadableByteStreamController\",\n        \"ReadableStream\",\n        \"ReadableStreamByobReader\",\n        \"ReadableStreamByobRequest\",\n        \"ReadableStreamDefaultController\",\n        \"ReadableStreamDefaultReader\",\n        \"ReadableStreamGetReaderOptions\",\n        \"ReadableStreamReadResult\",\n        \"ReadableStreamReaderMode\",\n        \"ReadableStreamType\",\n        \"ReadableWritablePair\",\n        \"Request\",\n        \"RequestCredentials\",\n        \"RequestInit\",\n        \"RequestMode\",\n        \"Response\",\n        \"ServiceWorkerGlobalScope\",\n        \"StreamPipeOptions\",\n        \"TransformStream\",\n        \"TransformStreamDefaultController\",\n        \"Transformer\",\n        \"UnderlyingSink\",\n        \"UnderlyingSource\",\n        \"Window\",\n        \"WorkerGlobalScope\",\n        \"WritableStream\",\n        \"WritableStreamDefaultController\",\n        \"WritableStreamDefaultWriter\",\n    ] + select({\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"CanvasRenderingContext2d\",  # wasm32-unknown-unknown\n            \"Document\",  # wasm32-unknown-unknown\n            \"DomRect\",  # wasm32-unknown-unknown\n            \"DomRectReadOnly\",  # wasm32-unknown-unknown\n            \"Element\",  # wasm32-unknown-unknown\n            \"HtmlCanvasElement\",  # wasm32-unknown-unknown\n            \"HtmlElement\",  # wasm32-unknown-unknown\n            \"Node\",  # wasm32-unknown-unknown\n        ],\n        \"//conditions:default\": [],\n    }),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=web-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.68\",\n)\n"
            }
          },
          "crate_index__oorandom-11.1.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__oorandom-11.1.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "0ab1bc2a289d34bd04a330323ac98a1b4bc82c9d9fcb1e66b63caa84da26b575",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/oorandom/11.1.3/download"
              ],
              "strip_prefix": "oorandom-11.1.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"oorandom\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=oorandom\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"11.1.3\",\n)\n"
            }
          },
          "crate_index__tower-layer-0.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tower-layer-0.3.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c20c8dbed6283a09604c3e69b4b7eeb54e298b8a600d4d5ecb5ad39de609f1d0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tower-layer/0.3.2/download"
              ],
              "strip_prefix": "tower-layer-0.3.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tower_layer\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tower-layer\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.2\",\n)\n"
            }
          },
          "crate_index__num-bigint-0.4.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__num-bigint-0.4.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "608e7659b5c3d7cba262d894801b9ec9d00de989e8a82bd4bef91d08da45cdc0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num-bigint/0.4.4/download"
              ],
              "strip_prefix": "num-bigint-0.4.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"num_bigint\",\n    deps = [\n        \"@crate_index__num-bigint-0.4.4//:build_script_build\",\n        \"@crate_index__num-integer-0.1.46//:num_integer\",\n        \"@crate_index__num-traits-0.2.18//:num_traits\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=num-bigint\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.4\",\n)\n\ncargo_build_script(\n    name = \"num-bigint_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__autocfg-1.1.0//:autocfg\",\n    ],\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=num-bigint\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.4.4\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":num-bigint_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__anstyle-1.0.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__anstyle-1.0.6",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8901269c6307e8d93993578286ac0edf7f195079ffff5ebdeea6a59ffb7e36bc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anstyle/1.0.6/download"
              ],
              "strip_prefix": "anstyle-1.0.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"anstyle\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=anstyle\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.6\",\n)\n"
            }
          },
          "crate_index__hyper-0.14.28": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__hyper-0.14.28",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bf96e135eb83a2a8ddf766e426a841d8ddd7449d5f00d34ea02b41d2f19eef80",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hyper/0.14.28/download"
              ],
              "strip_prefix": "hyper-0.14.28",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"hyper\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__futures-channel-0.3.30//:futures_channel\",\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-util-0.3.30//:futures_util\",\n        \"@crate_index__h2-0.3.24//:h2\",\n        \"@crate_index__http-0.2.11//:http\",\n        \"@crate_index__http-body-0.4.6//:http_body\",\n        \"@crate_index__httparse-1.8.0//:httparse\",\n        \"@crate_index__httpdate-1.0.3//:httpdate\",\n        \"@crate_index__itoa-1.0.10//:itoa\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n        \"@crate_index__socket2-0.5.6//:socket2\",\n        \"@crate_index__tokio-1.36.0//:tokio\",\n        \"@crate_index__tower-service-0.3.2//:tower_service\",\n        \"@crate_index__tracing-0.1.40//:tracing\",\n        \"@crate_index__want-0.3.1//:want\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"client\",\n        \"default\",\n        \"full\",\n        \"h2\",\n        \"http1\",\n        \"http2\",\n        \"runtime\",\n        \"server\",\n        \"socket2\",\n        \"stream\",\n        \"tcp\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=hyper\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.14.28\",\n)\n"
            }
          },
          "crate_index__linux-raw-sys-0.3.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__linux-raw-sys-0.3.8",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ef53942eb7bf7ff43a617b3e2c1c4a5ecf5944a7c1bc12d7ee39bbb15e5c1519",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/linux-raw-sys/0.3.8/download"
              ],
              "strip_prefix": "linux-raw-sys-0.3.8",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"linux_raw_sys\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"general\",\n        \"ioctl\",\n        \"no_std\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"errno\",  # aarch64-unknown-linux-gnu\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"errno\",  # aarch64-unknown-nixos-gnu\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"errno\",  # arm-unknown-linux-gnueabi\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"errno\",  # armv7-unknown-linux-gnueabi\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"errno\",  # i686-unknown-linux-gnu\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"errno\",  # x86_64-unknown-linux-gnu\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"errno\",  # x86_64-unknown-nixos-gnu\n        ],\n        \"//conditions:default\": [],\n    }),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=linux-raw-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.8\",\n)\n"
            }
          },
          "crate_index__ipnet-2.9.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__ipnet-2.9.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8f518f335dce6725a761382244631d86cf0ccb2863413590b31338feb467f9c3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ipnet/2.9.0/download"
              ],
              "strip_prefix": "ipnet-2.9.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"ipnet\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=ipnet\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.9.0\",\n)\n"
            }
          },
          "crate_index__prost-build-0.12.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__prost-build-0.12.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c55e02e35260070b6f716a2423c2ff1c3bb1642ddca6f99e1f26d06268a0e2d2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/prost-build/0.12.3/download"
              ],
              "strip_prefix": "prost-build-0.12.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"prost_build\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__heck-0.4.1//:heck\",\n        \"@crate_index__itertools-0.11.0//:itertools\",\n        \"@crate_index__log-0.4.21//:log\",\n        \"@crate_index__multimap-0.8.3//:multimap\",\n        \"@crate_index__once_cell-1.19.0//:once_cell\",\n        \"@crate_index__petgraph-0.6.4//:petgraph\",\n        \"@crate_index__prettyplease-0.2.16//:prettyplease\",\n        \"@crate_index__prost-0.12.3//:prost\",\n        \"@crate_index__prost-types-0.12.3//:prost_types\",\n        \"@crate_index__regex-1.10.3//:regex\",\n        \"@crate_index__syn-2.0.52//:syn\",\n        \"@crate_index__tempfile-3.10.1//:tempfile\",\n        \"@crate_index__which-4.4.2//:which\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"format\",\n        \"prettyplease\",\n        \"syn\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=prost-build\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.12.3\",\n)\n"
            }
          },
          "crate_index__kafka-0.10.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__kafka-0.10.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "2054ba4edcb4dcda4209e138c7e88caf26d4a325b3db76fbdb6ca5eecc23e426",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/kafka/0.10.0/download"
              ],
              "strip_prefix": "kafka-0.10.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"kafka\",\n    deps = [\n        \"@crate_index__byteorder-1.5.0//:byteorder\",\n        \"@crate_index__crc-3.0.1//:crc\",\n        \"@crate_index__flate2-1.0.28//:flate2\",\n        \"@crate_index__fnv-1.0.7//:fnv\",\n        \"@crate_index__kafka-0.10.0//:build_script_build\",\n        \"@crate_index__openssl-0.10.64//:openssl\",\n        \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",\n        \"@crate_index__ref_slice-1.2.1//:ref_slice\",\n        \"@crate_index__thiserror-1.0.57//:thiserror\",\n        \"@crate_index__tracing-0.1.40//:tracing\",\n        \"@crate_index__twox-hash-1.6.3//:twox_hash\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"flate2\",\n        \"gzip\",\n        \"openssl\",\n        \"openssl-sys\",\n        \"security\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=kafka\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.0\",\n)\n\ncargo_build_script(\n    name = \"kafka_bs\",\n    crate_features = [\n        \"flate2\",\n        \"gzip\",\n        \"openssl\",\n        \"openssl-sys\",\n        \"security\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    link_deps = [\n        \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",\n    ],\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=kafka\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.10.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":kafka_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__serde_derive-1.0.197": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__serde_derive-1.0.197",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7eb0b34b42edc17f6b7cac84a52a1c5f0e1bb2227e997ca9011ea3dd34e8610b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/serde_derive/1.0.197/download"
              ],
              "strip_prefix": "serde_derive-1.0.197",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"serde_derive\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.52//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=serde_derive\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.197\",\n)\n"
            }
          },
          "crate_index__static_assertions-1.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__static_assertions-1.1.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/static_assertions/1.1.0/download"
              ],
              "strip_prefix": "static_assertions-1.1.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"static_assertions\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=static_assertions\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.1.0\",\n)\n"
            }
          },
          "crate_index__tinytemplate-1.2.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tinytemplate-1.2.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tinytemplate/1.2.1/download"
              ],
              "strip_prefix": "tinytemplate-1.2.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tinytemplate\",\n    deps = [\n        \"@crate_index__serde-1.0.197//:serde\",\n        \"@crate_index__serde_json-1.0.114//:serde_json\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tinytemplate\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.2.1\",\n)\n"
            }
          },
          "crate_index__slab-0.4.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__slab-0.4.9",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/slab/0.4.9/download"
              ],
              "strip_prefix": "slab-0.4.9",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"slab\",\n    deps = [\n        \"@crate_index__slab-0.4.9//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=slab\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.9\",\n)\n\ncargo_build_script(\n    name = \"slab_bs\",\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__autocfg-1.1.0//:autocfg\",\n    ],\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=slab\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.4.9\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":slab_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__time-0.3.34": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__time-0.3.34",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c8248b6521bb14bc45b4067159b9b6ad792e2d6d754d6c41fb50e29fefe38749",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/time/0.3.34/download"
              ],
              "strip_prefix": "time-0.3.34",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"time\",\n    deps = [\n        \"@crate_index__deranged-0.3.11//:deranged\",\n        \"@crate_index__itoa-1.0.10//:itoa\",\n        \"@crate_index__num-conv-0.1.0//:num_conv\",\n        \"@crate_index__powerfmt-0.2.0//:powerfmt\",\n        \"@crate_index__time-core-0.1.2//:time_core\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__time-macros-0.2.17//:time_macros\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"formatting\",\n        \"macros\",\n        \"parsing\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=time\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.34\",\n)\n"
            }
          },
          "crate_index__windows-targets-0.52.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows-targets-0.52.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7dd37b7e5ab9018759f893a1952c9420d060016fc19a472b4bb20d1bdd694d1b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows-targets/0.52.4/download"
              ],
              "strip_prefix": "windows-targets-0.52.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_targets\",\n    deps = select({\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__windows_aarch64_msvc-0.52.4//:windows_aarch64_msvc\",  # cfg(all(target_arch = \"aarch64\", target_env = \"msvc\", not(windows_raw_dylib)))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__windows_i686_msvc-0.52.4//:windows_i686_msvc\",  # cfg(all(target_arch = \"x86\", target_env = \"msvc\", not(windows_raw_dylib)))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__windows_i686_gnu-0.52.4//:windows_i686_gnu\",  # cfg(all(target_arch = \"x86\", target_env = \"gnu\", not(windows_raw_dylib)))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__windows_x86_64_msvc-0.52.4//:windows_x86_64_msvc\",  # cfg(all(target_arch = \"x86_64\", target_env = \"msvc\", not(windows_raw_dylib)))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__windows_x86_64_gnu-0.52.4//:windows_x86_64_gnu\",  # cfg(all(target_arch = \"x86_64\", target_env = \"gnu\", not(target_abi = \"llvm\"), not(windows_raw_dylib)))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__windows_x86_64_gnu-0.52.4//:windows_x86_64_gnu\",  # cfg(all(target_arch = \"x86_64\", target_env = \"gnu\", not(target_abi = \"llvm\"), not(windows_raw_dylib)))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows-targets\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.4\",\n)\n"
            }
          },
          "crate_index__tempfile-3.10.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tempfile-3.10.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "85b77fafb263dd9d05cbeac119526425676db3784113aa9295c88498cbf8bff1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tempfile/3.10.1/download"
              ],
              "strip_prefix": "tempfile-3.10.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tempfile\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__fastrand-2.0.1//:fastrand\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__rustix-0.38.31//:rustix\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tempfile\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"3.10.1\",\n)\n"
            }
          },
          "crate_index__cast-0.3.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__cast-0.3.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cast/0.3.0/download"
              ],
              "strip_prefix": "cast-0.3.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"cast\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=cast\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.0\",\n)\n"
            }
          },
          "crate_index__histogram-0.6.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__histogram-0.6.9",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "12cb882ccb290b8646e554b157ab0b71e64e8d5bef775cd66b6531e52d302669",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/histogram/0.6.9/download"
              ],
              "strip_prefix": "histogram-0.6.9",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"histogram\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=histogram\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.6.9\",\n)\n"
            }
          },
          "crate_index__windows-targets-0.48.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows-targets-0.48.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows-targets/0.48.5/download"
              ],
              "strip_prefix": "windows-targets-0.48.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_targets\",\n    deps = select({\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__windows_aarch64_msvc-0.48.5//:windows_aarch64_msvc\",  # cfg(all(target_arch = \"aarch64\", target_env = \"msvc\", not(windows_raw_dylib)))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__windows_i686_msvc-0.48.5//:windows_i686_msvc\",  # cfg(all(target_arch = \"x86\", target_env = \"msvc\", not(windows_raw_dylib)))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__windows_i686_gnu-0.48.5//:windows_i686_gnu\",  # cfg(all(target_arch = \"x86\", target_env = \"gnu\", not(windows_raw_dylib)))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__windows_x86_64_msvc-0.48.5//:windows_x86_64_msvc\",  # cfg(all(target_arch = \"x86_64\", target_env = \"msvc\", not(windows_raw_dylib)))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__windows_x86_64_gnu-0.48.5//:windows_x86_64_gnu\",  # cfg(all(target_arch = \"x86_64\", target_env = \"gnu\", not(target_abi = \"llvm\"), not(windows_raw_dylib)))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__windows_x86_64_gnu-0.48.5//:windows_x86_64_gnu\",  # cfg(all(target_arch = \"x86_64\", target_env = \"gnu\", not(target_abi = \"llvm\"), not(windows_raw_dylib)))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows-targets\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.48.5\",\n)\n"
            }
          },
          "crate_index__flate2-1.0.28": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__flate2-1.0.28",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "46303f565772937ffe1d394a4fac6f411c6013172fadde9dcdb1e147a086940e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/flate2/1.0.28/download"
              ],
              "strip_prefix": "flate2-1.0.28",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"flate2\",\n    deps = [\n        \"@crate_index__crc32fast-1.4.0//:crc32fast\",\n        \"@crate_index__miniz_oxide-0.7.2//:miniz_oxide\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"any_impl\",\n        \"default\",\n        \"miniz_oxide\",\n        \"rust_backend\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=flate2\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.28\",\n)\n"
            }
          },
          "crate_index__clap_lex-0.7.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__clap_lex-0.7.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "98cc8fbded0c607b7ba9dd60cd98df59af97e84d24e49c8557331cfc26d301ce",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/clap_lex/0.7.0/download"
              ],
              "strip_prefix": "clap_lex-0.7.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"clap_lex\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=clap_lex\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.7.0\",\n)\n"
            }
          },
          "crate_index__ident_case-1.0.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__ident_case-1.0.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ident_case/1.0.1/download"
              ],
              "strip_prefix": "ident_case-1.0.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"ident_case\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=ident_case\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.1\",\n)\n"
            }
          },
          "crate_index__unicode-ident-1.0.12": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__unicode-ident-1.0.12",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicode-ident/1.0.12/download"
              ],
              "strip_prefix": "unicode-ident-1.0.12",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"unicode_ident\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=unicode-ident\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.12\",\n)\n"
            }
          },
          "crate_index__miniz_oxide-0.7.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__miniz_oxide-0.7.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9d811f3e15f28568be3407c8e7fdb6514c1cda3cb30683f15b6a1a1dc4ea14a7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/miniz_oxide/0.7.2/download"
              ],
              "strip_prefix": "miniz_oxide-0.7.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"miniz_oxide\",\n    deps = [\n        \"@crate_index__adler-1.0.2//:adler\",\n        \"@crate_index__simd-adler32-0.3.7//:simd_adler32\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"simd\",\n        \"simd-adler32\",\n        \"with-alloc\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=miniz_oxide\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.7.2\",\n)\n"
            }
          },
          "crate_index__sct-0.7.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__sct-0.7.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "da046153aa2352493d6cb7da4b6e5c0c057d8a1d0a9aa8560baffdd945acd414",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/sct/0.7.1/download"
              ],
              "strip_prefix": "sct-0.7.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"sct\",\n    deps = [\n        \"@crate_index__ring-0.17.8//:ring\",\n        \"@crate_index__untrusted-0.9.0//:untrusted\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=sct\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.7.1\",\n)\n"
            }
          },
          "crate_index__ciborium-ll-0.2.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__ciborium-ll-0.2.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "57663b653d948a338bfb3eeba9bb2fd5fcfaecb9e199e87e1eda4d9e8b240fd9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ciborium-ll/0.2.2/download"
              ],
              "strip_prefix": "ciborium-ll-0.2.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"ciborium_ll\",\n    deps = [\n        \"@crate_index__ciborium-io-0.2.2//:ciborium_io\",\n        \"@crate_index__half-2.4.0//:half\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=ciborium-ll\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.2\",\n)\n"
            }
          },
          "crate_index__nom-7.1.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__nom-7.1.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/nom/7.1.3/download"
              ],
              "strip_prefix": "nom-7.1.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"nom\",\n    deps = [\n        \"@crate_index__memchr-2.7.1//:memchr\",\n        \"@crate_index__minimal-lexical-0.2.1//:minimal_lexical\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=nom\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"7.1.3\",\n)\n"
            }
          },
          "crate_index__tower-service-0.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tower-service-0.3.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b6bc1c9ce2b5135ac7f93c72918fc37feb872bdc6a5533a8b85eb4b86bfdae52",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tower-service/0.3.2/download"
              ],
              "strip_prefix": "tower-service-0.3.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tower_service\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tower-service\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.2\",\n)\n"
            }
          },
          "crate_index__io-lifetimes-1.0.11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__io-lifetimes-1.0.11",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "eae7b9aee968036d54dce06cebaefd919e4472e753296daccd6d344e3e2df0c2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/io-lifetimes/1.0.11/download"
              ],
              "strip_prefix": "io-lifetimes-1.0.11",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"io_lifetimes\",\n    deps = [\n        \"@crate_index__io-lifetimes-1.0.11//:build_script_build\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.48.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.48.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.48.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"close\",\n        \"hermit-abi\",\n        \"libc\",\n        \"windows-sys\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=io-lifetimes\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.11\",\n)\n\ncargo_build_script(\n    name = \"io-lifetimes_bs\",\n    crate_features = [\n        \"close\",\n        \"hermit-abi\",\n        \"libc\",\n        \"windows-sys\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=io-lifetimes\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.0.11\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":io-lifetimes_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__digest-0.10.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__digest-0.10.7",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/digest/0.10.7/download"
              ],
              "strip_prefix": "digest-0.10.7",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"digest\",\n    deps = [\n        \"@crate_index__block-buffer-0.10.4//:block_buffer\",\n        \"@crate_index__crypto-common-0.1.6//:crypto_common\",\n        \"@crate_index__subtle-2.5.0//:subtle\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"block-buffer\",\n        \"core-api\",\n        \"default\",\n        \"mac\",\n        \"std\",\n        \"subtle\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=digest\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.7\",\n)\n"
            }
          },
          "crate_index__js-sys-0.3.68": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__js-sys-0.3.68",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "406cda4b368d531c842222cf9d2600a9a4acce8d29423695379c6868a143a9ee",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/js-sys/0.3.68/download"
              ],
              "strip_prefix": "js-sys-0.3.68",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"js_sys\",\n    deps = [\n        \"@crate_index__wasm-bindgen-0.2.91//:wasm_bindgen\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=js-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.68\",\n)\n"
            }
          },
          "crate_index__encoding_rs-0.8.33": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__encoding_rs-0.8.33",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7268b386296a025e474d5140678f75d6de9493ae55a5d709eeb9dd08149945e1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/encoding_rs/0.8.33/download"
              ],
              "strip_prefix": "encoding_rs-0.8.33",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"encoding_rs\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=encoding_rs\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.33\",\n)\n"
            }
          },
          "crate_index__futures-util-0.3.30": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__futures-util-0.3.30",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/futures-util/0.3.30/download"
              ],
              "strip_prefix": "futures-util-0.3.30",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"futures_util\",\n    deps = [\n        \"@crate_index__futures-channel-0.3.30//:futures_channel\",\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-io-0.3.30//:futures_io\",\n        \"@crate_index__futures-sink-0.3.30//:futures_sink\",\n        \"@crate_index__futures-task-0.3.30//:futures_task\",\n        \"@crate_index__memchr-2.7.1//:memchr\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n        \"@crate_index__pin-utils-0.1.0//:pin_utils\",\n        \"@crate_index__slab-0.4.9//:slab\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__futures-macro-0.3.30//:futures_macro\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"async-await\",\n        \"async-await-macro\",\n        \"channel\",\n        \"futures-channel\",\n        \"futures-io\",\n        \"futures-macro\",\n        \"futures-sink\",\n        \"io\",\n        \"memchr\",\n        \"sink\",\n        \"slab\",\n        \"std\",\n    ] + select({\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"default\",  # wasm32-unknown-unknown\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"default\",  # wasm32-wasi\n        ],\n        \"//conditions:default\": [],\n    }),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=futures-util\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.30\",\n)\n"
            }
          },
          "crate_index__is-terminal-0.4.12": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__is-terminal-0.4.12",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f23ff5ef2b80d608d61efee834934d862cd92461afc0560dedf493e4c033738b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/is-terminal/0.4.12/download"
              ],
              "strip_prefix": "is-terminal-0.4.12",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"is_terminal\",\n    deps = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(any(unix, target_os = \"wasi\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=is-terminal\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.12\",\n)\n"
            }
          },
          "crate_index__itertools-0.11.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__itertools-0.11.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b1c173a5686ce8bfa551b3563d0c2170bf24ca44da99c7ca4bfdab5418c3fe57",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/itertools/0.11.0/download"
              ],
              "strip_prefix": "itertools-0.11.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"itertools\",\n    deps = [\n        \"@crate_index__either-1.10.0//:either\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"use_alloc\",\n        \"use_std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=itertools\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.11.0\",\n)\n"
            }
          },
          "crate_index__either-1.10.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__either-1.10.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "11157ac094ffbdde99aa67b23417ebdd801842852b500e395a45a9c0aac03e4a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/either/1.10.0/download"
              ],
              "strip_prefix": "either-1.10.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"either\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"use_std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=either\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.10.0\",\n)\n"
            }
          },
          "crate_index__num_cpus-1.16.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__num_cpus-1.16.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num_cpus/1.16.0/download"
              ],
              "strip_prefix": "num_cpus-1.16.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"num_cpus\",\n    deps = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(not(windows))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=num_cpus\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.16.0\",\n)\n"
            }
          },
          "crate_index__fast_image_resize-3.0.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__fast_image_resize-3.0.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c9d450fac8a334ad72825596173f0f7767ff04dd6e3d59c49c894c4bc2957e8b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/fast_image_resize/3.0.4/download"
              ],
              "strip_prefix": "fast_image_resize-3.0.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"fast_image_resize\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__num-traits-0.2.18//:num_traits\",\n        \"@crate_index__thiserror-1.0.57//:thiserror\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=fast_image_resize\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"3.0.4\",\n)\n"
            }
          },
          "crate_index__adler-1.0.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__adler-1.0.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/adler/1.0.2/download"
              ],
              "strip_prefix": "adler-1.0.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"adler\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=adler\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.2\",\n)\n"
            }
          },
          "crate_index__simd-adler32-0.3.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__simd-adler32-0.3.7",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d66dc143e6b11c1eddc06d5c423cfc97062865baf299914ab64caa38182078fe",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/simd-adler32/0.3.7/download"
              ],
              "strip_prefix": "simd-adler32-0.3.7",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"simd_adler32\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"const-generics\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=simd-adler32\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.7\",\n)\n"
            }
          },
          "crate_index__unicode-segmentation-1.11.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__unicode-segmentation-1.11.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d4c87d22b6e3f4a18d4d40ef354e97c90fcb14dd91d7dc0aa9d8a1172ebf7202",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicode-segmentation/1.11.0/download"
              ],
              "strip_prefix": "unicode-segmentation-1.11.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"unicode_segmentation\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=unicode-segmentation\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.11.0\",\n)\n"
            }
          },
          "crate_index__spin-0.9.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__spin-0.9.8",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/spin/0.9.8/download"
              ],
              "strip_prefix": "spin-0.9.8",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"spin\",\n    deps = [\n        \"@crate_index__lock_api-0.4.11//:lock_api\",\n    ],\n    aliases = {\n        \"@crate_index__lock_api-0.4.11//:lock_api\": \"lock_api_crate\",\n    },\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"barrier\",\n        \"default\",\n        \"lazy\",\n        \"lock_api\",\n        \"lock_api_crate\",\n        \"mutex\",\n        \"once\",\n        \"rwlock\",\n        \"spin_mutex\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=spin\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.9.8\",\n)\n"
            }
          },
          "crate_index__unicode-bidi-0.3.15": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__unicode-bidi-0.3.15",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "08f95100a766bf4f8f28f90d77e0a5461bbdb219042e7679bebe79004fed8d75",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicode-bidi/0.3.15/download"
              ],
              "strip_prefix": "unicode-bidi-0.3.15",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"unicode_bidi\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"hardcoded-data\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=unicode-bidi\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.15\",\n)\n"
            }
          },
          "crate_index__gimli-0.28.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__gimli-0.28.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4271d37baee1b8c7e4b708028c57d816cf9d2434acb33a549475f78c181f6253",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gimli/0.28.1/download"
              ],
              "strip_prefix": "gimli-0.28.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"gimli\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=gimli\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.28.1\",\n)\n"
            }
          },
          "crate_index__half-2.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__half-2.4.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b5eceaaeec696539ddaf7b333340f1af35a5aa87ae3e4f3ead0532f72affab2e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/half/2.4.0/download"
              ],
              "strip_prefix": "half-2.4.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"half\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=half\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.4.0\",\n)\n"
            }
          },
          "crate_index__openssl-macros-0.1.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__openssl-macros-0.1.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/openssl-macros/0.1.1/download"
              ],
              "strip_prefix": "openssl-macros-0.1.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"openssl_macros\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.52//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=openssl-macros\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.1\",\n)\n"
            }
          },
          "crate_index__waker-fn-1.1.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__waker-fn-1.1.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f3c4517f54858c779bbcbf228f4fca63d121bf85fbecb2dc578cdf4a39395690",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/waker-fn/1.1.1/download"
              ],
              "strip_prefix": "waker-fn-1.1.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"waker_fn\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=waker-fn\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.1.1\",\n)\n"
            }
          },
          "crate_index__minimal-lexical-0.2.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__minimal-lexical-0.2.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/minimal-lexical/0.2.1/download"
              ],
              "strip_prefix": "minimal-lexical-0.2.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"minimal_lexical\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=minimal-lexical\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.1\",\n)\n"
            }
          },
          "crate_index__mime-0.3.17": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__mime-0.3.17",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/mime/0.3.17/download"
              ],
              "strip_prefix": "mime-0.3.17",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"mime\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=mime\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.17\",\n)\n"
            }
          },
          "crate_index__wasm-bindgen-0.2.91": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__wasm-bindgen-0.2.91",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c1e124130aee3fb58c5bdd6b639a0509486b0338acaaae0c84a5124b0f588b7f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen/0.2.91/download"
              ],
              "strip_prefix": "wasm-bindgen-0.2.91",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"wasm_bindgen\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__wasm-bindgen-0.2.91//:build_script_build\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__wasm-bindgen-macro-0.2.91//:wasm_bindgen_macro\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"spans\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=wasm-bindgen\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.91\",\n)\n\ncargo_build_script(\n    name = \"wasm-bindgen_bs\",\n    crate_features = [\n        \"default\",\n        \"spans\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=wasm-bindgen\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.2.91\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":wasm-bindgen_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__fdeflate-0.3.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__fdeflate-0.3.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4f9bfee30e4dedf0ab8b422f03af778d9612b63f502710fc500a334ebe2de645",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/fdeflate/0.3.4/download"
              ],
              "strip_prefix": "fdeflate-0.3.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"fdeflate\",\n    deps = [\n        \"@crate_index__simd-adler32-0.3.7//:simd_adler32\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=fdeflate\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.4\",\n)\n"
            }
          },
          "crate_index__futures-core-0.3.30": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__futures-core-0.3.30",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "dfc6580bb841c5a68e9ef15c77ccc837b40a7504914d52e47b8b0e9bbda25a1d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/futures-core/0.3.30/download"
              ],
              "strip_prefix": "futures-core-0.3.30",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"futures_core\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=futures-core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.30\",\n)\n"
            }
          },
          "crate_index__quote-1.0.35": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__quote-1.0.35",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "291ec9ab5efd934aaf503a6466c5d5251535d108ee747472c3977cc5acc868ef",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/quote/1.0.35/download"
              ],
              "strip_prefix": "quote-1.0.35",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"quote\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"proc-macro\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=quote\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.35\",\n)\n"
            }
          },
          "crate_index__rustix-0.37.27": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__rustix-0.37.27",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "fea8ca367a3a01fe35e6943c400addf443c0f57670e6ec51196f71a4b8762dd2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustix/0.37.27/download"
              ],
              "strip_prefix": "rustix-0.37.27",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rustix\",\n    deps = [\n        \"@crate_index__bitflags-1.3.2//:bitflags\",\n        \"@crate_index__io-lifetimes-1.0.11//:io_lifetimes\",\n        \"@crate_index__rustix-0.37.27//:build_script_build\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__linux-raw-sys-0.3.8//:linux_raw_sys\",  # cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(windows)\n            \"@crate_index__windows-sys-0.48.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__linux-raw-sys-0.3.8//:linux_raw_sys\",  # cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\")))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__linux-raw-sys-0.3.8//:linux_raw_sys\",  # cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\")))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__linux-raw-sys-0.3.8//:linux_raw_sys\",  # cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\")))))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__linux-raw-sys-0.3.8//:linux_raw_sys\",  # cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__linux-raw-sys-0.3.8//:linux_raw_sys\",  # cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\")))))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__linux-raw-sys-0.3.8//:linux_raw_sys\",  # cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(windows)\n            \"@crate_index__windows-sys-0.48.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__linux-raw-sys-0.3.8//:linux_raw_sys\",  # cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\")))))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__linux-raw-sys-0.3.8//:linux_raw_sys\",  # cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__linux-raw-sys-0.3.8//:linux_raw_sys\",  # cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__linux-raw-sys-0.3.8//:linux_raw_sys\",  # cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(windows)\n            \"@crate_index__windows-sys-0.48.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__linux-raw-sys-0.3.8//:linux_raw_sys\",  # cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\")))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__linux-raw-sys-0.3.8//:linux_raw_sys\",  # cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\")))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        ],\n        \"//conditions:default\": [],\n    }),\n    aliases = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:aarch64-linux-android\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(windows)\n        },\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:i686-apple-darwin\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:i686-linux-android\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(windows)\n        },\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:wasm32-wasi\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:x86_64-linux-android\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(windows)\n        },\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", any(target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"), all(target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"powerpc64\", target_arch = \"riscv64\", target_arch = \"mips\", target_arch = \"mips64\"))))))))\n        },\n        \"//conditions:default\": {},\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"fs\",\n        \"io-lifetimes\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rustix\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.37.27\",\n)\n\ncargo_build_script(\n    name = \"rustix_bs\",\n    crate_features = [\n        \"fs\",\n        \"io-lifetimes\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rustix\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.37.27\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":rustix_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__tcp-stream-0.26.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tcp-stream-0.26.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4da30af7998f51ee1aa48ab24276fe303a697b004e31ff542b192c088d5630a5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tcp-stream/0.26.1/download"
              ],
              "strip_prefix": "tcp-stream-0.26.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tcp_stream\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__p12-0.6.3//:p12\",\n        \"@crate_index__rustls-connector-0.18.5//:rustls_connector\",\n        \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"p12\",\n        \"rustls-common\",\n        \"rustls-connector\",\n        \"rustls-native-certs\",\n        \"rustls-pemfile\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tcp-stream\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.26.1\",\n)\n"
            }
          },
          "crate_index__phf_shared-0.11.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__phf_shared-0.11.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "90fcb95eef784c2ac79119d1dd819e162b5da872ce6f3c3abe1e8ca1c082f72b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/phf_shared/0.11.2/download"
              ],
              "strip_prefix": "phf_shared-0.11.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"phf_shared\",\n    deps = [\n        \"@crate_index__siphasher-0.3.11//:siphasher\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=phf_shared\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.11.2\",\n)\n"
            }
          },
          "crate_index__cbc-0.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__cbc-0.1.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "26b52a9543ae338f279b96b0b9fed9c8093744685043739079ce85cd58f289a6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cbc/0.1.2/download"
              ],
              "strip_prefix": "cbc-0.1.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"cbc\",\n    deps = [\n        \"@crate_index__cipher-0.4.4//:cipher\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"block-padding\",\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=cbc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.2\",\n)\n"
            }
          },
          "crate_index__ciborium-io-0.2.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__ciborium-io-0.2.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "05afea1e0a06c9be33d539b876f1ce3692f4afea2cb41f740e7743225ed1c757",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ciborium-io/0.2.2/download"
              ],
              "strip_prefix": "ciborium-io-0.2.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"ciborium_io\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=ciborium-io\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.2\",\n)\n"
            }
          },
          "crate_index__image-0.24.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__image-0.24.9",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5690139d2f55868e080017335e4b94cb7414274c74f1669c84fb5feba2c9f69d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/image/0.24.9/download"
              ],
              "strip_prefix": "image-0.24.9",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"image\",\n    deps = [\n        \"@crate_index__bytemuck-1.14.3//:bytemuck\",\n        \"@crate_index__byteorder-1.5.0//:byteorder\",\n        \"@crate_index__color_quant-1.1.0//:color_quant\",\n        \"@crate_index__jpeg-decoder-0.3.1//:jpeg_decoder\",\n        \"@crate_index__num-traits-0.2.18//:num_traits\",\n        \"@crate_index__png-0.17.13//:png\",\n    ],\n    aliases = {\n        \"@crate_index__jpeg-decoder-0.3.1//:jpeg_decoder\": \"jpeg\",\n    },\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"jpeg\",\n        \"png\",\n        \"webp\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=image\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.24.9\",\n)\n"
            }
          },
          "crate_index__bumpalo-3.15.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__bumpalo-3.15.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8ea184aa71bb362a1157c896979544cc23974e08fd265f29ea96b59f0b4a555b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bumpalo/3.15.3/download"
              ],
              "strip_prefix": "bumpalo-3.15.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"bumpalo\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=bumpalo\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"3.15.3\",\n)\n"
            }
          },
          "crate_index__home-0.5.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__home-0.5.9",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/home/0.5.9/download"
              ],
              "strip_prefix": "home-0.5.9",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"home\",\n    deps = select({\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=home\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.5.9\",\n)\n"
            }
          },
          "crate_index__rustls-pemfile-1.0.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__rustls-pemfile-1.0.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1c74cae0a4cf6ccbbf5f359f08efdf8ee7e1dc532573bf0db71968cb56b1448c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustls-pemfile/1.0.4/download"
              ],
              "strip_prefix": "rustls-pemfile-1.0.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rustls_pemfile\",\n    deps = [\n        \"@crate_index__base64-0.21.7//:base64\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rustls-pemfile\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.4\",\n)\n"
            }
          },
          "crate_index__tokio-stream-0.1.14": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tokio-stream-0.1.14",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "397c988d37662c7dda6d2208364a706264bf3d6138b11d436cbac0ad38832842",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tokio-stream/0.1.14/download"
              ],
              "strip_prefix": "tokio-stream-0.1.14",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tokio_stream\",\n    deps = [\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n        \"@crate_index__tokio-1.36.0//:tokio\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"time\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tokio-stream\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.14\",\n)\n"
            }
          },
          "crate_index__byteorder-1.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__byteorder-1.5.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/byteorder/1.5.0/download"
              ],
              "strip_prefix": "byteorder-1.5.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"byteorder\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=byteorder\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.5.0\",\n)\n"
            }
          },
          "crate_index__pinky-swear-6.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__pinky-swear-6.2.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "6cfae3ead413ca051a681152bd266438d3bfa301c9bdf836939a14c721bb2a21",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/pinky-swear/6.2.0/download"
              ],
              "strip_prefix": "pinky-swear-6.2.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"pinky_swear\",\n    deps = [\n        \"@crate_index__doc-comment-0.3.3//:doc_comment\",\n        \"@crate_index__flume-0.11.0//:flume\",\n        \"@crate_index__parking_lot-0.12.1//:parking_lot\",\n        \"@crate_index__tracing-0.1.40//:tracing\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pinky-swear\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"6.2.0\",\n)\n"
            }
          },
          "crate_index__addr2line-0.21.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__addr2line-0.21.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8a30b2e23b9e17a9f90641c7ab1549cd9b44f296d3ccbf309d2863cfe398a0cb",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/addr2line/0.21.0/download"
              ],
              "strip_prefix": "addr2line-0.21.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"addr2line\",\n    deps = [\n        \"@crate_index__gimli-0.28.1//:gimli\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=addr2line\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.21.0\",\n)\n"
            }
          },
          "crate_index__lock_api-0.4.11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__lock_api-0.4.11",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3c168f8615b12bc01f9c17e2eb0cc07dcae1940121185446edc3744920e8ef45",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/lock_api/0.4.11/download"
              ],
              "strip_prefix": "lock_api-0.4.11",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"lock_api\",\n    deps = [\n        \"@crate_index__lock_api-0.4.11//:build_script_build\",\n        \"@crate_index__scopeguard-1.2.0//:scopeguard\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"atomic_usize\",\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=lock_api\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.11\",\n)\n\ncargo_build_script(\n    name = \"lock_api_bs\",\n    crate_features = [\n        \"atomic_usize\",\n        \"default\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__autocfg-1.1.0//:autocfg\",\n    ],\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=lock_api\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.4.11\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":lock_api_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__multimap-0.8.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__multimap-0.8.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e5ce46fe64a9d73be07dcbe690a38ce1b293be448fd8ce1e6c1b8062c9f72c6a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/multimap/0.8.3/download"
              ],
              "strip_prefix": "multimap-0.8.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"multimap\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=multimap\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.3\",\n)\n"
            }
          },
          "crate_index__crc-catalog-2.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__crc-catalog-2.4.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "19d374276b40fb8bbdee95aef7c7fa6b5316ec764510eb64b8dd0e2ed0d7e7f5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crc-catalog/2.4.0/download"
              ],
              "strip_prefix": "crc-catalog-2.4.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"crc_catalog\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=crc-catalog\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.4.0\",\n)\n"
            }
          },
          "crate_index__block-padding-0.3.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__block-padding-0.3.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a8894febbff9f758034a5b8e12d87918f56dfc64a8e1fe757d65e29041538d93",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/block-padding/0.3.3/download"
              ],
              "strip_prefix": "block-padding-0.3.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"block_padding\",\n    deps = [\n        \"@crate_index__generic-array-0.14.7//:generic_array\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=block-padding\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.3\",\n)\n"
            }
          },
          "crate_index__idna-0.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__idna-0.5.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "634d9b1461af396cad843f47fdba5597a4f9e6ddd4bfb6ff5d85028c25cb12f6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/idna/0.5.0/download"
              ],
              "strip_prefix": "idna-0.5.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"idna\",\n    deps = [\n        \"@crate_index__unicode-bidi-0.3.15//:unicode_bidi\",\n        \"@crate_index__unicode-normalization-0.1.23//:unicode_normalization\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=idna\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.5.0\",\n)\n"
            }
          },
          "crate_index__rand-0.8.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__rand-0.8.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rand/0.8.5/download"
              ],
              "strip_prefix": "rand-0.8.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rand\",\n    deps = [\n        \"@crate_index__rand_chacha-0.3.1//:rand_chacha\",\n        \"@crate_index__rand_core-0.6.4//:rand_core\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"getrandom\",\n        \"libc\",\n        \"rand_chacha\",\n        \"small_rng\",\n        \"std\",\n        \"std_rng\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rand\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.5\",\n)\n"
            }
          },
          "crate_index__url-2.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__url-2.5.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "31e6302e3bb753d46e83516cae55ae196fc0c309407cf11ab35cc51a4c2a4633",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/url/2.5.0/download"
              ],
              "strip_prefix": "url-2.5.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"url\",\n    deps = [\n        \"@crate_index__form_urlencoded-1.2.1//:form_urlencoded\",\n        \"@crate_index__idna-0.5.0//:idna\",\n        \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=url\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.5.0\",\n)\n"
            }
          },
          "crate_index__regex-1.10.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__regex-1.10.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b62dbe01f0b06f9d8dc7d49e05a0785f153b00b2c227856282f671e0318c9b15",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex/1.10.3/download"
              ],
              "strip_prefix": "regex-1.10.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"regex\",\n    deps = [\n        \"@crate_index__regex-automata-0.4.5//:regex_automata\",\n        \"@crate_index__regex-syntax-0.8.2//:regex_syntax\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n        \"unicode-bool\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=regex\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.10.3\",\n)\n"
            }
          },
          "crate_index__thiserror-impl-1.0.57": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__thiserror-impl-1.0.57",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a953cb265bef375dae3de6663da4d3804eee9682ea80d8e2542529b73c531c81",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/thiserror-impl/1.0.57/download"
              ],
              "strip_prefix": "thiserror-impl-1.0.57",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"thiserror_impl\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.52//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=thiserror-impl\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.57\",\n)\n"
            }
          },
          "crate_index__which-4.4.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__which-4.4.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "87ba24419a2078cd2b0f2ede2691b6c66d8e47836da3b6db8265ebad47afbfc7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/which/4.4.2/download"
              ],
              "strip_prefix": "which-4.4.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"which\",\n    deps = [\n        \"@crate_index__either-1.10.0//:either\",\n        \"@crate_index__rustix-0.38.31//:rustix\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n            \"@crate_index__once_cell-1.19.0//:once_cell\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__home-0.5.9//:home\",  # cfg(any(windows, unix, target_os = \"redox\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=which\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"4.4.2\",\n)\n"
            }
          },
          "crate_index__wasm-bindgen-futures-0.4.41": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__wasm-bindgen-futures-0.4.41",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "877b9c3f61ceea0e56331985743b13f3d25c406a7098d45180fb5f09bc19ed97",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-futures/0.4.41/download"
              ],
              "strip_prefix": "wasm-bindgen-futures-0.4.41",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"wasm_bindgen_futures\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__js-sys-0.3.68//:js_sys\",\n        \"@crate_index__wasm-bindgen-0.2.91//:wasm_bindgen\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=wasm-bindgen-futures\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.41\",\n)\n"
            }
          },
          "crate_index__event-listener-5.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__event-listener-5.2.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "2b5fb89194fa3cad959b833185b3063ba881dbfc7030680b314250779fb4cc91",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/event-listener/5.2.0/download"
              ],
              "strip_prefix": "event-listener-5.2.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"event_listener\",\n    deps = [\n        \"@crate_index__concurrent-queue-2.4.0//:concurrent_queue\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [\n            \"@crate_index__parking-2.2.0//:parking\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"parking\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=event-listener\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"5.2.0\",\n)\n"
            }
          },
          "crate_index__time-core-0.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__time-core-0.1.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/time-core/0.1.2/download"
              ],
              "strip_prefix": "time-core-0.1.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"time_core\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=time-core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.2\",\n)\n"
            }
          },
          "crate_index__ppv-lite86-0.2.17": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__ppv-lite86-0.2.17",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ppv-lite86/0.2.17/download"
              ],
              "strip_prefix": "ppv-lite86-0.2.17",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"ppv_lite86\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"simd\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=ppv-lite86\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.17\",\n)\n"
            }
          },
          "crate_index__lapin-2.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__lapin-2.3.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5f3067a1fcfbc3fc46455809c023e69b8f6602463201010f4ae5a3b572adb9dc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/lapin/2.3.1/download"
              ],
              "strip_prefix": "lapin-2.3.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"lapin\",\n    deps = [\n        \"@crate_index__amq-protocol-7.1.2//:amq_protocol\",\n        \"@crate_index__async-global-executor-trait-2.1.0//:async_global_executor_trait\",\n        \"@crate_index__async-reactor-trait-1.1.0//:async_reactor_trait\",\n        \"@crate_index__executor-trait-2.1.0//:executor_trait\",\n        \"@crate_index__flume-0.10.14//:flume\",\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-io-0.3.30//:futures_io\",\n        \"@crate_index__lapin-2.3.1//:build_script_build\",\n        \"@crate_index__parking_lot-0.12.1//:parking_lot\",\n        \"@crate_index__pinky-swear-6.2.0//:pinky_swear\",\n        \"@crate_index__reactor-trait-1.1.0//:reactor_trait\",\n        \"@crate_index__serde-1.0.197//:serde\",\n        \"@crate_index__tracing-0.1.40//:tracing\",\n        \"@crate_index__waker-fn-1.1.1//:waker_fn\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__async-trait-0.1.77//:async_trait\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"rustls\",\n        \"rustls-native-certs\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=lapin\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.3.1\",\n)\n\ncargo_build_script(\n    name = \"lapin_bs\",\n    crate_features = [\n        \"default\",\n        \"rustls\",\n        \"rustls-native-certs\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=lapin\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"2.3.1\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":lapin_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__generic-array-0.14.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__generic-array-0.14.7",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/generic-array/0.14.7/download"
              ],
              "strip_prefix": "generic-array-0.14.7",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"generic_array\",\n    deps = [\n        \"@crate_index__generic-array-0.14.7//:build_script_build\",\n        \"@crate_index__typenum-1.17.0//:typenum\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"more_lengths\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=generic-array\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.14.7\",\n)\n\ncargo_build_script(\n    name = \"generic-array_bs\",\n    crate_features = [\n        \"more_lengths\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__version_check-0.9.4//:version_check\",\n    ],\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=generic-array\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.14.7\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":generic-array_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__instant-0.1.12": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__instant-0.1.12",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7a5bbe824c507c5da5956355e86a746d82e0e1464f65d862cc5e71da70e94b2c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/instant/0.1.12/download"
              ],
              "strip_prefix": "instant-0.1.12",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"instant\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=instant\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.12\",\n)\n"
            }
          },
          "crate_index__itertools-0.12.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__itertools-0.12.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ba291022dbbd398a455acf126c1e341954079855bc60dfdda641363bd6922569",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/itertools/0.12.1/download"
              ],
              "strip_prefix": "itertools-0.12.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"itertools\",\n    deps = [\n        \"@crate_index__either-1.10.0//:either\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"use_alloc\",\n        \"use_std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=itertools\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.12.1\",\n)\n"
            }
          },
          "crate_index__try-lock-0.2.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__try-lock-0.2.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/try-lock/0.2.5/download"
              ],
              "strip_prefix": "try-lock-0.2.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"try_lock\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=try-lock\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.5\",\n)\n"
            }
          },
          "crate_index__async-trait-0.1.77": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__async-trait-0.1.77",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c980ee35e870bd1a4d2c8294d4c04d0499e67bca1e4b5cefcc693c2fa00caea9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/async-trait/0.1.77/download"
              ],
              "strip_prefix": "async-trait-0.1.77",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"async_trait\",\n    deps = [\n        \"@crate_index__async-trait-0.1.77//:build_script_build\",\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.52//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=async-trait\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.77\",\n)\n\ncargo_build_script(\n    name = \"async-trait_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=async-trait\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.1.77\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":async-trait_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__ref_slice-1.2.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__ref_slice-1.2.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f4ed1d73fb92eba9b841ba2aef69533a060ccc0d3ec71c90aeda5996d4afb7a9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ref_slice/1.2.1/download"
              ],
              "strip_prefix": "ref_slice-1.2.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"ref_slice\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=ref_slice\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.2.1\",\n)\n"
            }
          },
          "crate_index__sha1-0.10.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__sha1-0.10.6",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e3bf829a2d51ab4a5ddf1352d8470c140cadc8301b2ae1789db023f01cedd6ba",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/sha1/0.10.6/download"
              ],
              "strip_prefix": "sha1-0.10.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"sha1\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__digest-0.10.7//:digest\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [\n            \"@crate_index__cpufeatures-0.2.12//:cpufeatures\",  # cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=sha1\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.6\",\n)\n"
            }
          },
          "crate_index__deranged-0.3.11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__deranged-0.3.11",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/deranged/0.3.11/download"
              ],
              "strip_prefix": "deranged-0.3.11",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"deranged\",\n    deps = [\n        \"@crate_index__powerfmt-0.2.0//:powerfmt\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"powerfmt\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=deranged\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.11\",\n)\n"
            }
          },
          "crate_index__futures-sink-0.3.30": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__futures-sink-0.3.30",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9fb8e00e87438d937621c1c6269e53f536c14d3fbd6a042bb24879e57d474fb5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/futures-sink/0.3.30/download"
              ],
              "strip_prefix": "futures-sink-0.3.30",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"futures_sink\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=futures-sink\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.30\",\n)\n"
            }
          },
          "crate_index__crc32fast-1.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__crc32fast-1.4.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b3855a8a784b474f333699ef2bbca9db2c4a1f6d9088a90a2d25b1eb53111eaa",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crc32fast/1.4.0/download"
              ],
              "strip_prefix": "crc32fast-1.4.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"crc32fast\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__crc32fast-1.4.0//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=crc32fast\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.4.0\",\n)\n\ncargo_build_script(\n    name = \"crc32fast_bs\",\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=crc32fast\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.4.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":crc32fast_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__lz4_flex-0.11.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__lz4_flex-0.11.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "912b45c753ff5f7f5208307e8ace7d2a2e30d024e26d3509f3dce546c044ce15",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/lz4_flex/0.11.2/download"
              ],
              "strip_prefix": "lz4_flex-0.11.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"lz4_flex\",\n    deps = [\n        \"@crate_index__twox-hash-1.6.3//:twox_hash\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"frame\",\n        \"safe-decode\",\n        \"safe-encode\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=lz4_flex\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.11.2\",\n)\n"
            }
          },
          "crate_index__darling_core-0.20.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__darling_core-0.20.8",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9c2cf1c23a687a1feeb728783b993c4e1ad83d99f351801977dd809b48d0a70f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/darling_core/0.20.8/download"
              ],
              "strip_prefix": "darling_core-0.20.8",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"darling_core\",\n    deps = [\n        \"@crate_index__fnv-1.0.7//:fnv\",\n        \"@crate_index__ident_case-1.0.1//:ident_case\",\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__strsim-0.10.0//:strsim\",\n        \"@crate_index__syn-2.0.52//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"strsim\",\n        \"suggestions\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=darling_core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.20.8\",\n)\n"
            }
          },
          "crate_index__fastrand-1.9.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__fastrand-1.9.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e51093e27b0797c359783294ca4f0a911c270184cb10f85783b118614a1501be",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/fastrand/1.9.0/download"
              ],
              "strip_prefix": "fastrand-1.9.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"fastrand\",\n    deps = select({\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"@crate_index__instant-0.1.12//:instant\",  # cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=fastrand\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.9.0\",\n)\n"
            }
          },
          "crate_index__crossbeam-deque-0.8.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__crossbeam-deque-0.8.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crossbeam-deque/0.8.5/download"
              ],
              "strip_prefix": "crossbeam-deque-0.8.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"crossbeam_deque\",\n    deps = [\n        \"@crate_index__crossbeam-epoch-0.9.18//:crossbeam_epoch\",\n        \"@crate_index__crossbeam-utils-0.8.19//:crossbeam_utils\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=crossbeam-deque\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.5\",\n)\n"
            }
          },
          "crate_index__flume-0.10.14": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__flume-0.10.14",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1657b4441c3403d9f7b3409e47575237dac27b1b5726df654a6ecbf92f0f7577",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/flume/0.10.14/download"
              ],
              "strip_prefix": "flume-0.10.14",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"flume\",\n    deps = [\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-sink-0.3.30//:futures_sink\",\n        \"@crate_index__pin-project-1.1.4//:pin_project\",\n        \"@crate_index__spin-0.9.8//:spin\",\n    ],\n    aliases = {\n        \"@crate_index__spin-0.9.8//:spin\": \"spin1\",\n    },\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"async\",\n        \"futures-core\",\n        \"futures-sink\",\n        \"pin-project\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=flume\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.14\",\n)\n"
            }
          },
          "crate_index__winnow-0.5.40": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__winnow-0.5.40",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f593a95398737aeed53e489c785df13f3618e41dbcd6718c6addbf1395aa6876",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winnow/0.5.40/download"
              ],
              "strip_prefix": "winnow-0.5.40",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"winnow\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=winnow\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.5.40\",\n)\n"
            }
          },
          "crate_index__tokio-macros-2.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tokio-macros-2.2.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5b8a1e28f2deaa14e508979454cb3a223b10b938b45af148bc0986de36f1923b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tokio-macros/2.2.0/download"
              ],
              "strip_prefix": "tokio-macros-2.2.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"tokio_macros\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.52//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tokio-macros\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.2.0\",\n)\n"
            }
          },
          "crate_index__atomic-waker-1.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__atomic-waker-1.1.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/atomic-waker/1.1.2/download"
              ],
              "strip_prefix": "atomic-waker-1.1.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"atomic_waker\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=atomic-waker\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.1.2\",\n)\n"
            }
          },
          "crate_index__darling-0.20.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__darling-0.20.8",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "54e36fcd13ed84ffdfda6f5be89b31287cbb80c439841fe69e04841435464391",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/darling/0.20.8/download"
              ],
              "strip_prefix": "darling-0.20.8",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"darling\",\n    deps = [\n        \"@crate_index__darling_core-0.20.8//:darling_core\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__darling_macro-0.20.8//:darling_macro\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"suggestions\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=darling\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.20.8\",\n)\n"
            }
          },
          "crate_index__toml_edit-0.19.15": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__toml_edit-0.19.15",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1b5bb770da30e5cbfde35a2d7b9b8a2c4b8ef89548a7a6aeab5c9a576e3e7421",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/toml_edit/0.19.15/download"
              ],
              "strip_prefix": "toml_edit-0.19.15",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"toml_edit\",\n    deps = [\n        \"@crate_index__indexmap-2.2.5//:indexmap\",\n        \"@crate_index__toml_datetime-0.6.5//:toml_datetime\",\n        \"@crate_index__winnow-0.5.40//:winnow\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=toml_edit\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.19.15\",\n)\n"
            }
          },
          "crate_index": {
            "bzlFile": "@@rules_rust~0.40.0//crate_universe:extension.bzl",
            "ruleClassName": "_generate_repo",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index",
              "contents": {
                "BUILD.bazel": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files(\n    [\n        \"cargo-bazel.json\",\n        \"crates.bzl\",\n        \"defs.bzl\",\n    ] + glob(\n        allow_empty = True,\n        include = [\"*.bazel\"],\n    ),\n)\n\nfilegroup(\n    name = \"srcs\",\n    srcs = glob(\n        allow_empty = True,\n        include = [\n            \"*.bazel\",\n            \"*.bzl\",\n        ],\n    ),\n)\n\n# Workspace Member Dependencies\nalias(\n    name = \"aes\",\n    actual = \"@crate_index__aes-0.8.4//:aes\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"anyhow\",\n    actual = \"@crate_index__anyhow-1.0.80//:anyhow\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"chrono\",\n    actual = \"@crate_index__chrono-0.4.34//:chrono\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"cloudinary\",\n    actual = \"@crate_index__cloudinary-0.4.0//:cloudinary\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"criterion\",\n    actual = \"@crate_index__criterion-0.5.1//:criterion\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"fast_image_resize\",\n    actual = \"@crate_index__fast_image_resize-3.0.4//:fast_image_resize\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"fern\",\n    actual = \"@crate_index__fern-0.6.2//:fern\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"fpe\",\n    actual = \"@crate_index__fpe-0.6.1//:fpe\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"futures-executor\",\n    actual = \"@crate_index__futures-executor-0.3.30//:futures_executor\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"hex\",\n    actual = \"@crate_index__hex-0.4.3//:hex\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"image\",\n    actual = \"@crate_index__image-0.24.9//:image\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"isolang\",\n    actual = \"@crate_index__isolang-2.4.0//:isolang\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"jsonwebtoken\",\n    actual = \"@crate_index__jsonwebtoken-9.2.0//:jsonwebtoken\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"kafka\",\n    actual = \"@crate_index__kafka-0.10.0//:kafka\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"lapin\",\n    actual = \"@crate_index__lapin-2.3.1//:lapin\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"lazy_static\",\n    actual = \"@crate_index__lazy_static-1.4.0//:lazy_static\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"log\",\n    actual = \"@crate_index__log-0.4.21//:log\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"memcache\",\n    actual = \"@crate_index__memcache-0.17.2//:memcache\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"prost\",\n    actual = \"@crate_index__prost-0.12.3//:prost\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"prost-types\",\n    actual = \"@crate_index__prost-types-0.12.3//:prost_types\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"r2d2\",\n    actual = \"@crate_index__r2d2-0.8.10//:r2d2\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"regex-lite\",\n    actual = \"@crate_index__regex-lite-0.1.5//:regex_lite\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"reqwest\",\n    actual = \"@crate_index__reqwest-0.11.24//:reqwest\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"ring\",\n    actual = \"@crate_index__ring-0.17.8//:ring\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"rust-argon2\",\n    actual = \"@crate_index__rust-argon2-2.1.0//:argon2\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"scylla\",\n    actual = \"@crate_index__scylla-0.12.0//:scylla\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"serde\",\n    actual = \"@crate_index__serde-1.0.197//:serde\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"serde_json\",\n    actual = \"@crate_index__serde_json-1.0.114//:serde_json\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"serde_yaml\",\n    actual = \"@crate_index__serde_yaml-0.9.32//:serde_yaml\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"tempfile\",\n    actual = \"@crate_index__tempfile-3.10.1//:tempfile\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"tokio\",\n    actual = \"@crate_index__tokio-1.36.0//:tokio\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"tonic\",\n    actual = \"@crate_index__tonic-0.11.0//:tonic\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"totp-lite\",\n    actual = \"@crate_index__totp-lite-2.0.1//:totp_lite\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"url\",\n    actual = \"@crate_index__url-2.5.0//:url\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"uuid\",\n    actual = \"@crate_index__uuid-1.7.0//:uuid\",\n    tags = [\"manual\"],\n)\n\nalias(\n    name = \"warp\",\n    actual = \"@crate_index__warp-0.3.6//:warp\",\n    tags = [\"manual\"],\n)\n",
                "defs.bzl": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\"\"\"\n# `crates_repository` API\n\n- [aliases](#aliases)\n- [crate_deps](#crate_deps)\n- [all_crate_deps](#all_crate_deps)\n- [crate_repositories](#crate_repositories)\n\n\"\"\"\n\nload(\"@bazel_tools//tools/build_defs/repo:git.bzl\", \"new_git_repository\")\nload(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\nload(\"@bazel_tools//tools/build_defs/repo:utils.bzl\", \"maybe\")\nload(\"@bazel_skylib//lib:selects.bzl\", \"selects\")\n\n###############################################################################\n# MACROS API\n###############################################################################\n\n# An identifier that represent common dependencies (unconditional).\n_COMMON_CONDITION = \"\"\n\ndef _flatten_dependency_maps(all_dependency_maps):\n    \"\"\"Flatten a list of dependency maps into one dictionary.\n\n    Dependency maps have the following structure:\n\n    ```python\n    DEPENDENCIES_MAP = {\n        # The first key in the map is a Bazel package\n        # name of the workspace this file is defined in.\n        \"workspace_member_package\": {\n\n            # Not all dependencies are supported for all platforms.\n            # the condition key is the condition required to be true\n            # on the host platform.\n            \"condition\": {\n\n                # An alias to a crate target.     # The label of the crate target the\n                # Aliases are only crate names.   # package name refers to.\n                \"package_name\":                   \"@full//:label\",\n            }\n        }\n    }\n    ```\n\n    Args:\n        all_dependency_maps (list): A list of dicts as described above\n\n    Returns:\n        dict: A dictionary as described above\n    \"\"\"\n    dependencies = {}\n\n    for workspace_deps_map in all_dependency_maps:\n        for pkg_name, conditional_deps_map in workspace_deps_map.items():\n            if pkg_name not in dependencies:\n                non_frozen_map = dict()\n                for key, values in conditional_deps_map.items():\n                    non_frozen_map.update({key: dict(values.items())})\n                dependencies.setdefault(pkg_name, non_frozen_map)\n                continue\n\n            for condition, deps_map in conditional_deps_map.items():\n                # If the condition has not been recorded, do so and continue\n                if condition not in dependencies[pkg_name]:\n                    dependencies[pkg_name].setdefault(condition, dict(deps_map.items()))\n                    continue\n\n                # Alert on any miss-matched dependencies\n                inconsistent_entries = []\n                for crate_name, crate_label in deps_map.items():\n                    existing = dependencies[pkg_name][condition].get(crate_name)\n                    if existing and existing != crate_label:\n                        inconsistent_entries.append((crate_name, existing, crate_label))\n                    dependencies[pkg_name][condition].update({crate_name: crate_label})\n\n    return dependencies\n\ndef crate_deps(deps, package_name = None):\n    \"\"\"Finds the fully qualified label of the requested crates for the package where this macro is called.\n\n    Args:\n        deps (list): The desired list of crate targets.\n        package_name (str, optional): The package name of the set of dependencies to look up.\n            Defaults to `native.package_name()`.\n\n    Returns:\n        list: A list of labels to generated rust targets (str)\n    \"\"\"\n\n    if not deps:\n        return []\n\n    if package_name == None:\n        package_name = native.package_name()\n\n    # Join both sets of dependencies\n    dependencies = _flatten_dependency_maps([\n        _NORMAL_DEPENDENCIES,\n        _NORMAL_DEV_DEPENDENCIES,\n        _PROC_MACRO_DEPENDENCIES,\n        _PROC_MACRO_DEV_DEPENDENCIES,\n        _BUILD_DEPENDENCIES,\n        _BUILD_PROC_MACRO_DEPENDENCIES,\n    ]).pop(package_name, {})\n\n    # Combine all conditional packages so we can easily index over a flat list\n    # TODO: Perhaps this should actually return select statements and maintain\n    # the conditionals of the dependencies\n    flat_deps = {}\n    for deps_set in dependencies.values():\n        for crate_name, crate_label in deps_set.items():\n            flat_deps.update({crate_name: crate_label})\n\n    missing_crates = []\n    crate_targets = []\n    for crate_target in deps:\n        if crate_target not in flat_deps:\n            missing_crates.append(crate_target)\n        else:\n            crate_targets.append(flat_deps[crate_target])\n\n    if missing_crates:\n        fail(\"Could not find crates `{}` among dependencies of `{}`. Available dependencies were `{}`\".format(\n            missing_crates,\n            package_name,\n            dependencies,\n        ))\n\n    return crate_targets\n\ndef all_crate_deps(\n        normal = False, \n        normal_dev = False, \n        proc_macro = False, \n        proc_macro_dev = False,\n        build = False,\n        build_proc_macro = False,\n        package_name = None):\n    \"\"\"Finds the fully qualified label of all requested direct crate dependencies \\\n    for the package where this macro is called.\n\n    If no parameters are set, all normal dependencies are returned. Setting any one flag will\n    otherwise impact the contents of the returned list.\n\n    Args:\n        normal (bool, optional): If True, normal dependencies are included in the\n            output list.\n        normal_dev (bool, optional): If True, normal dev dependencies will be\n            included in the output list..\n        proc_macro (bool, optional): If True, proc_macro dependencies are included\n            in the output list.\n        proc_macro_dev (bool, optional): If True, dev proc_macro dependencies are\n            included in the output list.\n        build (bool, optional): If True, build dependencies are included\n            in the output list.\n        build_proc_macro (bool, optional): If True, build proc_macro dependencies are\n            included in the output list.\n        package_name (str, optional): The package name of the set of dependencies to look up.\n            Defaults to `native.package_name()` when unset.\n\n    Returns:\n        list: A list of labels to generated rust targets (str)\n    \"\"\"\n\n    if package_name == None:\n        package_name = native.package_name()\n\n    # Determine the relevant maps to use\n    all_dependency_maps = []\n    if normal:\n        all_dependency_maps.append(_NORMAL_DEPENDENCIES)\n    if normal_dev:\n        all_dependency_maps.append(_NORMAL_DEV_DEPENDENCIES)\n    if proc_macro:\n        all_dependency_maps.append(_PROC_MACRO_DEPENDENCIES)\n    if proc_macro_dev:\n        all_dependency_maps.append(_PROC_MACRO_DEV_DEPENDENCIES)\n    if build:\n        all_dependency_maps.append(_BUILD_DEPENDENCIES)\n    if build_proc_macro:\n        all_dependency_maps.append(_BUILD_PROC_MACRO_DEPENDENCIES)\n\n    # Default to always using normal dependencies\n    if not all_dependency_maps:\n        all_dependency_maps.append(_NORMAL_DEPENDENCIES)\n\n    dependencies = _flatten_dependency_maps(all_dependency_maps).pop(package_name, None)\n\n    if not dependencies:\n        if dependencies == None:\n            fail(\"Tried to get all_crate_deps for package \" + package_name + \" but that package had no Cargo.toml file\")\n        else:\n            return []\n\n    crate_deps = list(dependencies.pop(_COMMON_CONDITION, {}).values())\n    for condition, deps in dependencies.items():\n        crate_deps += selects.with_or({\n            tuple(_CONDITIONS[condition]): deps.values(),\n            \"//conditions:default\": [],\n        })\n\n    return crate_deps\n\ndef aliases(\n        normal = False,\n        normal_dev = False,\n        proc_macro = False,\n        proc_macro_dev = False,\n        build = False,\n        build_proc_macro = False,\n        package_name = None):\n    \"\"\"Produces a map of Crate alias names to their original label\n\n    If no dependency kinds are specified, `normal` and `proc_macro` are used by default.\n    Setting any one flag will otherwise determine the contents of the returned dict.\n\n    Args:\n        normal (bool, optional): If True, normal dependencies are included in the\n            output list.\n        normal_dev (bool, optional): If True, normal dev dependencies will be\n            included in the output list..\n        proc_macro (bool, optional): If True, proc_macro dependencies are included\n            in the output list.\n        proc_macro_dev (bool, optional): If True, dev proc_macro dependencies are\n            included in the output list.\n        build (bool, optional): If True, build dependencies are included\n            in the output list.\n        build_proc_macro (bool, optional): If True, build proc_macro dependencies are\n            included in the output list.\n        package_name (str, optional): The package name of the set of dependencies to look up.\n            Defaults to `native.package_name()` when unset.\n\n    Returns:\n        dict: The aliases of all associated packages\n    \"\"\"\n    if package_name == None:\n        package_name = native.package_name()\n\n    # Determine the relevant maps to use\n    all_aliases_maps = []\n    if normal:\n        all_aliases_maps.append(_NORMAL_ALIASES)\n    if normal_dev:\n        all_aliases_maps.append(_NORMAL_DEV_ALIASES)\n    if proc_macro:\n        all_aliases_maps.append(_PROC_MACRO_ALIASES)\n    if proc_macro_dev:\n        all_aliases_maps.append(_PROC_MACRO_DEV_ALIASES)\n    if build:\n        all_aliases_maps.append(_BUILD_ALIASES)\n    if build_proc_macro:\n        all_aliases_maps.append(_BUILD_PROC_MACRO_ALIASES)\n\n    # Default to always using normal aliases\n    if not all_aliases_maps:\n        all_aliases_maps.append(_NORMAL_ALIASES)\n        all_aliases_maps.append(_PROC_MACRO_ALIASES)\n\n    aliases = _flatten_dependency_maps(all_aliases_maps).pop(package_name, None)\n\n    if not aliases:\n        return dict()\n\n    common_items = aliases.pop(_COMMON_CONDITION, {}).items()\n\n    # If there are only common items in the dictionary, immediately return them\n    if not len(aliases.keys()) == 1:\n        return dict(common_items)\n\n    # Build a single select statement where each conditional has accounted for the\n    # common set of aliases.\n    crate_aliases = {\"//conditions:default\": dict(common_items)}\n    for condition, deps in aliases.items():\n        condition_triples = _CONDITIONS[condition]\n        for triple in condition_triples:\n            if triple in crate_aliases:\n                crate_aliases[triple].update(deps)\n            else:\n                crate_aliases.update({triple: dict(deps.items() + common_items)})\n\n    return select(crate_aliases)\n\n###############################################################################\n# WORKSPACE MEMBER DEPS AND ALIASES\n###############################################################################\n\n_NORMAL_DEPENDENCIES = {\n    \"autha\": {\n        _COMMON_CONDITION: {\n            \"anyhow\": Label(\"@crate_index__anyhow-1.0.80//:anyhow\"),\n            \"chrono\": Label(\"@crate_index__chrono-0.4.34//:chrono\"),\n            \"fern\": Label(\"@crate_index__fern-0.6.2//:fern\"),\n            \"hex\": Label(\"@crate_index__hex-0.4.3//:hex\"),\n            \"isolang\": Label(\"@crate_index__isolang-2.4.0//:isolang\"),\n            \"jsonwebtoken\": Label(\"@crate_index__jsonwebtoken-9.2.0//:jsonwebtoken\"),\n            \"lazy_static\": Label(\"@crate_index__lazy_static-1.4.0//:lazy_static\"),\n            \"log\": Label(\"@crate_index__log-0.4.21//:log\"),\n            \"prost\": Label(\"@crate_index__prost-0.12.3//:prost\"),\n            \"prost-types\": Label(\"@crate_index__prost-types-0.12.3//:prost_types\"),\n            \"regex-lite\": Label(\"@crate_index__regex-lite-0.1.5//:regex_lite\"),\n            \"reqwest\": Label(\"@crate_index__reqwest-0.11.24//:reqwest\"),\n            \"serde\": Label(\"@crate_index__serde-1.0.197//:serde\"),\n            \"serde_json\": Label(\"@crate_index__serde_json-1.0.114//:serde_json\"),\n            \"serde_yaml\": Label(\"@crate_index__serde_yaml-0.9.32//:serde_yaml\"),\n            \"tokio\": Label(\"@crate_index__tokio-1.36.0//:tokio\"),\n            \"tonic\": Label(\"@crate_index__tonic-0.11.0//:tonic\"),\n            \"totp-lite\": Label(\"@crate_index__totp-lite-2.0.1//:totp_lite\"),\n            \"url\": Label(\"@crate_index__url-2.5.0//:url\"),\n            \"uuid\": Label(\"@crate_index__uuid-1.7.0//:uuid\"),\n            \"warp\": Label(\"@crate_index__warp-0.3.6//:warp\"),\n        },\n    },\n    \"crypto\": {\n        _COMMON_CONDITION: {\n            \"aes\": Label(\"@crate_index__aes-0.8.4//:aes\"),\n            \"fpe\": Label(\"@crate_index__fpe-0.6.1//:fpe\"),\n            \"hex\": Label(\"@crate_index__hex-0.4.3//:hex\"),\n            \"ring\": Label(\"@crate_index__ring-0.17.8//:ring\"),\n            \"rust-argon2\": Label(\"@crate_index__rust-argon2-2.1.0//:argon2\"),\n        },\n    },\n    \"db\": {\n        _COMMON_CONDITION: {\n            \"futures-executor\": Label(\"@crate_index__futures-executor-0.3.30//:futures_executor\"),\n            \"kafka\": Label(\"@crate_index__kafka-0.10.0//:kafka\"),\n            \"lapin\": Label(\"@crate_index__lapin-2.3.1//:lapin\"),\n            \"log\": Label(\"@crate_index__log-0.4.21//:log\"),\n            \"memcache\": Label(\"@crate_index__memcache-0.17.2//:memcache\"),\n            \"r2d2\": Label(\"@crate_index__r2d2-0.8.10//:r2d2\"),\n            \"scylla\": Label(\"@crate_index__scylla-0.12.0//:scylla\"),\n        },\n    },\n    \"image_processor\": {\n        _COMMON_CONDITION: {\n            \"cloudinary\": Label(\"@crate_index__cloudinary-0.4.0//:cloudinary\"),\n            \"fast_image_resize\": Label(\"@crate_index__fast_image_resize-3.0.4//:fast_image_resize\"),\n            \"image\": Label(\"@crate_index__image-0.24.9//:image\"),\n            \"tempfile\": Label(\"@crate_index__tempfile-3.10.1//:tempfile\"),\n        },\n    },\n}\n\n\n_NORMAL_ALIASES = {\n    \"autha\": {\n        _COMMON_CONDITION: {\n        },\n    },\n    \"crypto\": {\n        _COMMON_CONDITION: {\n        },\n    },\n    \"db\": {\n        _COMMON_CONDITION: {\n        },\n    },\n    \"image_processor\": {\n        _COMMON_CONDITION: {\n        },\n    },\n}\n\n\n_NORMAL_DEV_DEPENDENCIES = {\n    \"autha\": {\n    },\n    \"crypto\": {\n        _COMMON_CONDITION: {\n            \"criterion\": Label(\"@crate_index__criterion-0.5.1//:criterion\"),\n            \"regex-lite\": Label(\"@crate_index__regex-lite-0.1.5//:regex_lite\"),\n        },\n    },\n    \"db\": {\n    },\n    \"image_processor\": {\n        _COMMON_CONDITION: {\n            \"criterion\": Label(\"@crate_index__criterion-0.5.1//:criterion\"),\n        },\n    },\n}\n\n\n_NORMAL_DEV_ALIASES = {\n    \"autha\": {\n    },\n    \"crypto\": {\n        _COMMON_CONDITION: {\n        },\n    },\n    \"db\": {\n    },\n    \"image_processor\": {\n        _COMMON_CONDITION: {\n        },\n    },\n}\n\n\n_PROC_MACRO_DEPENDENCIES = {\n    \"autha\": {\n    },\n    \"crypto\": {\n    },\n    \"db\": {\n    },\n    \"image_processor\": {\n    },\n}\n\n\n_PROC_MACRO_ALIASES = {\n    \"autha\": {\n    },\n    \"crypto\": {\n    },\n    \"db\": {\n    },\n    \"image_processor\": {\n    },\n}\n\n\n_PROC_MACRO_DEV_DEPENDENCIES = {\n    \"autha\": {\n    },\n    \"crypto\": {\n    },\n    \"db\": {\n    },\n    \"image_processor\": {\n    },\n}\n\n\n_PROC_MACRO_DEV_ALIASES = {\n    \"autha\": {\n    },\n    \"crypto\": {\n        _COMMON_CONDITION: {\n        },\n    },\n    \"db\": {\n    },\n    \"image_processor\": {\n        _COMMON_CONDITION: {\n        },\n    },\n}\n\n\n_BUILD_DEPENDENCIES = {\n    \"autha\": {\n        _COMMON_CONDITION: {\n            \"tonic-build\": Label(\"@crate_index__tonic-build-0.11.0//:tonic_build\"),\n        },\n    },\n    \"crypto\": {\n    },\n    \"db\": {\n    },\n    \"image_processor\": {\n    },\n}\n\n\n_BUILD_ALIASES = {\n    \"autha\": {\n        _COMMON_CONDITION: {\n        },\n    },\n    \"crypto\": {\n    },\n    \"db\": {\n    },\n    \"image_processor\": {\n    },\n}\n\n\n_BUILD_PROC_MACRO_DEPENDENCIES = {\n    \"autha\": {\n    },\n    \"crypto\": {\n    },\n    \"db\": {\n    },\n    \"image_processor\": {\n    },\n}\n\n\n_BUILD_PROC_MACRO_ALIASES = {\n    \"autha\": {\n    },\n    \"crypto\": {\n    },\n    \"db\": {\n    },\n    \"image_processor\": {\n    },\n}\n\n\n_CONDITIONS = {\n    \"aarch64-apple-darwin\": [\"@rules_rust//rust/platform:aarch64-apple-darwin\"],\n    \"aarch64-apple-ios\": [\"@rules_rust//rust/platform:aarch64-apple-ios\"],\n    \"aarch64-apple-ios-sim\": [\"@rules_rust//rust/platform:aarch64-apple-ios-sim\"],\n    \"aarch64-fuchsia\": [\"@rules_rust//rust/platform:aarch64-fuchsia\"],\n    \"aarch64-linux-android\": [\"@rules_rust//rust/platform:aarch64-linux-android\"],\n    \"aarch64-pc-windows-gnullvm\": [],\n    \"aarch64-pc-windows-msvc\": [\"@rules_rust//rust/platform:aarch64-pc-windows-msvc\"],\n    \"aarch64-unknown-linux-gnu\": [\"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\"],\n    \"aarch64-unknown-nixos-gnu\": [\"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\"],\n    \"aarch64-unknown-nto-qnx710\": [\"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\"],\n    \"arm-unknown-linux-gnueabi\": [\"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\"],\n    \"armv7-linux-androideabi\": [\"@rules_rust//rust/platform:armv7-linux-androideabi\"],\n    \"armv7-unknown-linux-gnueabi\": [\"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\"],\n    \"cfg(all(any(target_arch = \\\"wasm32\\\", target_arch = \\\"wasm64\\\"), target_os = \\\"unknown\\\"))\": [\"@rules_rust//rust/platform:wasm32-unknown-unknown\"],\n    \"cfg(all(any(target_os = \\\"android\\\", target_os = \\\"linux\\\"), any(rustix_use_libc, miri, not(all(target_os = \\\"linux\\\", any(target_arch = \\\"x86\\\", all(target_arch = \\\"x86_64\\\", target_pointer_width = \\\"64\\\"), all(target_endian = \\\"little\\\", any(target_arch = \\\"arm\\\", all(target_arch = \\\"aarch64\\\", target_pointer_width = \\\"64\\\"), target_arch = \\\"powerpc64\\\", target_arch = \\\"riscv64\\\", target_arch = \\\"mips\\\", target_arch = \\\"mips64\\\"))))))))\": [\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:armv7-linux-androideabi\",\"@rules_rust//rust/platform:i686-linux-android\",\"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\",\"@rules_rust//rust/platform:s390x-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-linux-android\"],\n    \"cfg(all(any(target_os = \\\"android\\\", target_os = \\\"linux\\\"), any(rustix_use_libc, miri, not(all(target_os = \\\"linux\\\", target_endian = \\\"little\\\", any(target_arch = \\\"arm\\\", all(target_arch = \\\"aarch64\\\", target_pointer_width = \\\"64\\\"), target_arch = \\\"riscv64\\\", all(rustix_use_experimental_asm, target_arch = \\\"powerpc64\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips32r6\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips64\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips64r6\\\"), target_arch = \\\"x86\\\", all(target_arch = \\\"x86_64\\\", target_pointer_width = \\\"64\\\")))))))\": [\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:armv7-linux-androideabi\",\"@rules_rust//rust/platform:i686-linux-android\",\"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\",\"@rules_rust//rust/platform:s390x-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-linux-android\"],\n    \"cfg(all(any(target_os = \\\"android\\\", target_os = \\\"linux\\\"), any(target_arch = \\\"aarch64\\\", target_arch = \\\"arm\\\")))\": [\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:armv7-linux-androideabi\",\"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\"],\n    \"cfg(all(not(rustix_use_libc), not(miri), target_os = \\\"linux\\\", any(target_arch = \\\"x86\\\", all(target_arch = \\\"x86_64\\\", target_pointer_width = \\\"64\\\"), all(target_endian = \\\"little\\\", any(target_arch = \\\"arm\\\", all(target_arch = \\\"aarch64\\\", target_pointer_width = \\\"64\\\"), target_arch = \\\"powerpc64\\\", target_arch = \\\"riscv64\\\", target_arch = \\\"mips\\\", target_arch = \\\"mips64\\\")))))\": [\"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:i686-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\"],\n    \"cfg(all(not(rustix_use_libc), not(miri), target_os = \\\"linux\\\", target_endian = \\\"little\\\", any(target_arch = \\\"arm\\\", all(target_arch = \\\"aarch64\\\", target_pointer_width = \\\"64\\\"), target_arch = \\\"riscv64\\\", all(rustix_use_experimental_asm, target_arch = \\\"powerpc64\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips32r6\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips64\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips64r6\\\"), target_arch = \\\"x86\\\", all(target_arch = \\\"x86_64\\\", target_pointer_width = \\\"64\\\"))))\": [\"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:i686-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\"],\n    \"cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \\\"linux\\\", any(target_arch = \\\"x86\\\", all(target_arch = \\\"x86_64\\\", target_pointer_width = \\\"64\\\"), all(target_endian = \\\"little\\\", any(target_arch = \\\"arm\\\", all(target_arch = \\\"aarch64\\\", target_pointer_width = \\\"64\\\"), target_arch = \\\"powerpc64\\\", target_arch = \\\"riscv64\\\", target_arch = \\\"mips\\\", target_arch = \\\"mips64\\\"))))))))\": [\"@rules_rust//rust/platform:aarch64-apple-darwin\",\"@rules_rust//rust/platform:aarch64-apple-ios\",\"@rules_rust//rust/platform:aarch64-apple-ios-sim\",\"@rules_rust//rust/platform:aarch64-fuchsia\",\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\",\"@rules_rust//rust/platform:armv7-linux-androideabi\",\"@rules_rust//rust/platform:i686-apple-darwin\",\"@rules_rust//rust/platform:i686-linux-android\",\"@rules_rust//rust/platform:i686-unknown-freebsd\",\"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\",\"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\",\"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\",\"@rules_rust//rust/platform:s390x-unknown-linux-gnu\",\"@rules_rust//rust/platform:thumbv7em-none-eabi\",\"@rules_rust//rust/platform:thumbv8m.main-none-eabi\",\"@rules_rust//rust/platform:wasm32-unknown-unknown\",\"@rules_rust//rust/platform:wasm32-wasi\",\"@rules_rust//rust/platform:x86_64-apple-darwin\",\"@rules_rust//rust/platform:x86_64-apple-ios\",\"@rules_rust//rust/platform:x86_64-fuchsia\",\"@rules_rust//rust/platform:x86_64-linux-android\",\"@rules_rust//rust/platform:x86_64-unknown-freebsd\",\"@rules_rust//rust/platform:x86_64-unknown-none\"],\n    \"cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \\\"linux\\\", target_endian = \\\"little\\\", any(target_arch = \\\"arm\\\", all(target_arch = \\\"aarch64\\\", target_pointer_width = \\\"64\\\"), target_arch = \\\"riscv64\\\", all(rustix_use_experimental_asm, target_arch = \\\"powerpc64\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips32r6\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips64\\\"), all(rustix_use_experimental_asm, target_arch = \\\"mips64r6\\\"), target_arch = \\\"x86\\\", all(target_arch = \\\"x86_64\\\", target_pointer_width = \\\"64\\\")))))))\": [\"@rules_rust//rust/platform:aarch64-apple-darwin\",\"@rules_rust//rust/platform:aarch64-apple-ios\",\"@rules_rust//rust/platform:aarch64-apple-ios-sim\",\"@rules_rust//rust/platform:aarch64-fuchsia\",\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\",\"@rules_rust//rust/platform:armv7-linux-androideabi\",\"@rules_rust//rust/platform:i686-apple-darwin\",\"@rules_rust//rust/platform:i686-linux-android\",\"@rules_rust//rust/platform:i686-unknown-freebsd\",\"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\",\"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\",\"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\",\"@rules_rust//rust/platform:s390x-unknown-linux-gnu\",\"@rules_rust//rust/platform:thumbv7em-none-eabi\",\"@rules_rust//rust/platform:thumbv8m.main-none-eabi\",\"@rules_rust//rust/platform:wasm32-unknown-unknown\",\"@rules_rust//rust/platform:wasm32-wasi\",\"@rules_rust//rust/platform:x86_64-apple-darwin\",\"@rules_rust//rust/platform:x86_64-apple-ios\",\"@rules_rust//rust/platform:x86_64-fuchsia\",\"@rules_rust//rust/platform:x86_64-linux-android\",\"@rules_rust//rust/platform:x86_64-unknown-freebsd\",\"@rules_rust//rust/platform:x86_64-unknown-none\"],\n    \"cfg(all(target_arch = \\\"aarch64\\\", target_env = \\\"msvc\\\", not(windows_raw_dylib)))\": [\"@rules_rust//rust/platform:aarch64-pc-windows-msvc\"],\n    \"cfg(all(target_arch = \\\"aarch64\\\", target_os = \\\"linux\\\"))\": [\"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\"],\n    \"cfg(all(target_arch = \\\"aarch64\\\", target_os = \\\"windows\\\"))\": [\"@rules_rust//rust/platform:aarch64-pc-windows-msvc\"],\n    \"cfg(all(target_arch = \\\"aarch64\\\", target_vendor = \\\"apple\\\"))\": [\"@rules_rust//rust/platform:aarch64-apple-darwin\",\"@rules_rust//rust/platform:aarch64-apple-ios\",\"@rules_rust//rust/platform:aarch64-apple-ios-sim\"],\n    \"cfg(all(target_arch = \\\"loongarch64\\\", target_os = \\\"linux\\\"))\": [],\n    \"cfg(all(target_arch = \\\"wasm32\\\", not(any(target_os = \\\"emscripten\\\", target_os = \\\"wasi\\\"))))\": [\"@rules_rust//rust/platform:wasm32-unknown-unknown\"],\n    \"cfg(all(target_arch = \\\"wasm32\\\", not(target_os = \\\"wasi\\\")))\": [\"@rules_rust//rust/platform:wasm32-unknown-unknown\"],\n    \"cfg(all(target_arch = \\\"x86\\\", target_env = \\\"gnu\\\", not(windows_raw_dylib)))\": [\"@rules_rust//rust/platform:i686-unknown-linux-gnu\"],\n    \"cfg(all(target_arch = \\\"x86\\\", target_env = \\\"msvc\\\", not(windows_raw_dylib)))\": [\"@rules_rust//rust/platform:i686-pc-windows-msvc\"],\n    \"cfg(all(target_arch = \\\"x86_64\\\", target_env = \\\"gnu\\\", not(target_abi = \\\"llvm\\\"), not(windows_raw_dylib)))\": [\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\"],\n    \"cfg(all(target_arch = \\\"x86_64\\\", target_env = \\\"msvc\\\", not(windows_raw_dylib)))\": [\"@rules_rust//rust/platform:x86_64-pc-windows-msvc\"],\n    \"cfg(all(unix, not(target_os = \\\"macos\\\")))\": [\"@rules_rust//rust/platform:aarch64-apple-ios\",\"@rules_rust//rust/platform:aarch64-apple-ios-sim\",\"@rules_rust//rust/platform:aarch64-fuchsia\",\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\",\"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:armv7-linux-androideabi\",\"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:i686-linux-android\",\"@rules_rust//rust/platform:i686-unknown-freebsd\",\"@rules_rust//rust/platform:i686-unknown-linux-gnu\",\"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\",\"@rules_rust//rust/platform:s390x-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-apple-ios\",\"@rules_rust//rust/platform:x86_64-fuchsia\",\"@rules_rust//rust/platform:x86_64-linux-android\",\"@rules_rust//rust/platform:x86_64-unknown-freebsd\",\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\"],\n    \"cfg(any(target_arch = \\\"aarch64\\\", target_arch = \\\"arm\\\", target_arch = \\\"x86\\\", target_arch = \\\"x86_64\\\"))\": [\"@rules_rust//rust/platform:aarch64-apple-darwin\",\"@rules_rust//rust/platform:aarch64-apple-ios\",\"@rules_rust//rust/platform:aarch64-apple-ios-sim\",\"@rules_rust//rust/platform:aarch64-fuchsia\",\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:aarch64-pc-windows-msvc\",\"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\",\"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:armv7-linux-androideabi\",\"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:i686-apple-darwin\",\"@rules_rust//rust/platform:i686-linux-android\",\"@rules_rust//rust/platform:i686-pc-windows-msvc\",\"@rules_rust//rust/platform:i686-unknown-freebsd\",\"@rules_rust//rust/platform:i686-unknown-linux-gnu\",\"@rules_rust//rust/platform:thumbv7em-none-eabi\",\"@rules_rust//rust/platform:thumbv8m.main-none-eabi\",\"@rules_rust//rust/platform:x86_64-apple-darwin\",\"@rules_rust//rust/platform:x86_64-apple-ios\",\"@rules_rust//rust/platform:x86_64-fuchsia\",\"@rules_rust//rust/platform:x86_64-linux-android\",\"@rules_rust//rust/platform:x86_64-pc-windows-msvc\",\"@rules_rust//rust/platform:x86_64-unknown-freebsd\",\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-none\"],\n    \"cfg(any(target_arch = \\\"aarch64\\\", target_arch = \\\"x86\\\", target_arch = \\\"x86_64\\\"))\": [\"@rules_rust//rust/platform:aarch64-apple-darwin\",\"@rules_rust//rust/platform:aarch64-apple-ios\",\"@rules_rust//rust/platform:aarch64-apple-ios-sim\",\"@rules_rust//rust/platform:aarch64-fuchsia\",\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:aarch64-pc-windows-msvc\",\"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\",\"@rules_rust//rust/platform:i686-apple-darwin\",\"@rules_rust//rust/platform:i686-linux-android\",\"@rules_rust//rust/platform:i686-pc-windows-msvc\",\"@rules_rust//rust/platform:i686-unknown-freebsd\",\"@rules_rust//rust/platform:i686-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-apple-darwin\",\"@rules_rust//rust/platform:x86_64-apple-ios\",\"@rules_rust//rust/platform:x86_64-fuchsia\",\"@rules_rust//rust/platform:x86_64-linux-android\",\"@rules_rust//rust/platform:x86_64-pc-windows-msvc\",\"@rules_rust//rust/platform:x86_64-unknown-freebsd\",\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-none\"],\n    \"cfg(any(target_arch = \\\"aarch64\\\", target_arch = \\\"x86_64\\\", target_arch = \\\"x86\\\"))\": [\"@rules_rust//rust/platform:aarch64-apple-darwin\",\"@rules_rust//rust/platform:aarch64-apple-ios\",\"@rules_rust//rust/platform:aarch64-apple-ios-sim\",\"@rules_rust//rust/platform:aarch64-fuchsia\",\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:aarch64-pc-windows-msvc\",\"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\",\"@rules_rust//rust/platform:i686-apple-darwin\",\"@rules_rust//rust/platform:i686-linux-android\",\"@rules_rust//rust/platform:i686-pc-windows-msvc\",\"@rules_rust//rust/platform:i686-unknown-freebsd\",\"@rules_rust//rust/platform:i686-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-apple-darwin\",\"@rules_rust//rust/platform:x86_64-apple-ios\",\"@rules_rust//rust/platform:x86_64-fuchsia\",\"@rules_rust//rust/platform:x86_64-linux-android\",\"@rules_rust//rust/platform:x86_64-pc-windows-msvc\",\"@rules_rust//rust/platform:x86_64-unknown-freebsd\",\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-none\"],\n    \"cfg(any(target_os = \\\"macos\\\", target_os = \\\"ios\\\"))\": [\"@rules_rust//rust/platform:aarch64-apple-darwin\",\"@rules_rust//rust/platform:aarch64-apple-ios\",\"@rules_rust//rust/platform:aarch64-apple-ios-sim\",\"@rules_rust//rust/platform:i686-apple-darwin\",\"@rules_rust//rust/platform:x86_64-apple-darwin\",\"@rules_rust//rust/platform:x86_64-apple-ios\"],\n    \"cfg(any(unix, target_os = \\\"fuchsia\\\", target_os = \\\"vxworks\\\"))\": [\"@rules_rust//rust/platform:aarch64-apple-darwin\",\"@rules_rust//rust/platform:aarch64-apple-ios\",\"@rules_rust//rust/platform:aarch64-apple-ios-sim\",\"@rules_rust//rust/platform:aarch64-fuchsia\",\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\",\"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:armv7-linux-androideabi\",\"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:i686-apple-darwin\",\"@rules_rust//rust/platform:i686-linux-android\",\"@rules_rust//rust/platform:i686-unknown-freebsd\",\"@rules_rust//rust/platform:i686-unknown-linux-gnu\",\"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\",\"@rules_rust//rust/platform:s390x-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-apple-darwin\",\"@rules_rust//rust/platform:x86_64-apple-ios\",\"@rules_rust//rust/platform:x86_64-fuchsia\",\"@rules_rust//rust/platform:x86_64-linux-android\",\"@rules_rust//rust/platform:x86_64-unknown-freebsd\",\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\"],\n    \"cfg(any(unix, target_os = \\\"wasi\\\"))\": [\"@rules_rust//rust/platform:aarch64-apple-darwin\",\"@rules_rust//rust/platform:aarch64-apple-ios\",\"@rules_rust//rust/platform:aarch64-apple-ios-sim\",\"@rules_rust//rust/platform:aarch64-fuchsia\",\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\",\"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:armv7-linux-androideabi\",\"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:i686-apple-darwin\",\"@rules_rust//rust/platform:i686-linux-android\",\"@rules_rust//rust/platform:i686-unknown-freebsd\",\"@rules_rust//rust/platform:i686-unknown-linux-gnu\",\"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\",\"@rules_rust//rust/platform:s390x-unknown-linux-gnu\",\"@rules_rust//rust/platform:wasm32-wasi\",\"@rules_rust//rust/platform:x86_64-apple-darwin\",\"@rules_rust//rust/platform:x86_64-apple-ios\",\"@rules_rust//rust/platform:x86_64-fuchsia\",\"@rules_rust//rust/platform:x86_64-linux-android\",\"@rules_rust//rust/platform:x86_64-unknown-freebsd\",\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\"],\n    \"cfg(any(windows, unix, target_os = \\\"redox\\\"))\": [\"@rules_rust//rust/platform:aarch64-apple-darwin\",\"@rules_rust//rust/platform:aarch64-apple-ios\",\"@rules_rust//rust/platform:aarch64-apple-ios-sim\",\"@rules_rust//rust/platform:aarch64-fuchsia\",\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:aarch64-pc-windows-msvc\",\"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\",\"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:armv7-linux-androideabi\",\"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:i686-apple-darwin\",\"@rules_rust//rust/platform:i686-linux-android\",\"@rules_rust//rust/platform:i686-pc-windows-msvc\",\"@rules_rust//rust/platform:i686-unknown-freebsd\",\"@rules_rust//rust/platform:i686-unknown-linux-gnu\",\"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\",\"@rules_rust//rust/platform:s390x-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-apple-darwin\",\"@rules_rust//rust/platform:x86_64-apple-ios\",\"@rules_rust//rust/platform:x86_64-fuchsia\",\"@rules_rust//rust/platform:x86_64-linux-android\",\"@rules_rust//rust/platform:x86_64-pc-windows-msvc\",\"@rules_rust//rust/platform:x86_64-unknown-freebsd\",\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\"],\n    \"cfg(not(all(windows, target_env = \\\"msvc\\\", not(target_vendor = \\\"uwp\\\"))))\": [\"@rules_rust//rust/platform:aarch64-apple-darwin\",\"@rules_rust//rust/platform:aarch64-apple-ios\",\"@rules_rust//rust/platform:aarch64-apple-ios-sim\",\"@rules_rust//rust/platform:aarch64-fuchsia\",\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\",\"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:armv7-linux-androideabi\",\"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:i686-apple-darwin\",\"@rules_rust//rust/platform:i686-linux-android\",\"@rules_rust//rust/platform:i686-unknown-freebsd\",\"@rules_rust//rust/platform:i686-unknown-linux-gnu\",\"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\",\"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\",\"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\",\"@rules_rust//rust/platform:s390x-unknown-linux-gnu\",\"@rules_rust//rust/platform:thumbv7em-none-eabi\",\"@rules_rust//rust/platform:thumbv8m.main-none-eabi\",\"@rules_rust//rust/platform:wasm32-unknown-unknown\",\"@rules_rust//rust/platform:wasm32-wasi\",\"@rules_rust//rust/platform:x86_64-apple-darwin\",\"@rules_rust//rust/platform:x86_64-apple-ios\",\"@rules_rust//rust/platform:x86_64-fuchsia\",\"@rules_rust//rust/platform:x86_64-linux-android\",\"@rules_rust//rust/platform:x86_64-unknown-freebsd\",\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-none\"],\n    \"cfg(not(any(target_os = \\\"windows\\\", target_os = \\\"macos\\\", target_os = \\\"ios\\\")))\": [\"@rules_rust//rust/platform:aarch64-fuchsia\",\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\",\"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:armv7-linux-androideabi\",\"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:i686-linux-android\",\"@rules_rust//rust/platform:i686-unknown-freebsd\",\"@rules_rust//rust/platform:i686-unknown-linux-gnu\",\"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\",\"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\",\"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\",\"@rules_rust//rust/platform:s390x-unknown-linux-gnu\",\"@rules_rust//rust/platform:thumbv7em-none-eabi\",\"@rules_rust//rust/platform:thumbv8m.main-none-eabi\",\"@rules_rust//rust/platform:wasm32-unknown-unknown\",\"@rules_rust//rust/platform:wasm32-wasi\",\"@rules_rust//rust/platform:x86_64-fuchsia\",\"@rules_rust//rust/platform:x86_64-linux-android\",\"@rules_rust//rust/platform:x86_64-unknown-freebsd\",\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-none\"],\n    \"cfg(not(target_arch = \\\"wasm32\\\"))\": [\"@rules_rust//rust/platform:aarch64-apple-darwin\",\"@rules_rust//rust/platform:aarch64-apple-ios\",\"@rules_rust//rust/platform:aarch64-apple-ios-sim\",\"@rules_rust//rust/platform:aarch64-fuchsia\",\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:aarch64-pc-windows-msvc\",\"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\",\"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:armv7-linux-androideabi\",\"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:i686-apple-darwin\",\"@rules_rust//rust/platform:i686-linux-android\",\"@rules_rust//rust/platform:i686-pc-windows-msvc\",\"@rules_rust//rust/platform:i686-unknown-freebsd\",\"@rules_rust//rust/platform:i686-unknown-linux-gnu\",\"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\",\"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\",\"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\",\"@rules_rust//rust/platform:s390x-unknown-linux-gnu\",\"@rules_rust//rust/platform:thumbv7em-none-eabi\",\"@rules_rust//rust/platform:thumbv8m.main-none-eabi\",\"@rules_rust//rust/platform:x86_64-apple-darwin\",\"@rules_rust//rust/platform:x86_64-apple-ios\",\"@rules_rust//rust/platform:x86_64-fuchsia\",\"@rules_rust//rust/platform:x86_64-linux-android\",\"@rules_rust//rust/platform:x86_64-pc-windows-msvc\",\"@rules_rust//rust/platform:x86_64-unknown-freebsd\",\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-none\"],\n    \"cfg(not(target_family = \\\"wasm\\\"))\": [\"@rules_rust//rust/platform:aarch64-apple-darwin\",\"@rules_rust//rust/platform:aarch64-apple-ios\",\"@rules_rust//rust/platform:aarch64-apple-ios-sim\",\"@rules_rust//rust/platform:aarch64-fuchsia\",\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:aarch64-pc-windows-msvc\",\"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\",\"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:armv7-linux-androideabi\",\"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:i686-apple-darwin\",\"@rules_rust//rust/platform:i686-linux-android\",\"@rules_rust//rust/platform:i686-pc-windows-msvc\",\"@rules_rust//rust/platform:i686-unknown-freebsd\",\"@rules_rust//rust/platform:i686-unknown-linux-gnu\",\"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\",\"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\",\"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\",\"@rules_rust//rust/platform:s390x-unknown-linux-gnu\",\"@rules_rust//rust/platform:thumbv7em-none-eabi\",\"@rules_rust//rust/platform:thumbv8m.main-none-eabi\",\"@rules_rust//rust/platform:x86_64-apple-darwin\",\"@rules_rust//rust/platform:x86_64-apple-ios\",\"@rules_rust//rust/platform:x86_64-fuchsia\",\"@rules_rust//rust/platform:x86_64-linux-android\",\"@rules_rust//rust/platform:x86_64-pc-windows-msvc\",\"@rules_rust//rust/platform:x86_64-unknown-freebsd\",\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-none\"],\n    \"cfg(not(windows))\": [\"@rules_rust//rust/platform:aarch64-apple-darwin\",\"@rules_rust//rust/platform:aarch64-apple-ios\",\"@rules_rust//rust/platform:aarch64-apple-ios-sim\",\"@rules_rust//rust/platform:aarch64-fuchsia\",\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\",\"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:armv7-linux-androideabi\",\"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:i686-apple-darwin\",\"@rules_rust//rust/platform:i686-linux-android\",\"@rules_rust//rust/platform:i686-unknown-freebsd\",\"@rules_rust//rust/platform:i686-unknown-linux-gnu\",\"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\",\"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\",\"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\",\"@rules_rust//rust/platform:s390x-unknown-linux-gnu\",\"@rules_rust//rust/platform:thumbv7em-none-eabi\",\"@rules_rust//rust/platform:thumbv8m.main-none-eabi\",\"@rules_rust//rust/platform:wasm32-unknown-unknown\",\"@rules_rust//rust/platform:wasm32-wasi\",\"@rules_rust//rust/platform:x86_64-apple-darwin\",\"@rules_rust//rust/platform:x86_64-apple-ios\",\"@rules_rust//rust/platform:x86_64-fuchsia\",\"@rules_rust//rust/platform:x86_64-linux-android\",\"@rules_rust//rust/platform:x86_64-unknown-freebsd\",\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-none\"],\n    \"cfg(target_arch = \\\"spirv\\\")\": [],\n    \"cfg(target_arch = \\\"wasm32\\\")\": [\"@rules_rust//rust/platform:wasm32-unknown-unknown\",\"@rules_rust//rust/platform:wasm32-wasi\"],\n    \"cfg(target_feature = \\\"atomics\\\")\": [],\n    \"cfg(target_os = \\\"android\\\")\": [\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:armv7-linux-androideabi\",\"@rules_rust//rust/platform:i686-linux-android\",\"@rules_rust//rust/platform:x86_64-linux-android\"],\n    \"cfg(target_os = \\\"haiku\\\")\": [],\n    \"cfg(target_os = \\\"hermit\\\")\": [],\n    \"cfg(target_os = \\\"macos\\\")\": [\"@rules_rust//rust/platform:aarch64-apple-darwin\",\"@rules_rust//rust/platform:i686-apple-darwin\",\"@rules_rust//rust/platform:x86_64-apple-darwin\"],\n    \"cfg(target_os = \\\"redox\\\")\": [],\n    \"cfg(target_os = \\\"wasi\\\")\": [\"@rules_rust//rust/platform:wasm32-wasi\"],\n    \"cfg(target_os = \\\"windows\\\")\": [\"@rules_rust//rust/platform:aarch64-pc-windows-msvc\",\"@rules_rust//rust/platform:i686-pc-windows-msvc\",\"@rules_rust//rust/platform:x86_64-pc-windows-msvc\"],\n    \"cfg(tokio_taskdump)\": [],\n    \"cfg(unix)\": [\"@rules_rust//rust/platform:aarch64-apple-darwin\",\"@rules_rust//rust/platform:aarch64-apple-ios\",\"@rules_rust//rust/platform:aarch64-apple-ios-sim\",\"@rules_rust//rust/platform:aarch64-fuchsia\",\"@rules_rust//rust/platform:aarch64-linux-android\",\"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\",\"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\",\"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:armv7-linux-androideabi\",\"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\",\"@rules_rust//rust/platform:i686-apple-darwin\",\"@rules_rust//rust/platform:i686-linux-android\",\"@rules_rust//rust/platform:i686-unknown-freebsd\",\"@rules_rust//rust/platform:i686-unknown-linux-gnu\",\"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\",\"@rules_rust//rust/platform:s390x-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-apple-darwin\",\"@rules_rust//rust/platform:x86_64-apple-ios\",\"@rules_rust//rust/platform:x86_64-fuchsia\",\"@rules_rust//rust/platform:x86_64-linux-android\",\"@rules_rust//rust/platform:x86_64-unknown-freebsd\",\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\",\"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\"],\n    \"cfg(windows)\": [\"@rules_rust//rust/platform:aarch64-pc-windows-msvc\",\"@rules_rust//rust/platform:i686-pc-windows-msvc\",\"@rules_rust//rust/platform:x86_64-pc-windows-msvc\"],\n    \"i686-apple-darwin\": [\"@rules_rust//rust/platform:i686-apple-darwin\"],\n    \"i686-linux-android\": [\"@rules_rust//rust/platform:i686-linux-android\"],\n    \"i686-pc-windows-gnu\": [],\n    \"i686-pc-windows-msvc\": [\"@rules_rust//rust/platform:i686-pc-windows-msvc\"],\n    \"i686-unknown-freebsd\": [\"@rules_rust//rust/platform:i686-unknown-freebsd\"],\n    \"i686-unknown-linux-gnu\": [\"@rules_rust//rust/platform:i686-unknown-linux-gnu\"],\n    \"powerpc-unknown-linux-gnu\": [\"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\"],\n    \"riscv32imc-unknown-none-elf\": [\"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\"],\n    \"riscv64gc-unknown-none-elf\": [\"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\"],\n    \"s390x-unknown-linux-gnu\": [\"@rules_rust//rust/platform:s390x-unknown-linux-gnu\"],\n    \"thumbv7em-none-eabi\": [\"@rules_rust//rust/platform:thumbv7em-none-eabi\"],\n    \"thumbv8m.main-none-eabi\": [\"@rules_rust//rust/platform:thumbv8m.main-none-eabi\"],\n    \"wasm32-unknown-unknown\": [\"@rules_rust//rust/platform:wasm32-unknown-unknown\"],\n    \"wasm32-wasi\": [\"@rules_rust//rust/platform:wasm32-wasi\"],\n    \"x86_64-apple-darwin\": [\"@rules_rust//rust/platform:x86_64-apple-darwin\"],\n    \"x86_64-apple-ios\": [\"@rules_rust//rust/platform:x86_64-apple-ios\"],\n    \"x86_64-fuchsia\": [\"@rules_rust//rust/platform:x86_64-fuchsia\"],\n    \"x86_64-linux-android\": [\"@rules_rust//rust/platform:x86_64-linux-android\"],\n    \"x86_64-pc-windows-gnu\": [],\n    \"x86_64-pc-windows-gnullvm\": [],\n    \"x86_64-pc-windows-msvc\": [\"@rules_rust//rust/platform:x86_64-pc-windows-msvc\"],\n    \"x86_64-unknown-freebsd\": [\"@rules_rust//rust/platform:x86_64-unknown-freebsd\"],\n    \"x86_64-unknown-linux-gnu\": [\"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\"],\n    \"x86_64-unknown-nixos-gnu\": [\"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\"],\n    \"x86_64-unknown-none\": [\"@rules_rust//rust/platform:x86_64-unknown-none\"],\n}\n\n###############################################################################\n\ndef crate_repositories():\n    \"\"\"A macro for defining repositories for all generated crates.\n\n    Returns:\n      A list of repos visible to the module through the module extension.\n    \"\"\"\n    maybe(\n        http_archive,\n        name = \"crate_index__addr2line-0.21.0\",\n        sha256 = \"8a30b2e23b9e17a9f90641c7ab1549cd9b44f296d3ccbf309d2863cfe398a0cb\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/addr2line/0.21.0/download\"],\n        strip_prefix = \"addr2line-0.21.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.addr2line-0.21.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__adler-1.0.2\",\n        sha256 = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/adler/1.0.2/download\"],\n        strip_prefix = \"adler-1.0.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.adler-1.0.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__aes-0.8.4\",\n        sha256 = \"b169f7a6d4742236a0a00c541b845991d0ac43e546831af1249753ab4c3aa3a0\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/aes/0.8.4/download\"],\n        strip_prefix = \"aes-0.8.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.aes-0.8.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__aho-corasick-1.1.2\",\n        sha256 = \"b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/aho-corasick/1.1.2/download\"],\n        strip_prefix = \"aho-corasick-1.1.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.aho-corasick-1.1.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__amq-protocol-7.1.2\",\n        sha256 = \"1d40d8b2465c7959dd40cee32ba6ac334b5de57e9fca0cc756759894a4152a5d\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/amq-protocol/7.1.2/download\"],\n        strip_prefix = \"amq-protocol-7.1.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.amq-protocol-7.1.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__amq-protocol-tcp-7.1.2\",\n        sha256 = \"9cb2100adae7da61953a2c3a01935d86caae13329fadce3333f524d6d6ce12e2\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/amq-protocol-tcp/7.1.2/download\"],\n        strip_prefix = \"amq-protocol-tcp-7.1.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.amq-protocol-tcp-7.1.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__amq-protocol-types-7.1.2\",\n        sha256 = \"156ff13c8a3ced600b4e54ed826a2ae6242b6069d00dd98466827cef07d3daff\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/amq-protocol-types/7.1.2/download\"],\n        strip_prefix = \"amq-protocol-types-7.1.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.amq-protocol-types-7.1.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__amq-protocol-uri-7.1.2\",\n        sha256 = \"751bbd7d440576066233e740576f1b31fdc6ab86cfabfbd48c548de77eca73e4\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/amq-protocol-uri/7.1.2/download\"],\n        strip_prefix = \"amq-protocol-uri-7.1.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.amq-protocol-uri-7.1.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__android-tzdata-0.1.1\",\n        sha256 = \"e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/android-tzdata/0.1.1/download\"],\n        strip_prefix = \"android-tzdata-0.1.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.android-tzdata-0.1.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__android_system_properties-0.1.5\",\n        sha256 = \"819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/android_system_properties/0.1.5/download\"],\n        strip_prefix = \"android_system_properties-0.1.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.android_system_properties-0.1.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__anes-0.1.6\",\n        sha256 = \"4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/anes/0.1.6/download\"],\n        strip_prefix = \"anes-0.1.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.anes-0.1.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__anstyle-1.0.6\",\n        sha256 = \"8901269c6307e8d93993578286ac0edf7f195079ffff5ebdeea6a59ffb7e36bc\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/anstyle/1.0.6/download\"],\n        strip_prefix = \"anstyle-1.0.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.anstyle-1.0.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__anyhow-1.0.80\",\n        sha256 = \"5ad32ce52e4161730f7098c077cd2ed6229b5804ccf99e5366be1ab72a98b4e1\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/anyhow/1.0.80/download\"],\n        strip_prefix = \"anyhow-1.0.80\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.anyhow-1.0.80.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__arc-swap-1.6.0\",\n        sha256 = \"bddcadddf5e9015d310179a59bb28c4d4b9920ad0f11e8e14dbadf654890c9a6\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/arc-swap/1.6.0/download\"],\n        strip_prefix = \"arc-swap-1.6.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.arc-swap-1.6.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__arrayref-0.3.7\",\n        sha256 = \"6b4930d2cb77ce62f89ee5d5289b4ac049559b1c45539271f5ed4fdc7db34545\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/arrayref/0.3.7/download\"],\n        strip_prefix = \"arrayref-0.3.7\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.arrayref-0.3.7.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__arrayvec-0.7.4\",\n        sha256 = \"96d30a06541fbafbc7f82ed10c06164cfbd2c401138f6addd8404629c4b16711\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/arrayvec/0.7.4/download\"],\n        strip_prefix = \"arrayvec-0.7.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.arrayvec-0.7.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__async-channel-2.2.0\",\n        sha256 = \"f28243a43d821d11341ab73c80bed182dc015c514b951616cf79bd4af39af0c3\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/async-channel/2.2.0/download\"],\n        strip_prefix = \"async-channel-2.2.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.async-channel-2.2.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__async-executor-1.8.0\",\n        sha256 = \"17ae5ebefcc48e7452b4987947920dac9450be1110cadf34d1b8c116bdbaf97c\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/async-executor/1.8.0/download\"],\n        strip_prefix = \"async-executor-1.8.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.async-executor-1.8.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__async-global-executor-2.4.1\",\n        sha256 = \"05b1b633a2115cd122d73b955eadd9916c18c8f510ec9cd1686404c60ad1c29c\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/async-global-executor/2.4.1/download\"],\n        strip_prefix = \"async-global-executor-2.4.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.async-global-executor-2.4.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__async-global-executor-trait-2.1.0\",\n        sha256 = \"33dd14c5a15affd2abcff50d84efd4009ada28a860f01c14f9d654f3e81b3f75\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/async-global-executor-trait/2.1.0/download\"],\n        strip_prefix = \"async-global-executor-trait-2.1.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.async-global-executor-trait-2.1.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__async-io-1.13.0\",\n        sha256 = \"0fc5b45d93ef0529756f812ca52e44c221b35341892d3dcc34132ac02f3dd2af\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/async-io/1.13.0/download\"],\n        strip_prefix = \"async-io-1.13.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.async-io-1.13.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__async-io-2.3.1\",\n        sha256 = \"8f97ab0c5b00a7cdbe5a371b9a782ee7be1316095885c8a4ea1daf490eb0ef65\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/async-io/2.3.1/download\"],\n        strip_prefix = \"async-io-2.3.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.async-io-2.3.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__async-lock-2.8.0\",\n        sha256 = \"287272293e9d8c41773cec55e365490fe034813a2f172f502d6ddcf75b2f582b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/async-lock/2.8.0/download\"],\n        strip_prefix = \"async-lock-2.8.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.async-lock-2.8.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__async-lock-3.3.0\",\n        sha256 = \"d034b430882f8381900d3fe6f0aaa3ad94f2cb4ac519b429692a1bc2dda4ae7b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/async-lock/3.3.0/download\"],\n        strip_prefix = \"async-lock-3.3.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.async-lock-3.3.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__async-reactor-trait-1.1.0\",\n        sha256 = \"7a6012d170ad00de56c9ee354aef2e358359deb1ec504254e0e5a3774771de0e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/async-reactor-trait/1.1.0/download\"],\n        strip_prefix = \"async-reactor-trait-1.1.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.async-reactor-trait-1.1.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__async-stream-0.3.5\",\n        sha256 = \"cd56dd203fef61ac097dd65721a419ddccb106b2d2b70ba60a6b529f03961a51\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/async-stream/0.3.5/download\"],\n        strip_prefix = \"async-stream-0.3.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.async-stream-0.3.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__async-stream-impl-0.3.5\",\n        sha256 = \"16e62a023e7c117e27523144c5d2459f4397fcc3cab0085af8e2224f643a0193\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/async-stream-impl/0.3.5/download\"],\n        strip_prefix = \"async-stream-impl-0.3.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.async-stream-impl-0.3.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__async-task-4.7.0\",\n        sha256 = \"fbb36e985947064623dbd357f727af08ffd077f93d696782f3c56365fa2e2799\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/async-task/4.7.0/download\"],\n        strip_prefix = \"async-task-4.7.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.async-task-4.7.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__async-trait-0.1.77\",\n        sha256 = \"c980ee35e870bd1a4d2c8294d4c04d0499e67bca1e4b5cefcc693c2fa00caea9\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/async-trait/0.1.77/download\"],\n        strip_prefix = \"async-trait-0.1.77\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.async-trait-0.1.77.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__atomic-waker-1.1.2\",\n        sha256 = \"1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/atomic-waker/1.1.2/download\"],\n        strip_prefix = \"atomic-waker-1.1.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.atomic-waker-1.1.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__autocfg-1.1.0\",\n        sha256 = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/autocfg/1.1.0/download\"],\n        strip_prefix = \"autocfg-1.1.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.autocfg-1.1.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__axum-0.6.20\",\n        sha256 = \"3b829e4e32b91e643de6eafe82b1d90675f5874230191a4ffbc1b336dec4d6bf\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/axum/0.6.20/download\"],\n        strip_prefix = \"axum-0.6.20\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.axum-0.6.20.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__axum-core-0.3.4\",\n        sha256 = \"759fa577a247914fd3f7f76d62972792636412fbfd634cd452f6a385a74d2d2c\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/axum-core/0.3.4/download\"],\n        strip_prefix = \"axum-core-0.3.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.axum-core-0.3.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__backtrace-0.3.69\",\n        sha256 = \"2089b7e3f35b9dd2d0ed921ead4f6d318c27680d4a5bd167b3ee120edb105837\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/backtrace/0.3.69/download\"],\n        strip_prefix = \"backtrace-0.3.69\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.backtrace-0.3.69.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__base64-0.21.7\",\n        sha256 = \"9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/base64/0.21.7/download\"],\n        strip_prefix = \"base64-0.21.7\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.base64-0.21.7.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__bitflags-1.3.2\",\n        sha256 = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/bitflags/1.3.2/download\"],\n        strip_prefix = \"bitflags-1.3.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.bitflags-1.3.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__bitflags-2.4.2\",\n        sha256 = \"ed570934406eb16438a4e976b1b4500774099c13b8cb96eec99f620f05090ddf\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/bitflags/2.4.2/download\"],\n        strip_prefix = \"bitflags-2.4.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.bitflags-2.4.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__blake2b_simd-1.0.2\",\n        sha256 = \"23285ad32269793932e830392f2fe2f83e26488fd3ec778883a93c8323735780\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/blake2b_simd/1.0.2/download\"],\n        strip_prefix = \"blake2b_simd-1.0.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.blake2b_simd-1.0.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__block-buffer-0.10.4\",\n        sha256 = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/block-buffer/0.10.4/download\"],\n        strip_prefix = \"block-buffer-0.10.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.block-buffer-0.10.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__block-padding-0.3.3\",\n        sha256 = \"a8894febbff9f758034a5b8e12d87918f56dfc64a8e1fe757d65e29041538d93\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/block-padding/0.3.3/download\"],\n        strip_prefix = \"block-padding-0.3.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.block-padding-0.3.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__blocking-1.5.1\",\n        sha256 = \"6a37913e8dc4ddcc604f0c6d3bf2887c995153af3611de9e23c352b44c1b9118\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/blocking/1.5.1/download\"],\n        strip_prefix = \"blocking-1.5.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.blocking-1.5.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__bumpalo-3.15.3\",\n        sha256 = \"8ea184aa71bb362a1157c896979544cc23974e08fd265f29ea96b59f0b4a555b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/bumpalo/3.15.3/download\"],\n        strip_prefix = \"bumpalo-3.15.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.bumpalo-3.15.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__bytemuck-1.14.3\",\n        sha256 = \"a2ef034f05691a48569bd920a96c81b9d91bbad1ab5ac7c4616c1f6ef36cb79f\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/bytemuck/1.14.3/download\"],\n        strip_prefix = \"bytemuck-1.14.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.bytemuck-1.14.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__byteorder-1.5.0\",\n        sha256 = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/byteorder/1.5.0/download\"],\n        strip_prefix = \"byteorder-1.5.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.byteorder-1.5.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__bytes-1.5.0\",\n        sha256 = \"a2bd12c1caf447e69cd4528f47f94d203fd2582878ecb9e9465484c4148a8223\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/bytes/1.5.0/download\"],\n        strip_prefix = \"bytes-1.5.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.bytes-1.5.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__cast-0.3.0\",\n        sha256 = \"37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/cast/0.3.0/download\"],\n        strip_prefix = \"cast-0.3.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.cast-0.3.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__cbc-0.1.2\",\n        sha256 = \"26b52a9543ae338f279b96b0b9fed9c8093744685043739079ce85cd58f289a6\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/cbc/0.1.2/download\"],\n        strip_prefix = \"cbc-0.1.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.cbc-0.1.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__cc-1.0.88\",\n        sha256 = \"02f341c093d19155a6e41631ce5971aac4e9a868262212153124c15fa22d1cdc\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/cc/1.0.88/download\"],\n        strip_prefix = \"cc-1.0.88\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.cc-1.0.88.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__cfg-if-1.0.0\",\n        sha256 = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/cfg-if/1.0.0/download\"],\n        strip_prefix = \"cfg-if-1.0.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.cfg-if-1.0.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__chrono-0.4.34\",\n        sha256 = \"5bc015644b92d5890fab7489e49d21f879d5c990186827d42ec511919404f38b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/chrono/0.4.34/download\"],\n        strip_prefix = \"chrono-0.4.34\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.chrono-0.4.34.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__ciborium-0.2.2\",\n        sha256 = \"42e69ffd6f0917f5c029256a24d0161db17cea3997d185db0d35926308770f0e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/ciborium/0.2.2/download\"],\n        strip_prefix = \"ciborium-0.2.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.ciborium-0.2.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__ciborium-io-0.2.2\",\n        sha256 = \"05afea1e0a06c9be33d539b876f1ce3692f4afea2cb41f740e7743225ed1c757\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/ciborium-io/0.2.2/download\"],\n        strip_prefix = \"ciborium-io-0.2.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.ciborium-io-0.2.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__ciborium-ll-0.2.2\",\n        sha256 = \"57663b653d948a338bfb3eeba9bb2fd5fcfaecb9e199e87e1eda4d9e8b240fd9\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/ciborium-ll/0.2.2/download\"],\n        strip_prefix = \"ciborium-ll-0.2.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.ciborium-ll-0.2.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__cipher-0.4.4\",\n        sha256 = \"773f3b9af64447d2ce9850330c473515014aa235e6a783b02db81ff39e4a3dad\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/cipher/0.4.4/download\"],\n        strip_prefix = \"cipher-0.4.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.cipher-0.4.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__clap-4.5.1\",\n        sha256 = \"c918d541ef2913577a0f9566e9ce27cb35b6df072075769e0b26cb5a554520da\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/clap/4.5.1/download\"],\n        strip_prefix = \"clap-4.5.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.clap-4.5.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__clap_builder-4.5.1\",\n        sha256 = \"9f3e7391dad68afb0c2ede1bf619f579a3dc9c2ec67f089baa397123a2f3d1eb\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/clap_builder/4.5.1/download\"],\n        strip_prefix = \"clap_builder-4.5.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.clap_builder-4.5.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__clap_lex-0.7.0\",\n        sha256 = \"98cc8fbded0c607b7ba9dd60cd98df59af97e84d24e49c8557331cfc26d301ce\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/clap_lex/0.7.0/download\"],\n        strip_prefix = \"clap_lex-0.7.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.clap_lex-0.7.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__cloudinary-0.4.0\",\n        sha256 = \"3b2bf9354f9e6756343f66fef23bc44fbae5fd1f61af3fd4ae3fccb72977a2f0\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/cloudinary/0.4.0/download\"],\n        strip_prefix = \"cloudinary-0.4.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.cloudinary-0.4.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__color_quant-1.1.0\",\n        sha256 = \"3d7b894f5411737b7867f4827955924d7c254fc9f4d91a6aad6b097804b1018b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/color_quant/1.1.0/download\"],\n        strip_prefix = \"color_quant-1.1.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.color_quant-1.1.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__concurrent-queue-2.4.0\",\n        sha256 = \"d16048cd947b08fa32c24458a22f5dc5e835264f689f4f5653210c69fd107363\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/concurrent-queue/2.4.0/download\"],\n        strip_prefix = \"concurrent-queue-2.4.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.concurrent-queue-2.4.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__constant_time_eq-0.3.0\",\n        sha256 = \"f7144d30dcf0fafbce74250a3963025d8d52177934239851c917d29f1df280c2\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/constant_time_eq/0.3.0/download\"],\n        strip_prefix = \"constant_time_eq-0.3.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.constant_time_eq-0.3.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__cookie-factory-0.3.2\",\n        sha256 = \"396de984970346b0d9e93d1415082923c679e5ae5c3ee3dcbd104f5610af126b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/cookie-factory/0.3.2/download\"],\n        strip_prefix = \"cookie-factory-0.3.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.cookie-factory-0.3.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__core-foundation-0.9.4\",\n        sha256 = \"91e195e091a93c46f7102ec7818a2aa394e1e1771c3ab4825963fa03e45afb8f\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/core-foundation/0.9.4/download\"],\n        strip_prefix = \"core-foundation-0.9.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.core-foundation-0.9.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__core-foundation-sys-0.8.6\",\n        sha256 = \"06ea2b9bc92be3c2baa9334a323ebca2d6f074ff852cd1d7b11064035cd3868f\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/core-foundation-sys/0.8.6/download\"],\n        strip_prefix = \"core-foundation-sys-0.8.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.core-foundation-sys-0.8.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__cpufeatures-0.2.12\",\n        sha256 = \"53fe5e26ff1b7aef8bca9c6080520cfb8d9333c7568e1829cef191a9723e5504\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/cpufeatures/0.2.12/download\"],\n        strip_prefix = \"cpufeatures-0.2.12\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.cpufeatures-0.2.12.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__crc-3.0.1\",\n        sha256 = \"86ec7a15cbe22e59248fc7eadb1907dab5ba09372595da4d73dd805ed4417dfe\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/crc/3.0.1/download\"],\n        strip_prefix = \"crc-3.0.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.crc-3.0.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__crc-catalog-2.4.0\",\n        sha256 = \"19d374276b40fb8bbdee95aef7c7fa6b5316ec764510eb64b8dd0e2ed0d7e7f5\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/crc-catalog/2.4.0/download\"],\n        strip_prefix = \"crc-catalog-2.4.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.crc-catalog-2.4.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__crc32fast-1.4.0\",\n        sha256 = \"b3855a8a784b474f333699ef2bbca9db2c4a1f6d9088a90a2d25b1eb53111eaa\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/crc32fast/1.4.0/download\"],\n        strip_prefix = \"crc32fast-1.4.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.crc32fast-1.4.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__criterion-0.5.1\",\n        sha256 = \"f2b12d017a929603d80db1831cd3a24082f8137ce19c69e6447f54f5fc8d692f\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/criterion/0.5.1/download\"],\n        strip_prefix = \"criterion-0.5.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.criterion-0.5.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__criterion-plot-0.5.0\",\n        sha256 = \"6b50826342786a51a89e2da3a28f1c32b06e387201bc2d19791f622c673706b1\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/criterion-plot/0.5.0/download\"],\n        strip_prefix = \"criterion-plot-0.5.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.criterion-plot-0.5.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__crossbeam-deque-0.8.5\",\n        sha256 = \"613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/crossbeam-deque/0.8.5/download\"],\n        strip_prefix = \"crossbeam-deque-0.8.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.crossbeam-deque-0.8.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__crossbeam-epoch-0.9.18\",\n        sha256 = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/crossbeam-epoch/0.9.18/download\"],\n        strip_prefix = \"crossbeam-epoch-0.9.18\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.crossbeam-epoch-0.9.18.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__crossbeam-utils-0.8.19\",\n        sha256 = \"248e3bacc7dc6baa3b21e405ee045c3047101a49145e7e9eca583ab4c2ca5345\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/crossbeam-utils/0.8.19/download\"],\n        strip_prefix = \"crossbeam-utils-0.8.19\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.crossbeam-utils-0.8.19.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__crunchy-0.2.2\",\n        sha256 = \"7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/crunchy/0.2.2/download\"],\n        strip_prefix = \"crunchy-0.2.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.crunchy-0.2.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__crypto-common-0.1.6\",\n        sha256 = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/crypto-common/0.1.6/download\"],\n        strip_prefix = \"crypto-common-0.1.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.crypto-common-0.1.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__darling-0.20.8\",\n        sha256 = \"54e36fcd13ed84ffdfda6f5be89b31287cbb80c439841fe69e04841435464391\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/darling/0.20.8/download\"],\n        strip_prefix = \"darling-0.20.8\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.darling-0.20.8.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__darling_core-0.20.8\",\n        sha256 = \"9c2cf1c23a687a1feeb728783b993c4e1ad83d99f351801977dd809b48d0a70f\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/darling_core/0.20.8/download\"],\n        strip_prefix = \"darling_core-0.20.8\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.darling_core-0.20.8.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__darling_macro-0.20.8\",\n        sha256 = \"a668eda54683121533a393014d8692171709ff57a7d61f187b6e782719f8933f\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/darling_macro/0.20.8/download\"],\n        strip_prefix = \"darling_macro-0.20.8\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.darling_macro-0.20.8.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__dashmap-5.5.3\",\n        sha256 = \"978747c1d849a7d2ee5e8adc0159961c48fb7e5db2f06af6723b80123bb53856\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/dashmap/5.5.3/download\"],\n        strip_prefix = \"dashmap-5.5.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.dashmap-5.5.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__deranged-0.3.11\",\n        sha256 = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/deranged/0.3.11/download\"],\n        strip_prefix = \"deranged-0.3.11\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.deranged-0.3.11.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__des-0.8.1\",\n        sha256 = \"ffdd80ce8ce993de27e9f063a444a4d53ce8e8db4c1f00cc03af5ad5a9867a1e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/des/0.8.1/download\"],\n        strip_prefix = \"des-0.8.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.des-0.8.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__digest-0.10.7\",\n        sha256 = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/digest/0.10.7/download\"],\n        strip_prefix = \"digest-0.10.7\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.digest-0.10.7.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__doc-comment-0.3.3\",\n        sha256 = \"fea41bba32d969b513997752735605054bc0dfa92b4c56bf1189f2e174be7a10\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/doc-comment/0.3.3/download\"],\n        strip_prefix = \"doc-comment-0.3.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.doc-comment-0.3.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__either-1.10.0\",\n        sha256 = \"11157ac094ffbdde99aa67b23417ebdd801842852b500e395a45a9c0aac03e4a\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/either/1.10.0/download\"],\n        strip_prefix = \"either-1.10.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.either-1.10.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__encoding_rs-0.8.33\",\n        sha256 = \"7268b386296a025e474d5140678f75d6de9493ae55a5d709eeb9dd08149945e1\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/encoding_rs/0.8.33/download\"],\n        strip_prefix = \"encoding_rs-0.8.33\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.encoding_rs-0.8.33.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__enum_dispatch-0.3.12\",\n        sha256 = \"8f33313078bb8d4d05a2733a94ac4c2d8a0df9a2b84424ebf4f33bfc224a890e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/enum_dispatch/0.3.12/download\"],\n        strip_prefix = \"enum_dispatch-0.3.12\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.enum_dispatch-0.3.12.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__equivalent-1.0.1\",\n        sha256 = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/equivalent/1.0.1/download\"],\n        strip_prefix = \"equivalent-1.0.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.equivalent-1.0.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__errno-0.3.8\",\n        sha256 = \"a258e46cdc063eb8519c00b9fc845fc47bcfca4130e2f08e88665ceda8474245\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/errno/0.3.8/download\"],\n        strip_prefix = \"errno-0.3.8\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.errno-0.3.8.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__event-listener-2.5.3\",\n        sha256 = \"0206175f82b8d6bf6652ff7d71a1e27fd2e4efde587fd368662814d6ec1d9ce0\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/event-listener/2.5.3/download\"],\n        strip_prefix = \"event-listener-2.5.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.event-listener-2.5.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__event-listener-4.0.3\",\n        sha256 = \"67b215c49b2b248c855fb73579eb1f4f26c38ffdc12973e20e07b91d78d5646e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/event-listener/4.0.3/download\"],\n        strip_prefix = \"event-listener-4.0.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.event-listener-4.0.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__event-listener-5.2.0\",\n        sha256 = \"2b5fb89194fa3cad959b833185b3063ba881dbfc7030680b314250779fb4cc91\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/event-listener/5.2.0/download\"],\n        strip_prefix = \"event-listener-5.2.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.event-listener-5.2.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__event-listener-strategy-0.4.0\",\n        sha256 = \"958e4d70b6d5e81971bebec42271ec641e7ff4e170a6fa605f2b8a8b65cb97d3\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/event-listener-strategy/0.4.0/download\"],\n        strip_prefix = \"event-listener-strategy-0.4.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.event-listener-strategy-0.4.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__event-listener-strategy-0.5.0\",\n        sha256 = \"feedafcaa9b749175d5ac357452a9d41ea2911da598fde46ce1fe02c37751291\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/event-listener-strategy/0.5.0/download\"],\n        strip_prefix = \"event-listener-strategy-0.5.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.event-listener-strategy-0.5.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__executor-trait-2.1.0\",\n        sha256 = \"1a1052dd43212a7777ec6a69b117da52f5e52f07aec47d00c1a2b33b85d06b08\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/executor-trait/2.1.0/download\"],\n        strip_prefix = \"executor-trait-2.1.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.executor-trait-2.1.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__fast_image_resize-3.0.4\",\n        sha256 = \"c9d450fac8a334ad72825596173f0f7767ff04dd6e3d59c49c894c4bc2957e8b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/fast_image_resize/3.0.4/download\"],\n        strip_prefix = \"fast_image_resize-3.0.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.fast_image_resize-3.0.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__fastrand-1.9.0\",\n        sha256 = \"e51093e27b0797c359783294ca4f0a911c270184cb10f85783b118614a1501be\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/fastrand/1.9.0/download\"],\n        strip_prefix = \"fastrand-1.9.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.fastrand-1.9.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__fastrand-2.0.1\",\n        sha256 = \"25cbce373ec4653f1a01a31e8a5e5ec0c622dc27ff9c4e6606eefef5cbbed4a5\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/fastrand/2.0.1/download\"],\n        strip_prefix = \"fastrand-2.0.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.fastrand-2.0.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__fdeflate-0.3.4\",\n        sha256 = \"4f9bfee30e4dedf0ab8b422f03af778d9612b63f502710fc500a334ebe2de645\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/fdeflate/0.3.4/download\"],\n        strip_prefix = \"fdeflate-0.3.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.fdeflate-0.3.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__fern-0.6.2\",\n        sha256 = \"d9f0c14694cbd524c8720dd69b0e3179344f04ebb5f90f2e4a440c6ea3b2f1ee\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/fern/0.6.2/download\"],\n        strip_prefix = \"fern-0.6.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.fern-0.6.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__fixedbitset-0.4.2\",\n        sha256 = \"0ce7134b9999ecaf8bcd65542e436736ef32ddca1b3e06094cb6ec5755203b80\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/fixedbitset/0.4.2/download\"],\n        strip_prefix = \"fixedbitset-0.4.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.fixedbitset-0.4.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__flate2-1.0.28\",\n        sha256 = \"46303f565772937ffe1d394a4fac6f411c6013172fadde9dcdb1e147a086940e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/flate2/1.0.28/download\"],\n        strip_prefix = \"flate2-1.0.28\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.flate2-1.0.28.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__flume-0.10.14\",\n        sha256 = \"1657b4441c3403d9f7b3409e47575237dac27b1b5726df654a6ecbf92f0f7577\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/flume/0.10.14/download\"],\n        strip_prefix = \"flume-0.10.14\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.flume-0.10.14.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__flume-0.11.0\",\n        sha256 = \"55ac459de2512911e4b674ce33cf20befaba382d05b62b008afc1c8b57cbf181\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/flume/0.11.0/download\"],\n        strip_prefix = \"flume-0.11.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.flume-0.11.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__fnv-1.0.7\",\n        sha256 = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/fnv/1.0.7/download\"],\n        strip_prefix = \"fnv-1.0.7\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.fnv-1.0.7.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__foreign-types-0.3.2\",\n        sha256 = \"f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/foreign-types/0.3.2/download\"],\n        strip_prefix = \"foreign-types-0.3.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.foreign-types-0.3.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__foreign-types-shared-0.1.1\",\n        sha256 = \"00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/foreign-types-shared/0.1.1/download\"],\n        strip_prefix = \"foreign-types-shared-0.1.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.foreign-types-shared-0.1.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__form_urlencoded-1.2.1\",\n        sha256 = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/form_urlencoded/1.2.1/download\"],\n        strip_prefix = \"form_urlencoded-1.2.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.form_urlencoded-1.2.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__fpe-0.6.1\",\n        sha256 = \"26c4b37de5ae15812a764c958297cfc50f5c010438f60c6ce75d11b802abd404\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/fpe/0.6.1/download\"],\n        strip_prefix = \"fpe-0.6.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.fpe-0.6.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__futures-0.3.30\",\n        sha256 = \"645c6916888f6cb6350d2550b80fb63e734897a8498abe35cfb732b6487804b0\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/futures/0.3.30/download\"],\n        strip_prefix = \"futures-0.3.30\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.futures-0.3.30.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__futures-channel-0.3.30\",\n        sha256 = \"eac8f7d7865dcb88bd4373ab671c8cf4508703796caa2b1985a9ca867b3fcb78\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/futures-channel/0.3.30/download\"],\n        strip_prefix = \"futures-channel-0.3.30\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.futures-channel-0.3.30.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__futures-core-0.3.30\",\n        sha256 = \"dfc6580bb841c5a68e9ef15c77ccc837b40a7504914d52e47b8b0e9bbda25a1d\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/futures-core/0.3.30/download\"],\n        strip_prefix = \"futures-core-0.3.30\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.futures-core-0.3.30.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__futures-executor-0.3.30\",\n        sha256 = \"a576fc72ae164fca6b9db127eaa9a9dda0d61316034f33a0a0d4eda41f02b01d\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/futures-executor/0.3.30/download\"],\n        strip_prefix = \"futures-executor-0.3.30\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.futures-executor-0.3.30.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__futures-io-0.3.30\",\n        sha256 = \"a44623e20b9681a318efdd71c299b6b222ed6f231972bfe2f224ebad6311f0c1\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/futures-io/0.3.30/download\"],\n        strip_prefix = \"futures-io-0.3.30\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.futures-io-0.3.30.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__futures-lite-1.13.0\",\n        sha256 = \"49a9d51ce47660b1e808d3c990b4709f2f415d928835a17dfd16991515c46bce\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/futures-lite/1.13.0/download\"],\n        strip_prefix = \"futures-lite-1.13.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.futures-lite-1.13.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__futures-lite-2.2.0\",\n        sha256 = \"445ba825b27408685aaecefd65178908c36c6e96aaf6d8599419d46e624192ba\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/futures-lite/2.2.0/download\"],\n        strip_prefix = \"futures-lite-2.2.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.futures-lite-2.2.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__futures-macro-0.3.30\",\n        sha256 = \"87750cf4b7a4c0625b1529e4c543c2182106e4dedc60a2a6455e00d212c489ac\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/futures-macro/0.3.30/download\"],\n        strip_prefix = \"futures-macro-0.3.30\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.futures-macro-0.3.30.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__futures-sink-0.3.30\",\n        sha256 = \"9fb8e00e87438d937621c1c6269e53f536c14d3fbd6a042bb24879e57d474fb5\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/futures-sink/0.3.30/download\"],\n        strip_prefix = \"futures-sink-0.3.30\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.futures-sink-0.3.30.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__futures-task-0.3.30\",\n        sha256 = \"38d84fa142264698cdce1a9f9172cf383a0c82de1bddcf3092901442c4097004\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/futures-task/0.3.30/download\"],\n        strip_prefix = \"futures-task-0.3.30\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.futures-task-0.3.30.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__futures-util-0.3.30\",\n        sha256 = \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/futures-util/0.3.30/download\"],\n        strip_prefix = \"futures-util-0.3.30\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.futures-util-0.3.30.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__generic-array-0.14.7\",\n        sha256 = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/generic-array/0.14.7/download\"],\n        strip_prefix = \"generic-array-0.14.7\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.generic-array-0.14.7.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__getrandom-0.2.12\",\n        sha256 = \"190092ea657667030ac6a35e305e62fc4dd69fd98ac98631e5d3a2b1575a12b5\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/getrandom/0.2.12/download\"],\n        strip_prefix = \"getrandom-0.2.12\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.getrandom-0.2.12.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__gimli-0.28.1\",\n        sha256 = \"4271d37baee1b8c7e4b708028c57d816cf9d2434acb33a549475f78c181f6253\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/gimli/0.28.1/download\"],\n        strip_prefix = \"gimli-0.28.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.gimli-0.28.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__h2-0.3.24\",\n        sha256 = \"bb2c4422095b67ee78da96fbb51a4cc413b3b25883c7717ff7ca1ab31022c9c9\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/h2/0.3.24/download\"],\n        strip_prefix = \"h2-0.3.24\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.h2-0.3.24.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__half-2.4.0\",\n        sha256 = \"b5eceaaeec696539ddaf7b333340f1af35a5aa87ae3e4f3ead0532f72affab2e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/half/2.4.0/download\"],\n        strip_prefix = \"half-2.4.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.half-2.4.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__hashbrown-0.12.3\",\n        sha256 = \"8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/hashbrown/0.12.3/download\"],\n        strip_prefix = \"hashbrown-0.12.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.hashbrown-0.12.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__hashbrown-0.14.3\",\n        sha256 = \"290f1a1d9242c78d09ce40a5e87e7554ee637af1351968159f4952f028f75604\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/hashbrown/0.14.3/download\"],\n        strip_prefix = \"hashbrown-0.14.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.hashbrown-0.14.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__headers-0.3.9\",\n        sha256 = \"06683b93020a07e3dbcf5f8c0f6d40080d725bea7936fc01ad345c01b97dc270\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/headers/0.3.9/download\"],\n        strip_prefix = \"headers-0.3.9\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.headers-0.3.9.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__headers-core-0.2.0\",\n        sha256 = \"e7f66481bfee273957b1f20485a4ff3362987f85b2c236580d81b4eb7a326429\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/headers-core/0.2.0/download\"],\n        strip_prefix = \"headers-core-0.2.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.headers-core-0.2.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__heck-0.3.3\",\n        sha256 = \"6d621efb26863f0e9924c6ac577e8275e5e6b77455db64ffa6c65c904e9e132c\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/heck/0.3.3/download\"],\n        strip_prefix = \"heck-0.3.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.heck-0.3.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__heck-0.4.1\",\n        sha256 = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/heck/0.4.1/download\"],\n        strip_prefix = \"heck-0.4.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.heck-0.4.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__hermit-abi-0.3.9\",\n        sha256 = \"d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/hermit-abi/0.3.9/download\"],\n        strip_prefix = \"hermit-abi-0.3.9\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.hermit-abi-0.3.9.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__hex-0.4.3\",\n        sha256 = \"7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/hex/0.4.3/download\"],\n        strip_prefix = \"hex-0.4.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.hex-0.4.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__histogram-0.6.9\",\n        sha256 = \"12cb882ccb290b8646e554b157ab0b71e64e8d5bef775cd66b6531e52d302669\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/histogram/0.6.9/download\"],\n        strip_prefix = \"histogram-0.6.9\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.histogram-0.6.9.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__hmac-0.12.1\",\n        sha256 = \"6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/hmac/0.12.1/download\"],\n        strip_prefix = \"hmac-0.12.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.hmac-0.12.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__home-0.5.9\",\n        sha256 = \"e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/home/0.5.9/download\"],\n        strip_prefix = \"home-0.5.9\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.home-0.5.9.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__http-0.2.11\",\n        sha256 = \"8947b1a6fad4393052c7ba1f4cd97bed3e953a95c79c92ad9b051a04611d9fbb\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/http/0.2.11/download\"],\n        strip_prefix = \"http-0.2.11\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.http-0.2.11.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__http-body-0.4.6\",\n        sha256 = \"7ceab25649e9960c0311ea418d17bee82c0dcec1bd053b5f9a66e265a693bed2\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/http-body/0.4.6/download\"],\n        strip_prefix = \"http-body-0.4.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.http-body-0.4.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__httparse-1.8.0\",\n        sha256 = \"d897f394bad6a705d5f4104762e116a75639e470d80901eed05a860a95cb1904\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/httparse/1.8.0/download\"],\n        strip_prefix = \"httparse-1.8.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.httparse-1.8.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__httpdate-1.0.3\",\n        sha256 = \"df3b46402a9d5adb4c86a0cf463f42e19994e3ee891101b1841f30a545cb49a9\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/httpdate/1.0.3/download\"],\n        strip_prefix = \"httpdate-1.0.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.httpdate-1.0.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__hyper-0.14.28\",\n        sha256 = \"bf96e135eb83a2a8ddf766e426a841d8ddd7449d5f00d34ea02b41d2f19eef80\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/hyper/0.14.28/download\"],\n        strip_prefix = \"hyper-0.14.28\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.hyper-0.14.28.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__hyper-timeout-0.4.1\",\n        sha256 = \"bbb958482e8c7be4bc3cf272a766a2b0bf1a6755e7a6ae777f017a31d11b13b1\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/hyper-timeout/0.4.1/download\"],\n        strip_prefix = \"hyper-timeout-0.4.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.hyper-timeout-0.4.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__hyper-tls-0.5.0\",\n        sha256 = \"d6183ddfa99b85da61a140bea0efc93fdf56ceaa041b37d553518030827f9905\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/hyper-tls/0.5.0/download\"],\n        strip_prefix = \"hyper-tls-0.5.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.hyper-tls-0.5.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__iana-time-zone-0.1.60\",\n        sha256 = \"e7ffbb5a1b541ea2561f8c41c087286cc091e21e556a4f09a8f6cbf17b69b141\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/iana-time-zone/0.1.60/download\"],\n        strip_prefix = \"iana-time-zone-0.1.60\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.iana-time-zone-0.1.60.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__iana-time-zone-haiku-0.1.2\",\n        sha256 = \"f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/iana-time-zone-haiku/0.1.2/download\"],\n        strip_prefix = \"iana-time-zone-haiku-0.1.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.iana-time-zone-haiku-0.1.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__ident_case-1.0.1\",\n        sha256 = \"b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/ident_case/1.0.1/download\"],\n        strip_prefix = \"ident_case-1.0.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.ident_case-1.0.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__idna-0.5.0\",\n        sha256 = \"634d9b1461af396cad843f47fdba5597a4f9e6ddd4bfb6ff5d85028c25cb12f6\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/idna/0.5.0/download\"],\n        strip_prefix = \"idna-0.5.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.idna-0.5.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__image-0.24.9\",\n        sha256 = \"5690139d2f55868e080017335e4b94cb7414274c74f1669c84fb5feba2c9f69d\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/image/0.24.9/download\"],\n        strip_prefix = \"image-0.24.9\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.image-0.24.9.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__indexmap-1.9.3\",\n        sha256 = \"bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/indexmap/1.9.3/download\"],\n        strip_prefix = \"indexmap-1.9.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.indexmap-1.9.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__indexmap-2.2.5\",\n        sha256 = \"7b0b929d511467233429c45a44ac1dcaa21ba0f5ba11e4879e6ed28ddb4f9df4\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/indexmap/2.2.5/download\"],\n        strip_prefix = \"indexmap-2.2.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.indexmap-2.2.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__inout-0.1.3\",\n        sha256 = \"a0c10553d664a4d0bcff9f4215d0aac67a639cc68ef660840afe309b807bc9f5\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/inout/0.1.3/download\"],\n        strip_prefix = \"inout-0.1.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.inout-0.1.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__instant-0.1.12\",\n        sha256 = \"7a5bbe824c507c5da5956355e86a746d82e0e1464f65d862cc5e71da70e94b2c\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/instant/0.1.12/download\"],\n        strip_prefix = \"instant-0.1.12\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.instant-0.1.12.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__io-lifetimes-1.0.11\",\n        sha256 = \"eae7b9aee968036d54dce06cebaefd919e4472e753296daccd6d344e3e2df0c2\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/io-lifetimes/1.0.11/download\"],\n        strip_prefix = \"io-lifetimes-1.0.11\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.io-lifetimes-1.0.11.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__ipnet-2.9.0\",\n        sha256 = \"8f518f335dce6725a761382244631d86cf0ccb2863413590b31338feb467f9c3\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/ipnet/2.9.0/download\"],\n        strip_prefix = \"ipnet-2.9.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.ipnet-2.9.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__is-terminal-0.4.12\",\n        sha256 = \"f23ff5ef2b80d608d61efee834934d862cd92461afc0560dedf493e4c033738b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/is-terminal/0.4.12/download\"],\n        strip_prefix = \"is-terminal-0.4.12\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.is-terminal-0.4.12.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__isolang-2.4.0\",\n        sha256 = \"fe50d48c77760c55188549098b9a7f6e37ae980c586a24693d6b01c3b2010c3c\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/isolang/2.4.0/download\"],\n        strip_prefix = \"isolang-2.4.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.isolang-2.4.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__itertools-0.10.5\",\n        sha256 = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/itertools/0.10.5/download\"],\n        strip_prefix = \"itertools-0.10.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.itertools-0.10.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__itertools-0.11.0\",\n        sha256 = \"b1c173a5686ce8bfa551b3563d0c2170bf24ca44da99c7ca4bfdab5418c3fe57\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/itertools/0.11.0/download\"],\n        strip_prefix = \"itertools-0.11.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.itertools-0.11.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__itertools-0.12.1\",\n        sha256 = \"ba291022dbbd398a455acf126c1e341954079855bc60dfdda641363bd6922569\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/itertools/0.12.1/download\"],\n        strip_prefix = \"itertools-0.12.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.itertools-0.12.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__itoa-1.0.10\",\n        sha256 = \"b1a46d1a171d865aa5f83f92695765caa047a9b4cbae2cbf37dbd613a793fd4c\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/itoa/1.0.10/download\"],\n        strip_prefix = \"itoa-1.0.10\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.itoa-1.0.10.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__jpeg-decoder-0.3.1\",\n        sha256 = \"f5d4a7da358eff58addd2877a45865158f0d78c911d43a5784ceb7bbf52833b0\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/jpeg-decoder/0.3.1/download\"],\n        strip_prefix = \"jpeg-decoder-0.3.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.jpeg-decoder-0.3.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__js-sys-0.3.68\",\n        sha256 = \"406cda4b368d531c842222cf9d2600a9a4acce8d29423695379c6868a143a9ee\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/js-sys/0.3.68/download\"],\n        strip_prefix = \"js-sys-0.3.68\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.js-sys-0.3.68.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__jsonwebtoken-9.2.0\",\n        sha256 = \"5c7ea04a7c5c055c175f189b6dc6ba036fd62306b58c66c9f6389036c503a3f4\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/jsonwebtoken/9.2.0/download\"],\n        strip_prefix = \"jsonwebtoken-9.2.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.jsonwebtoken-9.2.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__kafka-0.10.0\",\n        sha256 = \"2054ba4edcb4dcda4209e138c7e88caf26d4a325b3db76fbdb6ca5eecc23e426\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/kafka/0.10.0/download\"],\n        strip_prefix = \"kafka-0.10.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.kafka-0.10.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__lapin-2.3.1\",\n        sha256 = \"5f3067a1fcfbc3fc46455809c023e69b8f6602463201010f4ae5a3b572adb9dc\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/lapin/2.3.1/download\"],\n        strip_prefix = \"lapin-2.3.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.lapin-2.3.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__lazy_static-1.4.0\",\n        sha256 = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/lazy_static/1.4.0/download\"],\n        strip_prefix = \"lazy_static-1.4.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.lazy_static-1.4.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__libc-0.2.153\",\n        sha256 = \"9c198f91728a82281a64e1f4f9eeb25d82cb32a5de251c6bd1b5154d63a8e7bd\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/libc/0.2.153/download\"],\n        strip_prefix = \"libc-0.2.153\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.libc-0.2.153.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__libm-0.2.8\",\n        sha256 = \"4ec2a862134d2a7d32d7983ddcdd1c4923530833c9f2ea1a44fc5fa473989058\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/libm/0.2.8/download\"],\n        strip_prefix = \"libm-0.2.8\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.libm-0.2.8.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__linux-raw-sys-0.3.8\",\n        sha256 = \"ef53942eb7bf7ff43a617b3e2c1c4a5ecf5944a7c1bc12d7ee39bbb15e5c1519\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/linux-raw-sys/0.3.8/download\"],\n        strip_prefix = \"linux-raw-sys-0.3.8\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.linux-raw-sys-0.3.8.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__linux-raw-sys-0.4.13\",\n        sha256 = \"01cda141df6706de531b6c46c3a33ecca755538219bd484262fa09410c13539c\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/linux-raw-sys/0.4.13/download\"],\n        strip_prefix = \"linux-raw-sys-0.4.13\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.linux-raw-sys-0.4.13.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__lock_api-0.4.11\",\n        sha256 = \"3c168f8615b12bc01f9c17e2eb0cc07dcae1940121185446edc3744920e8ef45\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/lock_api/0.4.11/download\"],\n        strip_prefix = \"lock_api-0.4.11\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.lock_api-0.4.11.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__log-0.4.21\",\n        sha256 = \"90ed8c1e510134f979dbc4f070f87d4313098b704861a105fe34231c70a3901c\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/log/0.4.21/download\"],\n        strip_prefix = \"log-0.4.21\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.log-0.4.21.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__lz4_flex-0.11.2\",\n        sha256 = \"912b45c753ff5f7f5208307e8ace7d2a2e30d024e26d3509f3dce546c044ce15\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/lz4_flex/0.11.2/download\"],\n        strip_prefix = \"lz4_flex-0.11.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.lz4_flex-0.11.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__matchit-0.7.3\",\n        sha256 = \"0e7465ac9959cc2b1404e8e2367b43684a6d13790fe23056cc8c6c5a6b7bcb94\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/matchit/0.7.3/download\"],\n        strip_prefix = \"matchit-0.7.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.matchit-0.7.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__memcache-0.17.2\",\n        sha256 = \"0396084c5d5e2ef2c480a51933b56e9673898f14657212eebbffcbcc12c7153a\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/memcache/0.17.2/download\"],\n        strip_prefix = \"memcache-0.17.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.memcache-0.17.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__memchr-2.7.1\",\n        sha256 = \"523dc4f511e55ab87b694dc30d0f820d60906ef06413f93d4d7a1385599cc149\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/memchr/2.7.1/download\"],\n        strip_prefix = \"memchr-2.7.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.memchr-2.7.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__mime-0.3.17\",\n        sha256 = \"6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/mime/0.3.17/download\"],\n        strip_prefix = \"mime-0.3.17\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.mime-0.3.17.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__mime_guess-2.0.4\",\n        sha256 = \"4192263c238a5f0d0c6bfd21f336a313a4ce1c450542449ca191bb657b4642ef\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/mime_guess/2.0.4/download\"],\n        strip_prefix = \"mime_guess-2.0.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.mime_guess-2.0.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__minimal-lexical-0.2.1\",\n        sha256 = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/minimal-lexical/0.2.1/download\"],\n        strip_prefix = \"minimal-lexical-0.2.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.minimal-lexical-0.2.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__miniz_oxide-0.7.2\",\n        sha256 = \"9d811f3e15f28568be3407c8e7fdb6514c1cda3cb30683f15b6a1a1dc4ea14a7\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/miniz_oxide/0.7.2/download\"],\n        strip_prefix = \"miniz_oxide-0.7.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.miniz_oxide-0.7.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__mio-0.8.11\",\n        sha256 = \"a4a650543ca06a924e8b371db273b2756685faae30f8487da1b56505a8f78b0c\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/mio/0.8.11/download\"],\n        strip_prefix = \"mio-0.8.11\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.mio-0.8.11.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__multimap-0.8.3\",\n        sha256 = \"e5ce46fe64a9d73be07dcbe690a38ce1b293be448fd8ce1e6c1b8062c9f72c6a\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/multimap/0.8.3/download\"],\n        strip_prefix = \"multimap-0.8.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.multimap-0.8.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__native-tls-0.2.11\",\n        sha256 = \"07226173c32f2926027b63cce4bcd8076c3552846cbe7925f3aaffeac0a3b92e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/native-tls/0.2.11/download\"],\n        strip_prefix = \"native-tls-0.2.11\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.native-tls-0.2.11.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__nom-7.1.3\",\n        sha256 = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/nom/7.1.3/download\"],\n        strip_prefix = \"nom-7.1.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.nom-7.1.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__num-bigint-0.4.4\",\n        sha256 = \"608e7659b5c3d7cba262d894801b9ec9d00de989e8a82bd4bef91d08da45cdc0\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/num-bigint/0.4.4/download\"],\n        strip_prefix = \"num-bigint-0.4.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.num-bigint-0.4.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__num-conv-0.1.0\",\n        sha256 = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/num-conv/0.1.0/download\"],\n        strip_prefix = \"num-conv-0.1.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.num-conv-0.1.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__num-integer-0.1.46\",\n        sha256 = \"7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/num-integer/0.1.46/download\"],\n        strip_prefix = \"num-integer-0.1.46\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.num-integer-0.1.46.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__num-traits-0.2.18\",\n        sha256 = \"da0df0e5185db44f69b44f26786fe401b6c293d1907744beaa7fa62b2e5a517a\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/num-traits/0.2.18/download\"],\n        strip_prefix = \"num-traits-0.2.18\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.num-traits-0.2.18.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__num_cpus-1.16.0\",\n        sha256 = \"4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/num_cpus/1.16.0/download\"],\n        strip_prefix = \"num_cpus-1.16.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.num_cpus-1.16.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__num_enum-0.6.1\",\n        sha256 = \"7a015b430d3c108a207fd776d2e2196aaf8b1cf8cf93253e3a097ff3085076a1\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/num_enum/0.6.1/download\"],\n        strip_prefix = \"num_enum-0.6.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.num_enum-0.6.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__num_enum_derive-0.6.1\",\n        sha256 = \"96667db765a921f7b295ffee8b60472b686a51d4f21c2ee4ffdb94c7013b65a6\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/num_enum_derive/0.6.1/download\"],\n        strip_prefix = \"num_enum_derive-0.6.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.num_enum_derive-0.6.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__object-0.32.2\",\n        sha256 = \"a6a622008b6e321afc04970976f62ee297fdbaa6f95318ca343e3eebb9648441\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/object/0.32.2/download\"],\n        strip_prefix = \"object-0.32.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.object-0.32.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__once_cell-1.19.0\",\n        sha256 = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/once_cell/1.19.0/download\"],\n        strip_prefix = \"once_cell-1.19.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.once_cell-1.19.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__oorandom-11.1.3\",\n        sha256 = \"0ab1bc2a289d34bd04a330323ac98a1b4bc82c9d9fcb1e66b63caa84da26b575\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/oorandom/11.1.3/download\"],\n        strip_prefix = \"oorandom-11.1.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.oorandom-11.1.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__openssl-0.10.64\",\n        sha256 = \"95a0481286a310808298130d22dd1fef0fa571e05a8f44ec801801e84b216b1f\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/openssl/0.10.64/download\"],\n        strip_prefix = \"openssl-0.10.64\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.openssl-0.10.64.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__openssl-macros-0.1.1\",\n        sha256 = \"a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/openssl-macros/0.1.1/download\"],\n        strip_prefix = \"openssl-macros-0.1.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.openssl-macros-0.1.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__openssl-probe-0.1.5\",\n        sha256 = \"ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/openssl-probe/0.1.5/download\"],\n        strip_prefix = \"openssl-probe-0.1.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.openssl-probe-0.1.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__openssl-sys-0.9.101\",\n        sha256 = \"dda2b0f344e78efc2facf7d195d098df0dd72151b26ab98da807afc26c198dff\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/openssl-sys/0.9.101/download\"],\n        strip_prefix = \"openssl-sys-0.9.101\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.openssl-sys-0.9.101.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__p12-0.6.3\",\n        sha256 = \"d4873306de53fe82e7e484df31e1e947d61514b6ea2ed6cd7b45d63006fd9224\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/p12/0.6.3/download\"],\n        strip_prefix = \"p12-0.6.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.p12-0.6.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__parking-2.2.0\",\n        sha256 = \"bb813b8af86854136c6922af0598d719255ecb2179515e6e7730d468f05c9cae\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/parking/2.2.0/download\"],\n        strip_prefix = \"parking-2.2.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.parking-2.2.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__parking_lot-0.12.1\",\n        sha256 = \"3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/parking_lot/0.12.1/download\"],\n        strip_prefix = \"parking_lot-0.12.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.parking_lot-0.12.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__parking_lot_core-0.9.9\",\n        sha256 = \"4c42a9226546d68acdd9c0a280d17ce19bfe27a46bf68784e4066115788d008e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/parking_lot_core/0.9.9/download\"],\n        strip_prefix = \"parking_lot_core-0.9.9\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.parking_lot_core-0.9.9.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__pem-3.0.3\",\n        sha256 = \"1b8fcc794035347fb64beda2d3b462595dd2753e3f268d89c5aae77e8cf2c310\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/pem/3.0.3/download\"],\n        strip_prefix = \"pem-3.0.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.pem-3.0.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__percent-encoding-2.3.1\",\n        sha256 = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/percent-encoding/2.3.1/download\"],\n        strip_prefix = \"percent-encoding-2.3.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.percent-encoding-2.3.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__petgraph-0.6.4\",\n        sha256 = \"e1d3afd2628e69da2be385eb6f2fd57c8ac7977ceeff6dc166ff1657b0e386a9\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/petgraph/0.6.4/download\"],\n        strip_prefix = \"petgraph-0.6.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.petgraph-0.6.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__phf-0.11.2\",\n        sha256 = \"ade2d8b8f33c7333b51bcf0428d37e217e9f32192ae4772156f65063b8ce03dc\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/phf/0.11.2/download\"],\n        strip_prefix = \"phf-0.11.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.phf-0.11.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__phf_shared-0.11.2\",\n        sha256 = \"90fcb95eef784c2ac79119d1dd819e162b5da872ce6f3c3abe1e8ca1c082f72b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/phf_shared/0.11.2/download\"],\n        strip_prefix = \"phf_shared-0.11.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.phf_shared-0.11.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__pin-project-1.1.4\",\n        sha256 = \"0302c4a0442c456bd56f841aee5c3bfd17967563f6fadc9ceb9f9c23cf3807e0\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/pin-project/1.1.4/download\"],\n        strip_prefix = \"pin-project-1.1.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.pin-project-1.1.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__pin-project-internal-1.1.4\",\n        sha256 = \"266c042b60c9c76b8d53061e52b2e0d1116abc57cefc8c5cd671619a56ac3690\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/pin-project-internal/1.1.4/download\"],\n        strip_prefix = \"pin-project-internal-1.1.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.pin-project-internal-1.1.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__pin-project-lite-0.2.13\",\n        sha256 = \"8afb450f006bf6385ca15ef45d71d2288452bc3683ce2e2cacc0d18e4be60b58\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/pin-project-lite/0.2.13/download\"],\n        strip_prefix = \"pin-project-lite-0.2.13\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.pin-project-lite-0.2.13.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__pin-utils-0.1.0\",\n        sha256 = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/pin-utils/0.1.0/download\"],\n        strip_prefix = \"pin-utils-0.1.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.pin-utils-0.1.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__pinky-swear-6.2.0\",\n        sha256 = \"6cfae3ead413ca051a681152bd266438d3bfa301c9bdf836939a14c721bb2a21\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/pinky-swear/6.2.0/download\"],\n        strip_prefix = \"pinky-swear-6.2.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.pinky-swear-6.2.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__piper-0.2.1\",\n        sha256 = \"668d31b1c4eba19242f2088b2bf3316b82ca31082a8335764db4e083db7485d4\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/piper/0.2.1/download\"],\n        strip_prefix = \"piper-0.2.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.piper-0.2.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__pkg-config-0.3.30\",\n        sha256 = \"d231b230927b5e4ad203db57bbcbee2802f6bce620b1e4a9024a07d94e2907ec\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/pkg-config/0.3.30/download\"],\n        strip_prefix = \"pkg-config-0.3.30\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.pkg-config-0.3.30.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__plotters-0.3.5\",\n        sha256 = \"d2c224ba00d7cadd4d5c660deaf2098e5e80e07846537c51f9cfa4be50c1fd45\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/plotters/0.3.5/download\"],\n        strip_prefix = \"plotters-0.3.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.plotters-0.3.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__plotters-backend-0.3.5\",\n        sha256 = \"9e76628b4d3a7581389a35d5b6e2139607ad7c75b17aed325f210aa91f4a9609\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/plotters-backend/0.3.5/download\"],\n        strip_prefix = \"plotters-backend-0.3.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.plotters-backend-0.3.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__plotters-svg-0.3.5\",\n        sha256 = \"38f6d39893cca0701371e3c27294f09797214b86f1fb951b89ade8ec04e2abab\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/plotters-svg/0.3.5/download\"],\n        strip_prefix = \"plotters-svg-0.3.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.plotters-svg-0.3.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__png-0.17.13\",\n        sha256 = \"06e4b0d3d1312775e782c86c91a111aa1f910cbb65e1337f9975b5f9a554b5e1\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/png/0.17.13/download\"],\n        strip_prefix = \"png-0.17.13\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.png-0.17.13.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__polling-2.8.0\",\n        sha256 = \"4b2d323e8ca7996b3e23126511a523f7e62924d93ecd5ae73b333815b0eb3dce\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/polling/2.8.0/download\"],\n        strip_prefix = \"polling-2.8.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.polling-2.8.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__polling-3.5.0\",\n        sha256 = \"24f040dee2588b4963afb4e420540439d126f73fdacf4a9c486a96d840bac3c9\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/polling/3.5.0/download\"],\n        strip_prefix = \"polling-3.5.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.polling-3.5.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__powerfmt-0.2.0\",\n        sha256 = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/powerfmt/0.2.0/download\"],\n        strip_prefix = \"powerfmt-0.2.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.powerfmt-0.2.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__ppv-lite86-0.2.17\",\n        sha256 = \"5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/ppv-lite86/0.2.17/download\"],\n        strip_prefix = \"ppv-lite86-0.2.17\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.ppv-lite86-0.2.17.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__prettyplease-0.2.16\",\n        sha256 = \"a41cf62165e97c7f814d2221421dbb9afcbcdb0a88068e5ea206e19951c2cbb5\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/prettyplease/0.2.16/download\"],\n        strip_prefix = \"prettyplease-0.2.16\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.prettyplease-0.2.16.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__proc-macro-crate-1.3.1\",\n        sha256 = \"7f4c021e1093a56626774e81216a4ce732a735e5bad4868a03f3ed65ca0c3919\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/proc-macro-crate/1.3.1/download\"],\n        strip_prefix = \"proc-macro-crate-1.3.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.proc-macro-crate-1.3.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__proc-macro2-1.0.78\",\n        sha256 = \"e2422ad645d89c99f8f3e6b88a9fdeca7fabeac836b1002371c4367c8f984aae\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/proc-macro2/1.0.78/download\"],\n        strip_prefix = \"proc-macro2-1.0.78\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.proc-macro2-1.0.78.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__prost-0.12.3\",\n        sha256 = \"146c289cda302b98a28d40c8b3b90498d6e526dd24ac2ecea73e4e491685b94a\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/prost/0.12.3/download\"],\n        strip_prefix = \"prost-0.12.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.prost-0.12.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__prost-build-0.12.3\",\n        sha256 = \"c55e02e35260070b6f716a2423c2ff1c3bb1642ddca6f99e1f26d06268a0e2d2\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/prost-build/0.12.3/download\"],\n        strip_prefix = \"prost-build-0.12.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.prost-build-0.12.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__prost-derive-0.12.3\",\n        sha256 = \"efb6c9a1dd1def8e2124d17e83a20af56f1570d6c2d2bd9e266ccb768df3840e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/prost-derive/0.12.3/download\"],\n        strip_prefix = \"prost-derive-0.12.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.prost-derive-0.12.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__prost-types-0.12.3\",\n        sha256 = \"193898f59edcf43c26227dcd4c8427f00d99d61e95dcde58dabd49fa291d470e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/prost-types/0.12.3/download\"],\n        strip_prefix = \"prost-types-0.12.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.prost-types-0.12.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__quote-1.0.35\",\n        sha256 = \"291ec9ab5efd934aaf503a6466c5d5251535d108ee747472c3977cc5acc868ef\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/quote/1.0.35/download\"],\n        strip_prefix = \"quote-1.0.35\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.quote-1.0.35.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__r2d2-0.8.10\",\n        sha256 = \"51de85fb3fb6524929c8a2eb85e6b6d363de4e8c48f9e2c2eac4944abc181c93\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/r2d2/0.8.10/download\"],\n        strip_prefix = \"r2d2-0.8.10\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.r2d2-0.8.10.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rand-0.8.5\",\n        sha256 = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/rand/0.8.5/download\"],\n        strip_prefix = \"rand-0.8.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rand-0.8.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rand_chacha-0.3.1\",\n        sha256 = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/rand_chacha/0.3.1/download\"],\n        strip_prefix = \"rand_chacha-0.3.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rand_chacha-0.3.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rand_core-0.6.4\",\n        sha256 = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/rand_core/0.6.4/download\"],\n        strip_prefix = \"rand_core-0.6.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rand_core-0.6.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rand_pcg-0.3.1\",\n        sha256 = \"59cad018caf63deb318e5a4586d99a24424a364f40f1e5778c29aca23f4fc73e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/rand_pcg/0.3.1/download\"],\n        strip_prefix = \"rand_pcg-0.3.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rand_pcg-0.3.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rayon-1.9.0\",\n        sha256 = \"e4963ed1bc86e4f3ee217022bd855b297cef07fb9eac5dfa1f788b220b49b3bd\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/rayon/1.9.0/download\"],\n        strip_prefix = \"rayon-1.9.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rayon-1.9.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rayon-core-1.12.1\",\n        sha256 = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/rayon-core/1.12.1/download\"],\n        strip_prefix = \"rayon-core-1.12.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rayon-core-1.12.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rc2-0.8.1\",\n        sha256 = \"62c64daa8e9438b84aaae55010a93f396f8e60e3911590fcba770d04643fc1dd\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/rc2/0.8.1/download\"],\n        strip_prefix = \"rc2-0.8.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rc2-0.8.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__reactor-trait-1.1.0\",\n        sha256 = \"438a4293e4d097556730f4711998189416232f009c137389e0f961d2bc0ddc58\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/reactor-trait/1.1.0/download\"],\n        strip_prefix = \"reactor-trait-1.1.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.reactor-trait-1.1.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__redox_syscall-0.4.1\",\n        sha256 = \"4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/redox_syscall/0.4.1/download\"],\n        strip_prefix = \"redox_syscall-0.4.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.redox_syscall-0.4.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__ref_slice-1.2.1\",\n        sha256 = \"f4ed1d73fb92eba9b841ba2aef69533a060ccc0d3ec71c90aeda5996d4afb7a9\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/ref_slice/1.2.1/download\"],\n        strip_prefix = \"ref_slice-1.2.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.ref_slice-1.2.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__regex-1.10.3\",\n        sha256 = \"b62dbe01f0b06f9d8dc7d49e05a0785f153b00b2c227856282f671e0318c9b15\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/regex/1.10.3/download\"],\n        strip_prefix = \"regex-1.10.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.regex-1.10.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__regex-automata-0.4.5\",\n        sha256 = \"5bb987efffd3c6d0d8f5f89510bb458559eab11e4f869acb20bf845e016259cd\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/regex-automata/0.4.5/download\"],\n        strip_prefix = \"regex-automata-0.4.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.regex-automata-0.4.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__regex-lite-0.1.5\",\n        sha256 = \"30b661b2f27137bdbc16f00eda72866a92bb28af1753ffbd56744fb6e2e9cd8e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/regex-lite/0.1.5/download\"],\n        strip_prefix = \"regex-lite-0.1.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.regex-lite-0.1.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__regex-syntax-0.8.2\",\n        sha256 = \"c08c74e62047bb2de4ff487b251e4a92e24f48745648451635cec7d591162d9f\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/regex-syntax/0.8.2/download\"],\n        strip_prefix = \"regex-syntax-0.8.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.regex-syntax-0.8.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__reqwest-0.11.24\",\n        sha256 = \"c6920094eb85afde5e4a138be3f2de8bbdf28000f0029e72c45025a56b042251\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/reqwest/0.11.24/download\"],\n        strip_prefix = \"reqwest-0.11.24\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.reqwest-0.11.24.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__ring-0.17.8\",\n        sha256 = \"c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/ring/0.17.8/download\"],\n        strip_prefix = \"ring-0.17.8\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.ring-0.17.8.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rust-argon2-2.1.0\",\n        sha256 = \"9d9848531d60c9cbbcf9d166c885316c24bc0e2a9d3eba0956bb6cbbd79bc6e8\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/rust-argon2/2.1.0/download\"],\n        strip_prefix = \"rust-argon2-2.1.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rust-argon2-2.1.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rustc-demangle-0.1.23\",\n        sha256 = \"d626bb9dae77e28219937af045c257c28bfd3f69333c512553507f5f9798cb76\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/rustc-demangle/0.1.23/download\"],\n        strip_prefix = \"rustc-demangle-0.1.23\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rustc-demangle-0.1.23.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rustix-0.37.27\",\n        sha256 = \"fea8ca367a3a01fe35e6943c400addf443c0f57670e6ec51196f71a4b8762dd2\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/rustix/0.37.27/download\"],\n        strip_prefix = \"rustix-0.37.27\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rustix-0.37.27.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rustix-0.38.31\",\n        sha256 = \"6ea3e1a662af26cd7a3ba09c0297a31af215563ecf42817c98df621387f4e949\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/rustix/0.38.31/download\"],\n        strip_prefix = \"rustix-0.38.31\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rustix-0.38.31.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rustls-0.21.10\",\n        sha256 = \"f9d5a6813c0759e4609cd494e8e725babae6a2ca7b62a5536a13daaec6fcb7ba\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/rustls/0.21.10/download\"],\n        strip_prefix = \"rustls-0.21.10\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rustls-0.21.10.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rustls-connector-0.18.5\",\n        sha256 = \"25da151615461c7347114b1ad1a7458b4cdebc69cb220cd140cd5cb324b1dd37\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/rustls-connector/0.18.5/download\"],\n        strip_prefix = \"rustls-connector-0.18.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rustls-connector-0.18.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rustls-native-certs-0.6.3\",\n        sha256 = \"a9aace74cb666635c918e9c12bc0d348266037aa8eb599b5cba565709a8dff00\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/rustls-native-certs/0.6.3/download\"],\n        strip_prefix = \"rustls-native-certs-0.6.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rustls-native-certs-0.6.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rustls-pemfile-1.0.4\",\n        sha256 = \"1c74cae0a4cf6ccbbf5f359f08efdf8ee7e1dc532573bf0db71968cb56b1448c\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/rustls-pemfile/1.0.4/download\"],\n        strip_prefix = \"rustls-pemfile-1.0.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rustls-pemfile-1.0.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rustls-webpki-0.101.7\",\n        sha256 = \"8b6275d1ee7a1cd780b64aca7726599a1dbc893b1e64144529e55c3c2f745765\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/rustls-webpki/0.101.7/download\"],\n        strip_prefix = \"rustls-webpki-0.101.7\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rustls-webpki-0.101.7.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__rustversion-1.0.14\",\n        sha256 = \"7ffc183a10b4478d04cbbbfc96d0873219d962dd5accaff2ffbd4ceb7df837f4\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/rustversion/1.0.14/download\"],\n        strip_prefix = \"rustversion-1.0.14\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.rustversion-1.0.14.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__ryu-1.0.17\",\n        sha256 = \"e86697c916019a8588c99b5fac3cead74ec0b4b819707a682fd4d23fa0ce1ba1\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/ryu/1.0.17/download\"],\n        strip_prefix = \"ryu-1.0.17\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.ryu-1.0.17.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__same-file-1.0.6\",\n        sha256 = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/same-file/1.0.6/download\"],\n        strip_prefix = \"same-file-1.0.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.same-file-1.0.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__schannel-0.1.23\",\n        sha256 = \"fbc91545643bcf3a0bbb6569265615222618bdf33ce4ffbbd13c4bbd4c093534\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/schannel/0.1.23/download\"],\n        strip_prefix = \"schannel-0.1.23\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.schannel-0.1.23.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__scheduled-thread-pool-0.2.7\",\n        sha256 = \"3cbc66816425a074528352f5789333ecff06ca41b36b0b0efdfbb29edc391a19\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/scheduled-thread-pool/0.2.7/download\"],\n        strip_prefix = \"scheduled-thread-pool-0.2.7\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.scheduled-thread-pool-0.2.7.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__scoped-tls-1.0.1\",\n        sha256 = \"e1cf6437eb19a8f4a6cc0f7dca544973b0b78843adbfeb3683d1a94a0024a294\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/scoped-tls/1.0.1/download\"],\n        strip_prefix = \"scoped-tls-1.0.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.scoped-tls-1.0.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__scopeguard-1.2.0\",\n        sha256 = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/scopeguard/1.2.0/download\"],\n        strip_prefix = \"scopeguard-1.2.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.scopeguard-1.2.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__sct-0.7.1\",\n        sha256 = \"da046153aa2352493d6cb7da4b6e5c0c057d8a1d0a9aa8560baffdd945acd414\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/sct/0.7.1/download\"],\n        strip_prefix = \"sct-0.7.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.sct-0.7.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__scylla-0.12.0\",\n        sha256 = \"03d2db76aa23f55d2ece5354e1a3778633098a3d1ea76153f494d71e92cd02d8\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/scylla/0.12.0/download\"],\n        strip_prefix = \"scylla-0.12.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.scylla-0.12.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__scylla-cql-0.1.0\",\n        sha256 = \"345626c0dd5d9624c413daaba854685bba6a65cff4eb5ea0fb0366df16901f67\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/scylla-cql/0.1.0/download\"],\n        strip_prefix = \"scylla-cql-0.1.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.scylla-cql-0.1.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__scylla-macros-0.4.0\",\n        sha256 = \"eb6085ff9c3fd7e5163826901d39164ab86f11bdca16b2f766a00c528ff9cef9\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/scylla-macros/0.4.0/download\"],\n        strip_prefix = \"scylla-macros-0.4.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.scylla-macros-0.4.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__security-framework-2.9.2\",\n        sha256 = \"05b64fb303737d99b81884b2c63433e9ae28abebe5eb5045dcdd175dc2ecf4de\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/security-framework/2.9.2/download\"],\n        strip_prefix = \"security-framework-2.9.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.security-framework-2.9.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__security-framework-sys-2.9.1\",\n        sha256 = \"e932934257d3b408ed8f30db49d85ea163bfe74961f017f405b025af298f0c7a\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/security-framework-sys/2.9.1/download\"],\n        strip_prefix = \"security-framework-sys-2.9.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.security-framework-sys-2.9.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__serde-1.0.197\",\n        sha256 = \"3fb1c873e1b9b056a4dc4c0c198b24c3ffa059243875552b2bd0933b1aee4ce2\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/serde/1.0.197/download\"],\n        strip_prefix = \"serde-1.0.197\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.serde-1.0.197.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__serde_derive-1.0.197\",\n        sha256 = \"7eb0b34b42edc17f6b7cac84a52a1c5f0e1bb2227e997ca9011ea3dd34e8610b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/serde_derive/1.0.197/download\"],\n        strip_prefix = \"serde_derive-1.0.197\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.serde_derive-1.0.197.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__serde_json-1.0.114\",\n        sha256 = \"c5f09b1bd632ef549eaa9f60a1f8de742bdbc698e6cee2095fc84dde5f549ae0\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/serde_json/1.0.114/download\"],\n        strip_prefix = \"serde_json-1.0.114\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.serde_json-1.0.114.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__serde_urlencoded-0.7.1\",\n        sha256 = \"d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/serde_urlencoded/0.7.1/download\"],\n        strip_prefix = \"serde_urlencoded-0.7.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.serde_urlencoded-0.7.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__serde_yaml-0.9.32\",\n        sha256 = \"8fd075d994154d4a774f95b51fb96bdc2832b0ea48425c92546073816cda1f2f\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/serde_yaml/0.9.32/download\"],\n        strip_prefix = \"serde_yaml-0.9.32\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.serde_yaml-0.9.32.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__sha1-0.10.6\",\n        sha256 = \"e3bf829a2d51ab4a5ddf1352d8470c140cadc8301b2ae1789db023f01cedd6ba\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/sha1/0.10.6/download\"],\n        strip_prefix = \"sha1-0.10.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.sha1-0.10.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__sha2-0.10.8\",\n        sha256 = \"793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/sha2/0.10.8/download\"],\n        strip_prefix = \"sha2-0.10.8\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.sha2-0.10.8.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__simd-adler32-0.3.7\",\n        sha256 = \"d66dc143e6b11c1eddc06d5c423cfc97062865baf299914ab64caa38182078fe\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/simd-adler32/0.3.7/download\"],\n        strip_prefix = \"simd-adler32-0.3.7\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.simd-adler32-0.3.7.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__simple_asn1-0.6.2\",\n        sha256 = \"adc4e5204eb1910f40f9cfa375f6f05b68c3abac4b6fd879c8ff5e7ae8a0a085\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/simple_asn1/0.6.2/download\"],\n        strip_prefix = \"simple_asn1-0.6.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.simple_asn1-0.6.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__siphasher-0.3.11\",\n        sha256 = \"38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/siphasher/0.3.11/download\"],\n        strip_prefix = \"siphasher-0.3.11\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.siphasher-0.3.11.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__slab-0.4.9\",\n        sha256 = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/slab/0.4.9/download\"],\n        strip_prefix = \"slab-0.4.9\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.slab-0.4.9.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__smallvec-1.13.1\",\n        sha256 = \"e6ecd384b10a64542d77071bd64bd7b231f4ed5940fba55e98c3de13824cf3d7\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/smallvec/1.13.1/download\"],\n        strip_prefix = \"smallvec-1.13.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.smallvec-1.13.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__snap-1.1.1\",\n        sha256 = \"1b6b67fb9a61334225b5b790716f609cd58395f895b3fe8b328786812a40bc3b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/snap/1.1.1/download\"],\n        strip_prefix = \"snap-1.1.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.snap-1.1.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__socket2-0.4.10\",\n        sha256 = \"9f7916fc008ca5542385b89a3d3ce689953c143e9304a9bf8beec1de48994c0d\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/socket2/0.4.10/download\"],\n        strip_prefix = \"socket2-0.4.10\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.socket2-0.4.10.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__socket2-0.5.6\",\n        sha256 = \"05ffd9c0a93b7543e062e759284fcf5f5e3b098501104bfbdde4d404db792871\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/socket2/0.5.6/download\"],\n        strip_prefix = \"socket2-0.5.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.socket2-0.5.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__spin-0.9.8\",\n        sha256 = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/spin/0.9.8/download\"],\n        strip_prefix = \"spin-0.9.8\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.spin-0.9.8.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__static_assertions-1.1.0\",\n        sha256 = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/static_assertions/1.1.0/download\"],\n        strip_prefix = \"static_assertions-1.1.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.static_assertions-1.1.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__strsim-0.10.0\",\n        sha256 = \"73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/strsim/0.10.0/download\"],\n        strip_prefix = \"strsim-0.10.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.strsim-0.10.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__strum-0.23.0\",\n        sha256 = \"cae14b91c7d11c9a851d3fbc80a963198998c2a64eec840477fa92d8ce9b70bb\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/strum/0.23.0/download\"],\n        strip_prefix = \"strum-0.23.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.strum-0.23.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__strum_macros-0.23.1\",\n        sha256 = \"5bb0dc7ee9c15cea6199cde9a127fa16a4c5819af85395457ad72d68edc85a38\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/strum_macros/0.23.1/download\"],\n        strip_prefix = \"strum_macros-0.23.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.strum_macros-0.23.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__subtle-2.5.0\",\n        sha256 = \"81cdd64d312baedb58e21336b31bc043b77e01cc99033ce76ef539f78e965ebc\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/subtle/2.5.0/download\"],\n        strip_prefix = \"subtle-2.5.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.subtle-2.5.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__syn-1.0.109\",\n        sha256 = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/syn/1.0.109/download\"],\n        strip_prefix = \"syn-1.0.109\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.syn-1.0.109.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__syn-2.0.52\",\n        sha256 = \"b699d15b36d1f02c3e7c69f8ffef53de37aefae075d8488d4ba1a7788d574a07\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/syn/2.0.52/download\"],\n        strip_prefix = \"syn-2.0.52\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.syn-2.0.52.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__sync_wrapper-0.1.2\",\n        sha256 = \"2047c6ded9c721764247e62cd3b03c09ffc529b2ba5b10ec482ae507a4a70160\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/sync_wrapper/0.1.2/download\"],\n        strip_prefix = \"sync_wrapper-0.1.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.sync_wrapper-0.1.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__system-configuration-0.5.1\",\n        sha256 = \"ba3a3adc5c275d719af8cb4272ea1c4a6d668a777f37e115f6d11ddbc1c8e0e7\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/system-configuration/0.5.1/download\"],\n        strip_prefix = \"system-configuration-0.5.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.system-configuration-0.5.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__system-configuration-sys-0.5.0\",\n        sha256 = \"a75fb188eb626b924683e3b95e3a48e63551fcfb51949de2f06a9d91dbee93c9\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/system-configuration-sys/0.5.0/download\"],\n        strip_prefix = \"system-configuration-sys-0.5.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.system-configuration-sys-0.5.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tcp-stream-0.26.1\",\n        sha256 = \"4da30af7998f51ee1aa48ab24276fe303a697b004e31ff542b192c088d5630a5\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tcp-stream/0.26.1/download\"],\n        strip_prefix = \"tcp-stream-0.26.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tcp-stream-0.26.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tempfile-3.10.1\",\n        sha256 = \"85b77fafb263dd9d05cbeac119526425676db3784113aa9295c88498cbf8bff1\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tempfile/3.10.1/download\"],\n        strip_prefix = \"tempfile-3.10.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tempfile-3.10.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__thiserror-1.0.57\",\n        sha256 = \"1e45bcbe8ed29775f228095caf2cd67af7a4ccf756ebff23a306bf3e8b47b24b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/thiserror/1.0.57/download\"],\n        strip_prefix = \"thiserror-1.0.57\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.thiserror-1.0.57.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__thiserror-impl-1.0.57\",\n        sha256 = \"a953cb265bef375dae3de6663da4d3804eee9682ea80d8e2542529b73c531c81\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/thiserror-impl/1.0.57/download\"],\n        strip_prefix = \"thiserror-impl-1.0.57\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.thiserror-impl-1.0.57.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__time-0.3.34\",\n        sha256 = \"c8248b6521bb14bc45b4067159b9b6ad792e2d6d754d6c41fb50e29fefe38749\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/time/0.3.34/download\"],\n        strip_prefix = \"time-0.3.34\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.time-0.3.34.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__time-core-0.1.2\",\n        sha256 = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/time-core/0.1.2/download\"],\n        strip_prefix = \"time-core-0.1.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.time-core-0.1.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__time-macros-0.2.17\",\n        sha256 = \"7ba3a3ef41e6672a2f0f001392bb5dcd3ff0a9992d618ca761a11c3121547774\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/time-macros/0.2.17/download\"],\n        strip_prefix = \"time-macros-0.2.17\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.time-macros-0.2.17.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tinytemplate-1.2.1\",\n        sha256 = \"be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tinytemplate/1.2.1/download\"],\n        strip_prefix = \"tinytemplate-1.2.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tinytemplate-1.2.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tinyvec-1.6.0\",\n        sha256 = \"87cc5ceb3875bb20c2890005a4e226a4651264a5c75edb2421b52861a0a0cb50\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tinyvec/1.6.0/download\"],\n        strip_prefix = \"tinyvec-1.6.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tinyvec-1.6.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tinyvec_macros-0.1.1\",\n        sha256 = \"1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tinyvec_macros/0.1.1/download\"],\n        strip_prefix = \"tinyvec_macros-0.1.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tinyvec_macros-0.1.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tokio-1.36.0\",\n        sha256 = \"61285f6515fa018fb2d1e46eb21223fff441ee8db5d0f1435e8ab4f5cdb80931\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tokio/1.36.0/download\"],\n        strip_prefix = \"tokio-1.36.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tokio-1.36.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tokio-io-timeout-1.2.0\",\n        sha256 = \"30b74022ada614a1b4834de765f9bb43877f910cc8ce4be40e89042c9223a8bf\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tokio-io-timeout/1.2.0/download\"],\n        strip_prefix = \"tokio-io-timeout-1.2.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tokio-io-timeout-1.2.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tokio-macros-2.2.0\",\n        sha256 = \"5b8a1e28f2deaa14e508979454cb3a223b10b938b45af148bc0986de36f1923b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tokio-macros/2.2.0/download\"],\n        strip_prefix = \"tokio-macros-2.2.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tokio-macros-2.2.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tokio-native-tls-0.3.1\",\n        sha256 = \"bbae76ab933c85776efabc971569dd6119c580d8f5d448769dec1764bf796ef2\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tokio-native-tls/0.3.1/download\"],\n        strip_prefix = \"tokio-native-tls-0.3.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tokio-native-tls-0.3.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tokio-stream-0.1.14\",\n        sha256 = \"397c988d37662c7dda6d2208364a706264bf3d6138b11d436cbac0ad38832842\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tokio-stream/0.1.14/download\"],\n        strip_prefix = \"tokio-stream-0.1.14\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tokio-stream-0.1.14.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tokio-util-0.7.10\",\n        sha256 = \"5419f34732d9eb6ee4c3578b7989078579b7f039cbbb9ca2c4da015749371e15\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tokio-util/0.7.10/download\"],\n        strip_prefix = \"tokio-util-0.7.10\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tokio-util-0.7.10.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__toml_datetime-0.6.5\",\n        sha256 = \"3550f4e9685620ac18a50ed434eb3aec30db8ba93b0287467bca5826ea25baf1\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/toml_datetime/0.6.5/download\"],\n        strip_prefix = \"toml_datetime-0.6.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.toml_datetime-0.6.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__toml_edit-0.19.15\",\n        sha256 = \"1b5bb770da30e5cbfde35a2d7b9b8a2c4b8ef89548a7a6aeab5c9a576e3e7421\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/toml_edit/0.19.15/download\"],\n        strip_prefix = \"toml_edit-0.19.15\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.toml_edit-0.19.15.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tonic-0.11.0\",\n        sha256 = \"76c4eb7a4e9ef9d4763600161f12f5070b92a578e1b634db88a6887844c91a13\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tonic/0.11.0/download\"],\n        strip_prefix = \"tonic-0.11.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tonic-0.11.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tonic-build-0.11.0\",\n        sha256 = \"be4ef6dd70a610078cb4e338a0f79d06bc759ff1b22d2120c2ff02ae264ba9c2\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tonic-build/0.11.0/download\"],\n        strip_prefix = \"tonic-build-0.11.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tonic-build-0.11.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__totp-lite-2.0.1\",\n        sha256 = \"f8e43134db17199f7f721803383ac5854edd0d3d523cc34dba321d6acfbe76c3\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/totp-lite/2.0.1/download\"],\n        strip_prefix = \"totp-lite-2.0.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.totp-lite-2.0.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tower-0.4.13\",\n        sha256 = \"b8fa9be0de6cf49e536ce1851f987bd21a43b771b09473c3549a6c853db37c1c\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tower/0.4.13/download\"],\n        strip_prefix = \"tower-0.4.13\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tower-0.4.13.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tower-layer-0.3.2\",\n        sha256 = \"c20c8dbed6283a09604c3e69b4b7eeb54e298b8a600d4d5ecb5ad39de609f1d0\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tower-layer/0.3.2/download\"],\n        strip_prefix = \"tower-layer-0.3.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tower-layer-0.3.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tower-service-0.3.2\",\n        sha256 = \"b6bc1c9ce2b5135ac7f93c72918fc37feb872bdc6a5533a8b85eb4b86bfdae52\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tower-service/0.3.2/download\"],\n        strip_prefix = \"tower-service-0.3.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tower-service-0.3.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tracing-0.1.40\",\n        sha256 = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tracing/0.1.40/download\"],\n        strip_prefix = \"tracing-0.1.40\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tracing-0.1.40.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tracing-attributes-0.1.27\",\n        sha256 = \"34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tracing-attributes/0.1.27/download\"],\n        strip_prefix = \"tracing-attributes-0.1.27\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tracing-attributes-0.1.27.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__tracing-core-0.1.32\",\n        sha256 = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/tracing-core/0.1.32/download\"],\n        strip_prefix = \"tracing-core-0.1.32\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.tracing-core-0.1.32.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__try-lock-0.2.5\",\n        sha256 = \"e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/try-lock/0.2.5/download\"],\n        strip_prefix = \"try-lock-0.2.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.try-lock-0.2.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__twox-hash-1.6.3\",\n        sha256 = \"97fee6b57c6a41524a810daee9286c02d7752c4253064d0b05472833a438f675\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/twox-hash/1.6.3/download\"],\n        strip_prefix = \"twox-hash-1.6.3\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.twox-hash-1.6.3.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__typenum-1.17.0\",\n        sha256 = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/typenum/1.17.0/download\"],\n        strip_prefix = \"typenum-1.17.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.typenum-1.17.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__unicase-2.7.0\",\n        sha256 = \"f7d2d4dafb69621809a81864c9c1b864479e1235c0dd4e199924b9742439ed89\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/unicase/2.7.0/download\"],\n        strip_prefix = \"unicase-2.7.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.unicase-2.7.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__unicode-bidi-0.3.15\",\n        sha256 = \"08f95100a766bf4f8f28f90d77e0a5461bbdb219042e7679bebe79004fed8d75\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/unicode-bidi/0.3.15/download\"],\n        strip_prefix = \"unicode-bidi-0.3.15\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.unicode-bidi-0.3.15.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__unicode-ident-1.0.12\",\n        sha256 = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/unicode-ident/1.0.12/download\"],\n        strip_prefix = \"unicode-ident-1.0.12\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.unicode-ident-1.0.12.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__unicode-normalization-0.1.23\",\n        sha256 = \"a56d1686db2308d901306f92a263857ef59ea39678a5458e7cb17f01415101f5\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/unicode-normalization/0.1.23/download\"],\n        strip_prefix = \"unicode-normalization-0.1.23\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.unicode-normalization-0.1.23.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__unicode-segmentation-1.11.0\",\n        sha256 = \"d4c87d22b6e3f4a18d4d40ef354e97c90fcb14dd91d7dc0aa9d8a1172ebf7202\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/unicode-segmentation/1.11.0/download\"],\n        strip_prefix = \"unicode-segmentation-1.11.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.unicode-segmentation-1.11.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__unsafe-libyaml-0.2.10\",\n        sha256 = \"ab4c90930b95a82d00dc9e9ac071b4991924390d46cbd0dfe566148667605e4b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/unsafe-libyaml/0.2.10/download\"],\n        strip_prefix = \"unsafe-libyaml-0.2.10\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.unsafe-libyaml-0.2.10.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__untrusted-0.9.0\",\n        sha256 = \"8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/untrusted/0.9.0/download\"],\n        strip_prefix = \"untrusted-0.9.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.untrusted-0.9.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__url-2.5.0\",\n        sha256 = \"31e6302e3bb753d46e83516cae55ae196fc0c309407cf11ab35cc51a4c2a4633\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/url/2.5.0/download\"],\n        strip_prefix = \"url-2.5.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.url-2.5.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__uuid-1.7.0\",\n        sha256 = \"f00cc9702ca12d3c81455259621e676d0f7251cec66a21e98fe2e9a37db93b2a\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/uuid/1.7.0/download\"],\n        strip_prefix = \"uuid-1.7.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.uuid-1.7.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__vcpkg-0.2.15\",\n        sha256 = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/vcpkg/0.2.15/download\"],\n        strip_prefix = \"vcpkg-0.2.15\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.vcpkg-0.2.15.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__version_check-0.9.4\",\n        sha256 = \"49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/version_check/0.9.4/download\"],\n        strip_prefix = \"version_check-0.9.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.version_check-0.9.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__waker-fn-1.1.1\",\n        sha256 = \"f3c4517f54858c779bbcbf228f4fca63d121bf85fbecb2dc578cdf4a39395690\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/waker-fn/1.1.1/download\"],\n        strip_prefix = \"waker-fn-1.1.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.waker-fn-1.1.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__walkdir-2.5.0\",\n        sha256 = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/walkdir/2.5.0/download\"],\n        strip_prefix = \"walkdir-2.5.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.walkdir-2.5.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__want-0.3.1\",\n        sha256 = \"bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/want/0.3.1/download\"],\n        strip_prefix = \"want-0.3.1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.want-0.3.1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__warp-0.3.6\",\n        sha256 = \"c1e92e22e03ff1230c03a1a8ee37d2f89cd489e2e541b7550d6afad96faed169\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/warp/0.3.6/download\"],\n        strip_prefix = \"warp-0.3.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.warp-0.3.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__wasi-0.11.0-wasi-snapshot-preview1\",\n        sha256 = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/wasi/0.11.0+wasi-snapshot-preview1/download\"],\n        strip_prefix = \"wasi-0.11.0+wasi-snapshot-preview1\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.wasi-0.11.0+wasi-snapshot-preview1.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__wasm-bindgen-0.2.91\",\n        sha256 = \"c1e124130aee3fb58c5bdd6b639a0509486b0338acaaae0c84a5124b0f588b7f\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/wasm-bindgen/0.2.91/download\"],\n        strip_prefix = \"wasm-bindgen-0.2.91\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.wasm-bindgen-0.2.91.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__wasm-bindgen-backend-0.2.91\",\n        sha256 = \"c9e7e1900c352b609c8488ad12639a311045f40a35491fb69ba8c12f758af70b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/wasm-bindgen-backend/0.2.91/download\"],\n        strip_prefix = \"wasm-bindgen-backend-0.2.91\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.wasm-bindgen-backend-0.2.91.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__wasm-bindgen-futures-0.4.41\",\n        sha256 = \"877b9c3f61ceea0e56331985743b13f3d25c406a7098d45180fb5f09bc19ed97\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/wasm-bindgen-futures/0.4.41/download\"],\n        strip_prefix = \"wasm-bindgen-futures-0.4.41\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.wasm-bindgen-futures-0.4.41.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__wasm-bindgen-macro-0.2.91\",\n        sha256 = \"b30af9e2d358182b5c7449424f017eba305ed32a7010509ede96cdc4696c46ed\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/wasm-bindgen-macro/0.2.91/download\"],\n        strip_prefix = \"wasm-bindgen-macro-0.2.91\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.wasm-bindgen-macro-0.2.91.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__wasm-bindgen-macro-support-0.2.91\",\n        sha256 = \"642f325be6301eb8107a83d12a8ac6c1e1c54345a7ef1a9261962dfefda09e66\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/wasm-bindgen-macro-support/0.2.91/download\"],\n        strip_prefix = \"wasm-bindgen-macro-support-0.2.91\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.wasm-bindgen-macro-support-0.2.91.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__wasm-bindgen-shared-0.2.91\",\n        sha256 = \"4f186bd2dcf04330886ce82d6f33dd75a7bfcf69ecf5763b89fcde53b6ac9838\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/wasm-bindgen-shared/0.2.91/download\"],\n        strip_prefix = \"wasm-bindgen-shared-0.2.91\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.wasm-bindgen-shared-0.2.91.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__wasm-streams-0.4.0\",\n        sha256 = \"b65dc4c90b63b118468cf747d8bf3566c1913ef60be765b5730ead9e0a3ba129\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/wasm-streams/0.4.0/download\"],\n        strip_prefix = \"wasm-streams-0.4.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.wasm-streams-0.4.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__web-sys-0.3.68\",\n        sha256 = \"96565907687f7aceb35bc5fc03770a8a0471d82e479f25832f54a0e3f4b28446\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/web-sys/0.3.68/download\"],\n        strip_prefix = \"web-sys-0.3.68\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.web-sys-0.3.68.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__which-4.4.2\",\n        sha256 = \"87ba24419a2078cd2b0f2ede2691b6c66d8e47836da3b6db8265ebad47afbfc7\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/which/4.4.2/download\"],\n        strip_prefix = \"which-4.4.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.which-4.4.2.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__winapi-0.3.9\",\n        sha256 = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/winapi/0.3.9/download\"],\n        strip_prefix = \"winapi-0.3.9\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.winapi-0.3.9.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__winapi-i686-pc-windows-gnu-0.4.0\",\n        sha256 = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/winapi-i686-pc-windows-gnu/0.4.0/download\"],\n        strip_prefix = \"winapi-i686-pc-windows-gnu-0.4.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.winapi-i686-pc-windows-gnu-0.4.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__winapi-util-0.1.6\",\n        sha256 = \"f29e6f9198ba0d26b4c9f07dbe6f9ed633e1f3d5b8b414090084349e46a52596\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/winapi-util/0.1.6/download\"],\n        strip_prefix = \"winapi-util-0.1.6\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.winapi-util-0.1.6.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__winapi-x86_64-pc-windows-gnu-0.4.0\",\n        sha256 = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/winapi-x86_64-pc-windows-gnu/0.4.0/download\"],\n        strip_prefix = \"winapi-x86_64-pc-windows-gnu-0.4.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.winapi-x86_64-pc-windows-gnu-0.4.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows-core-0.52.0\",\n        sha256 = \"33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows-core/0.52.0/download\"],\n        strip_prefix = \"windows-core-0.52.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows-core-0.52.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows-sys-0.48.0\",\n        sha256 = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows-sys/0.48.0/download\"],\n        strip_prefix = \"windows-sys-0.48.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows-sys-0.48.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows-sys-0.52.0\",\n        sha256 = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows-sys/0.52.0/download\"],\n        strip_prefix = \"windows-sys-0.52.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows-sys-0.52.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows-targets-0.48.5\",\n        sha256 = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows-targets/0.48.5/download\"],\n        strip_prefix = \"windows-targets-0.48.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows-targets-0.48.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows-targets-0.52.4\",\n        sha256 = \"7dd37b7e5ab9018759f893a1952c9420d060016fc19a472b4bb20d1bdd694d1b\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows-targets/0.52.4/download\"],\n        strip_prefix = \"windows-targets-0.52.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows-targets-0.52.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_aarch64_gnullvm-0.48.5\",\n        sha256 = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows_aarch64_gnullvm/0.48.5/download\"],\n        strip_prefix = \"windows_aarch64_gnullvm-0.48.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_aarch64_gnullvm-0.48.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_aarch64_gnullvm-0.52.4\",\n        sha256 = \"bcf46cf4c365c6f2d1cc93ce535f2c8b244591df96ceee75d8e83deb70a9cac9\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows_aarch64_gnullvm/0.52.4/download\"],\n        strip_prefix = \"windows_aarch64_gnullvm-0.52.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_aarch64_gnullvm-0.52.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_aarch64_msvc-0.48.5\",\n        sha256 = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows_aarch64_msvc/0.48.5/download\"],\n        strip_prefix = \"windows_aarch64_msvc-0.48.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_aarch64_msvc-0.48.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_aarch64_msvc-0.52.4\",\n        sha256 = \"da9f259dd3bcf6990b55bffd094c4f7235817ba4ceebde8e6d11cd0c5633b675\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows_aarch64_msvc/0.52.4/download\"],\n        strip_prefix = \"windows_aarch64_msvc-0.52.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_aarch64_msvc-0.52.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_i686_gnu-0.48.5\",\n        sha256 = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows_i686_gnu/0.48.5/download\"],\n        strip_prefix = \"windows_i686_gnu-0.48.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_i686_gnu-0.48.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_i686_gnu-0.52.4\",\n        sha256 = \"b474d8268f99e0995f25b9f095bc7434632601028cf86590aea5c8a5cb7801d3\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows_i686_gnu/0.52.4/download\"],\n        strip_prefix = \"windows_i686_gnu-0.52.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_i686_gnu-0.52.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_i686_msvc-0.48.5\",\n        sha256 = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows_i686_msvc/0.48.5/download\"],\n        strip_prefix = \"windows_i686_msvc-0.48.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_i686_msvc-0.48.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_i686_msvc-0.52.4\",\n        sha256 = \"1515e9a29e5bed743cb4415a9ecf5dfca648ce85ee42e15873c3cd8610ff8e02\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows_i686_msvc/0.52.4/download\"],\n        strip_prefix = \"windows_i686_msvc-0.52.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_i686_msvc-0.52.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_x86_64_gnu-0.48.5\",\n        sha256 = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows_x86_64_gnu/0.48.5/download\"],\n        strip_prefix = \"windows_x86_64_gnu-0.48.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_x86_64_gnu-0.48.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_x86_64_gnu-0.52.4\",\n        sha256 = \"5eee091590e89cc02ad514ffe3ead9eb6b660aedca2183455434b93546371a03\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows_x86_64_gnu/0.52.4/download\"],\n        strip_prefix = \"windows_x86_64_gnu-0.52.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_x86_64_gnu-0.52.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_x86_64_gnullvm-0.48.5\",\n        sha256 = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows_x86_64_gnullvm/0.48.5/download\"],\n        strip_prefix = \"windows_x86_64_gnullvm-0.48.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_x86_64_gnullvm-0.48.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_x86_64_gnullvm-0.52.4\",\n        sha256 = \"77ca79f2451b49fa9e2af39f0747fe999fcda4f5e241b2898624dca97a1f2177\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows_x86_64_gnullvm/0.52.4/download\"],\n        strip_prefix = \"windows_x86_64_gnullvm-0.52.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_x86_64_gnullvm-0.52.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_x86_64_msvc-0.48.5\",\n        sha256 = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows_x86_64_msvc/0.48.5/download\"],\n        strip_prefix = \"windows_x86_64_msvc-0.48.5\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_x86_64_msvc-0.48.5.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__windows_x86_64_msvc-0.52.4\",\n        sha256 = \"32b752e52a2da0ddfbdbcc6fceadfeede4c939ed16d13e648833a61dfb611ed8\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/windows_x86_64_msvc/0.52.4/download\"],\n        strip_prefix = \"windows_x86_64_msvc-0.52.4\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.windows_x86_64_msvc-0.52.4.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__winnow-0.5.40\",\n        sha256 = \"f593a95398737aeed53e489c785df13f3618e41dbcd6718c6addbf1395aa6876\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/winnow/0.5.40/download\"],\n        strip_prefix = \"winnow-0.5.40\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.winnow-0.5.40.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__winreg-0.50.0\",\n        sha256 = \"524e57b2c537c0f9b1e69f1965311ec12182b4122e45035b1508cd24d2adadb1\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/winreg/0.50.0/download\"],\n        strip_prefix = \"winreg-0.50.0\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.winreg-0.50.0.bazel\"),\n    )\n\n    maybe(\n        http_archive,\n        name = \"crate_index__yasna-0.5.2\",\n        sha256 = \"e17bb3549cc1321ae1296b9cdc2698e2b6cb1992adfa19a8c72e5b7a738f44cd\",\n        type = \"tar.gz\",\n        urls = [\"https://crates.io/api/v1/crates/yasna/0.5.2/download\"],\n        strip_prefix = \"yasna-0.5.2\",\n        build_file = Label(\"@crate_index//crate_index:BUILD.yasna-0.5.2.bazel\"),\n    )\n\n    return [\n       struct(repo=\"crate_index__aes-0.8.4\", is_dev_dep = False),\n       struct(repo=\"crate_index__anyhow-1.0.80\", is_dev_dep = False),\n       struct(repo=\"crate_index__chrono-0.4.34\", is_dev_dep = False),\n       struct(repo=\"crate_index__cloudinary-0.4.0\", is_dev_dep = False),\n       struct(repo=\"crate_index__fast_image_resize-3.0.4\", is_dev_dep = False),\n       struct(repo=\"crate_index__fern-0.6.2\", is_dev_dep = False),\n       struct(repo=\"crate_index__fpe-0.6.1\", is_dev_dep = False),\n       struct(repo=\"crate_index__futures-executor-0.3.30\", is_dev_dep = False),\n       struct(repo=\"crate_index__hex-0.4.3\", is_dev_dep = False),\n       struct(repo=\"crate_index__image-0.24.9\", is_dev_dep = False),\n       struct(repo=\"crate_index__isolang-2.4.0\", is_dev_dep = False),\n       struct(repo=\"crate_index__jsonwebtoken-9.2.0\", is_dev_dep = False),\n       struct(repo=\"crate_index__kafka-0.10.0\", is_dev_dep = False),\n       struct(repo=\"crate_index__lapin-2.3.1\", is_dev_dep = False),\n       struct(repo=\"crate_index__lazy_static-1.4.0\", is_dev_dep = False),\n       struct(repo=\"crate_index__log-0.4.21\", is_dev_dep = False),\n       struct(repo=\"crate_index__memcache-0.17.2\", is_dev_dep = False),\n       struct(repo=\"crate_index__prost-0.12.3\", is_dev_dep = False),\n       struct(repo=\"crate_index__prost-types-0.12.3\", is_dev_dep = False),\n       struct(repo=\"crate_index__r2d2-0.8.10\", is_dev_dep = False),\n       struct(repo=\"crate_index__regex-lite-0.1.5\", is_dev_dep = False),\n       struct(repo=\"crate_index__reqwest-0.11.24\", is_dev_dep = False),\n       struct(repo=\"crate_index__ring-0.17.8\", is_dev_dep = False),\n       struct(repo=\"crate_index__rust-argon2-2.1.0\", is_dev_dep = False),\n       struct(repo=\"crate_index__scylla-0.12.0\", is_dev_dep = False),\n       struct(repo=\"crate_index__serde-1.0.197\", is_dev_dep = False),\n       struct(repo=\"crate_index__serde_json-1.0.114\", is_dev_dep = False),\n       struct(repo=\"crate_index__serde_yaml-0.9.32\", is_dev_dep = False),\n       struct(repo=\"crate_index__tempfile-3.10.1\", is_dev_dep = False),\n       struct(repo=\"crate_index__tokio-1.36.0\", is_dev_dep = False),\n       struct(repo=\"crate_index__tonic-0.11.0\", is_dev_dep = False),\n       struct(repo=\"crate_index__tonic-build-0.11.0\", is_dev_dep = False),\n       struct(repo=\"crate_index__totp-lite-2.0.1\", is_dev_dep = False),\n       struct(repo=\"crate_index__url-2.5.0\", is_dev_dep = False),\n       struct(repo=\"crate_index__uuid-1.7.0\", is_dev_dep = False),\n       struct(repo=\"crate_index__warp-0.3.6\", is_dev_dep = False),\n         struct(repo = \"crate_index__criterion-0.5.1\", is_dev_dep = True),\n    ]\n"
              }
            }
          },
          "crate_index__rustversion-1.0.14": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__rustversion-1.0.14",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7ffc183a10b4478d04cbbbfc96d0873219d962dd5accaff2ffbd4ceb7df837f4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustversion/1.0.14/download"
              ],
              "strip_prefix": "rustversion-1.0.14",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"rustversion\",\n    deps = [\n        \"@crate_index__rustversion-1.0.14//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rustversion\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.14\",\n)\n\ncargo_build_script(\n    name = \"rustversion_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build/build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rustversion\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.0.14\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":rustversion_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__serde_yaml-0.9.32": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__serde_yaml-0.9.32",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8fd075d994154d4a774f95b51fb96bdc2832b0ea48425c92546073816cda1f2f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/serde_yaml/0.9.32/download"
              ],
              "strip_prefix": "serde_yaml-0.9.32",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"serde_yaml\",\n    deps = [\n        \"@crate_index__indexmap-2.2.5//:indexmap\",\n        \"@crate_index__itoa-1.0.10//:itoa\",\n        \"@crate_index__ryu-1.0.17//:ryu\",\n        \"@crate_index__serde-1.0.197//:serde\",\n        \"@crate_index__unsafe-libyaml-0.2.10//:unsafe_libyaml\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=serde_yaml\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.9.32\",\n)\n"
            }
          },
          "crate_index__crossbeam-epoch-0.9.18": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__crossbeam-epoch-0.9.18",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crossbeam-epoch/0.9.18/download"
              ],
              "strip_prefix": "crossbeam-epoch-0.9.18",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"crossbeam_epoch\",\n    deps = [\n        \"@crate_index__crossbeam-utils-0.8.19//:crossbeam_utils\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=crossbeam-epoch\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.9.18\",\n)\n"
            }
          },
          "crate_index__proc-macro-crate-1.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__proc-macro-crate-1.3.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7f4c021e1093a56626774e81216a4ce732a735e5bad4868a03f3ed65ca0c3919",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/proc-macro-crate/1.3.1/download"
              ],
              "strip_prefix": "proc-macro-crate-1.3.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"proc_macro_crate\",\n    deps = [\n        \"@crate_index__once_cell-1.19.0//:once_cell\",\n        \"@crate_index__toml_edit-0.19.15//:toml_edit\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=proc-macro-crate\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.3.1\",\n)\n"
            }
          },
          "crate_index__petgraph-0.6.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__petgraph-0.6.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e1d3afd2628e69da2be385eb6f2fd57c8ac7977ceeff6dc166ff1657b0e386a9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/petgraph/0.6.4/download"
              ],
              "strip_prefix": "petgraph-0.6.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"petgraph\",\n    deps = [\n        \"@crate_index__fixedbitset-0.4.2//:fixedbitset\",\n        \"@crate_index__indexmap-2.2.5//:indexmap\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=petgraph\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.6.4\",\n)\n"
            }
          },
          "crate_index__async-channel-2.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__async-channel-2.2.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f28243a43d821d11341ab73c80bed182dc015c514b951616cf79bd4af39af0c3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/async-channel/2.2.0/download"
              ],
              "strip_prefix": "async-channel-2.2.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"async_channel\",\n    deps = [\n        \"@crate_index__concurrent-queue-2.4.0//:concurrent_queue\",\n        \"@crate_index__event-listener-5.2.0//:event_listener\",\n        \"@crate_index__event-listener-strategy-0.5.0//:event_listener_strategy\",\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=async-channel\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.2.0\",\n)\n"
            }
          },
          "crate_index__fixedbitset-0.4.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__fixedbitset-0.4.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "0ce7134b9999ecaf8bcd65542e436736ef32ddca1b3e06094cb6ec5755203b80",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/fixedbitset/0.4.2/download"
              ],
              "strip_prefix": "fixedbitset-0.4.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"fixedbitset\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=fixedbitset\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.2\",\n)\n"
            }
          },
          "crate_index__clap_builder-4.5.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__clap_builder-4.5.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9f3e7391dad68afb0c2ede1bf619f579a3dc9c2ec67f089baa397123a2f3d1eb",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/clap_builder/4.5.1/download"
              ],
              "strip_prefix": "clap_builder-4.5.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"clap_builder\",\n    deps = [\n        \"@crate_index__anstyle-1.0.6//:anstyle\",\n        \"@crate_index__clap_lex-0.7.0//:clap_lex\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=clap_builder\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"4.5.1\",\n)\n"
            }
          },
          "crate_index__dashmap-5.5.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__dashmap-5.5.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "978747c1d849a7d2ee5e8adc0159961c48fb7e5db2f06af6723b80123bb53856",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/dashmap/5.5.3/download"
              ],
              "strip_prefix": "dashmap-5.5.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"dashmap\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__hashbrown-0.14.3//:hashbrown\",\n        \"@crate_index__lock_api-0.4.11//:lock_api\",\n        \"@crate_index__once_cell-1.19.0//:once_cell\",\n        \"@crate_index__parking_lot_core-0.9.9//:parking_lot_core\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=dashmap\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"5.5.3\",\n)\n"
            }
          },
          "crate_index__async-stream-0.3.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__async-stream-0.3.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "cd56dd203fef61ac097dd65721a419ddccb106b2d2b70ba60a6b529f03961a51",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/async-stream/0.3.5/download"
              ],
              "strip_prefix": "async-stream-0.3.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"async_stream\",\n    deps = [\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__async-stream-impl-0.3.5//:async_stream_impl\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=async-stream\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.5\",\n)\n"
            }
          },
          "crate_index__fastrand-2.0.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__fastrand-2.0.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "25cbce373ec4653f1a01a31e8a5e5ec0c622dc27ff9c4e6606eefef5cbbed4a5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/fastrand/2.0.1/download"
              ],
              "strip_prefix": "fastrand-2.0.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"fastrand\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=fastrand\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.0.1\",\n)\n"
            }
          },
          "crate_index__wasm-bindgen-macro-support-0.2.91": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__wasm-bindgen-macro-support-0.2.91",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "642f325be6301eb8107a83d12a8ac6c1e1c54345a7ef1a9261962dfefda09e66",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-macro-support/0.2.91/download"
              ],
              "strip_prefix": "wasm-bindgen-macro-support-0.2.91",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"wasm_bindgen_macro_support\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.52//:syn\",\n        \"@crate_index__wasm-bindgen-backend-0.2.91//:wasm_bindgen_backend\",\n        \"@crate_index__wasm-bindgen-shared-0.2.91//:wasm_bindgen_shared\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"spans\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=wasm-bindgen-macro-support\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.91\",\n)\n"
            }
          },
          "crate_index__async-stream-impl-0.3.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__async-stream-impl-0.3.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "16e62a023e7c117e27523144c5d2459f4397fcc3cab0085af8e2224f643a0193",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/async-stream-impl/0.3.5/download"
              ],
              "strip_prefix": "async-stream-impl-0.3.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"async_stream_impl\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.52//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=async-stream-impl\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.5\",\n)\n"
            }
          },
          "crate_index__blake2b_simd-1.0.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__blake2b_simd-1.0.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "23285ad32269793932e830392f2fe2f83e26488fd3ec778883a93c8323735780",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/blake2b_simd/1.0.2/download"
              ],
              "strip_prefix": "blake2b_simd-1.0.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"blake2b_simd\",\n    deps = [\n        \"@crate_index__arrayref-0.3.7//:arrayref\",\n        \"@crate_index__arrayvec-0.7.4//:arrayvec\",\n        \"@crate_index__constant_time_eq-0.3.0//:constant_time_eq\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=blake2b_simd\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.2\",\n)\n"
            }
          },
          "crate_index__once_cell-1.19.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__once_cell-1.19.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/once_cell/1.19.0/download"
              ],
              "strip_prefix": "once_cell-1.19.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"once_cell\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"race\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=once_cell\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.19.0\",\n)\n"
            }
          },
          "crate_index__scoped-tls-1.0.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__scoped-tls-1.0.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e1cf6437eb19a8f4a6cc0f7dca544973b0b78843adbfeb3683d1a94a0024a294",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/scoped-tls/1.0.1/download"
              ],
              "strip_prefix": "scoped-tls-1.0.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"scoped_tls\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=scoped-tls\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.1\",\n)\n"
            }
          },
          "crate_index__wasm-bindgen-shared-0.2.91": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__wasm-bindgen-shared-0.2.91",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4f186bd2dcf04330886ce82d6f33dd75a7bfcf69ecf5763b89fcde53b6ac9838",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-shared/0.2.91/download"
              ],
              "strip_prefix": "wasm-bindgen-shared-0.2.91",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"wasm_bindgen_shared\",\n    deps = [\n        \"@crate_index__wasm-bindgen-shared-0.2.91//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=wasm-bindgen-shared\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.91\",\n)\n\ncargo_build_script(\n    name = \"wasm-bindgen-shared_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    links = \"wasm_bindgen\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=wasm-bindgen-shared\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.2.91\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":wasm-bindgen-shared_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__futures-executor-0.3.30": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__futures-executor-0.3.30",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a576fc72ae164fca6b9db127eaa9a9dda0d61316034f33a0a0d4eda41f02b01d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/futures-executor/0.3.30/download"
              ],
              "strip_prefix": "futures-executor-0.3.30",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"futures_executor\",\n    deps = [\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-task-0.3.30//:futures_task\",\n        \"@crate_index__futures-util-0.3.30//:futures_util\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=futures-executor\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.30\",\n)\n"
            }
          },
          "crate_index__hyper-timeout-0.4.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__hyper-timeout-0.4.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bbb958482e8c7be4bc3cf272a766a2b0bf1a6755e7a6ae777f017a31d11b13b1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hyper-timeout/0.4.1/download"
              ],
              "strip_prefix": "hyper-timeout-0.4.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"hyper_timeout\",\n    deps = [\n        \"@crate_index__hyper-0.14.28//:hyper\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n        \"@crate_index__tokio-1.36.0//:tokio\",\n        \"@crate_index__tokio-io-timeout-1.2.0//:tokio_io_timeout\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=hyper-timeout\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.1\",\n)\n"
            }
          },
          "crate_index__openssl-probe-0.1.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__openssl-probe-0.1.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/openssl-probe/0.1.5/download"
              ],
              "strip_prefix": "openssl-probe-0.1.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"openssl_probe\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=openssl-probe\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.5\",\n)\n"
            }
          },
          "crate_index__uuid-1.7.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__uuid-1.7.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f00cc9702ca12d3c81455259621e676d0f7251cec66a21e98fe2e9a37db93b2a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/uuid/1.7.0/download"
              ],
              "strip_prefix": "uuid-1.7.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"uuid\",\n    deps = [\n        \"@crate_index__getrandom-0.2.12//:getrandom\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"rng\",\n        \"std\",\n        \"v4\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=uuid\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.7.0\",\n)\n"
            }
          },
          "crate_index__openssl-0.10.64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__openssl-0.10.64",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "95a0481286a310808298130d22dd1fef0fa571e05a8f44ec801801e84b216b1f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/openssl/0.10.64/download"
              ],
              "strip_prefix": "openssl-0.10.64",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"openssl\",\n    deps = [\n        \"@crate_index__bitflags-2.4.2//:bitflags\",\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__foreign-types-0.3.2//:foreign_types\",\n        \"@crate_index__libc-0.2.153//:libc\",\n        \"@crate_index__once_cell-1.19.0//:once_cell\",\n        \"@crate_index__openssl-0.10.64//:build_script_build\",\n        \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__openssl-macros-0.1.1//:openssl_macros\",\n    ],\n    aliases = {\n        \"@crate_index__openssl-sys-0.9.101//:openssl_sys\": \"ffi\",\n    },\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=openssl\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.10.64\",\n)\n\ncargo_build_script(\n    name = \"openssl_bs\",\n    crate_features = [\n        \"default\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    link_deps = [\n        \"@crate_index__openssl-sys-0.9.101//:openssl_sys\",\n    ],\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=openssl\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.10.64\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":openssl_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__log-0.4.21": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__log-0.4.21",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "90ed8c1e510134f979dbc4f070f87d4313098b704861a105fe34231c70a3901c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/log/0.4.21/download"
              ],
              "strip_prefix": "log-0.4.21",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"log\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=log\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.21\",\n)\n"
            }
          },
          "crate_index__pin-project-1.1.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__pin-project-1.1.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "0302c4a0442c456bd56f841aee5c3bfd17967563f6fadc9ceb9f9c23cf3807e0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/pin-project/1.1.4/download"
              ],
              "strip_prefix": "pin-project-1.1.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"pin_project\",\n    proc_macro_deps = [\n        \"@crate_index__pin-project-internal-1.1.4//:pin_project_internal\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pin-project\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.1.4\",\n)\n"
            }
          },
          "crate_index__wasm-streams-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__wasm-streams-0.4.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b65dc4c90b63b118468cf747d8bf3566c1913ef60be765b5730ead9e0a3ba129",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-streams/0.4.0/download"
              ],
              "strip_prefix": "wasm-streams-0.4.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"wasm_streams\",\n    deps = [\n        \"@crate_index__futures-util-0.3.30//:futures_util\",\n        \"@crate_index__js-sys-0.3.68//:js_sys\",\n        \"@crate_index__wasm-bindgen-0.2.91//:wasm_bindgen\",\n        \"@crate_index__wasm-bindgen-futures-0.4.41//:wasm_bindgen_futures\",\n        \"@crate_index__web-sys-0.3.68//:web_sys\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=wasm-streams\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.0\",\n)\n"
            }
          },
          "crate_index__async-global-executor-2.4.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__async-global-executor-2.4.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "05b1b633a2115cd122d73b955eadd9916c18c8f510ec9cd1686404c60ad1c29c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/async-global-executor/2.4.1/download"
              ],
              "strip_prefix": "async-global-executor-2.4.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"async_global_executor\",\n    deps = [\n        \"@crate_index__async-channel-2.2.0//:async_channel\",\n        \"@crate_index__async-executor-1.8.0//:async_executor\",\n        \"@crate_index__async-io-2.3.1//:async_io\",\n        \"@crate_index__async-lock-3.3.0//:async_lock\",\n        \"@crate_index__blocking-1.5.1//:blocking\",\n        \"@crate_index__futures-lite-2.2.0//:futures_lite\",\n        \"@crate_index__once_cell-1.19.0//:once_cell\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"async-io\",\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=async-global-executor\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.4.1\",\n)\n"
            }
          },
          "crate_index__cpufeatures-0.2.12": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__cpufeatures-0.2.12",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "53fe5e26ff1b7aef8bca9c6080520cfb8d9333c7568e1829cef191a9723e5504",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cpufeatures/0.2.12/download"
              ],
              "strip_prefix": "cpufeatures-0.2.12",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"cpufeatures\",\n    deps = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(target_arch = \"aarch64\", target_vendor = \"apple\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(target_arch = \"aarch64\", target_vendor = \"apple\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(target_arch = \"aarch64\", target_vendor = \"apple\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # aarch64-linux-android\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(target_arch = \"aarch64\", target_os = \"linux\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(target_arch = \"aarch64\", target_os = \"linux\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=cpufeatures\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.12\",\n)\n"
            }
          },
          "crate_index__indexmap-1.9.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__indexmap-1.9.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/indexmap/1.9.3/download"
              ],
              "strip_prefix": "indexmap-1.9.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"indexmap\",\n    deps = [\n        \"@crate_index__hashbrown-0.12.3//:hashbrown\",\n        \"@crate_index__indexmap-1.9.3//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=indexmap\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.9.3\",\n)\n\ncargo_build_script(\n    name = \"indexmap_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__autocfg-1.1.0//:autocfg\",\n    ],\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=indexmap\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.9.3\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":indexmap_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__rand_chacha-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__rand_chacha-0.3.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rand_chacha/0.3.1/download"
              ],
              "strip_prefix": "rand_chacha-0.3.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rand_chacha\",\n    deps = [\n        \"@crate_index__ppv-lite86-0.2.17//:ppv_lite86\",\n        \"@crate_index__rand_core-0.6.4//:rand_core\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rand_chacha\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.1\",\n)\n"
            }
          },
          "crate_index__winapi-i686-pc-windows-gnu-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__winapi-i686-pc-windows-gnu-0.4.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi-i686-pc-windows-gnu/0.4.0/download"
              ],
              "strip_prefix": "winapi-i686-pc-windows-gnu-0.4.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"winapi_i686_pc_windows_gnu\",\n    deps = [\n        \"@crate_index__winapi-i686-pc-windows-gnu-0.4.0//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=winapi-i686-pc-windows-gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.0\",\n)\n\ncargo_build_script(\n    name = \"winapi-i686-pc-windows-gnu_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=winapi-i686-pc-windows-gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.4.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":winapi-i686-pc-windows-gnu_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__arc-swap-1.6.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__arc-swap-1.6.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bddcadddf5e9015d310179a59bb28c4d4b9920ad0f11e8e14dbadf654890c9a6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/arc-swap/1.6.0/download"
              ],
              "strip_prefix": "arc-swap-1.6.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"arc_swap\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=arc-swap\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.6.0\",\n)\n"
            }
          },
          "crate_index__pem-3.0.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__pem-3.0.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1b8fcc794035347fb64beda2d3b462595dd2753e3f268d89c5aae77e8cf2c310",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/pem/3.0.3/download"
              ],
              "strip_prefix": "pem-3.0.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"pem\",\n    deps = [\n        \"@crate_index__base64-0.21.7//:base64\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pem\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"3.0.3\",\n)\n"
            }
          },
          "crate_index__regex-lite-0.1.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__regex-lite-0.1.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "30b661b2f27137bdbc16f00eda72866a92bb28af1753ffbd56744fb6e2e9cd8e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex-lite/0.1.5/download"
              ],
              "strip_prefix": "regex-lite-0.1.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"regex_lite\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n        \"string\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=regex-lite\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.5\",\n)\n"
            }
          },
          "crate_index__arrayref-0.3.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__arrayref-0.3.7",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "6b4930d2cb77ce62f89ee5d5289b4ac049559b1c45539271f5ed4fdc7db34545",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/arrayref/0.3.7/download"
              ],
              "strip_prefix": "arrayref-0.3.7",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"arrayref\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=arrayref\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.7\",\n)\n"
            }
          },
          "crate_index__rustc-demangle-0.1.23": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__rustc-demangle-0.1.23",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d626bb9dae77e28219937af045c257c28bfd3f69333c512553507f5f9798cb76",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustc-demangle/0.1.23/download"
              ],
              "strip_prefix": "rustc-demangle-0.1.23",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rustc_demangle\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rustc-demangle\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.23\",\n)\n"
            }
          },
          "crate_index__rustix-0.38.31": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__rustix-0.38.31",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "6ea3e1a662af26cd7a3ba09c0297a31af215563ecf42817c98df621387f4e949",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustix/0.38.31/download"
              ],
              "strip_prefix": "rustix-0.38.31",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rustix\",\n    deps = [\n        \"@crate_index__bitflags-2.4.2//:bitflags\",\n        \"@crate_index__rustix-0.38.31//:build_script_build\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__linux-raw-sys-0.4.13//:linux_raw_sys\",  # cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(windows)\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__linux-raw-sys-0.4.13//:linux_raw_sys\",  # cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__linux-raw-sys-0.4.13//:linux_raw_sys\",  # cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"))))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__linux-raw-sys-0.4.13//:linux_raw_sys\",  # cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"))))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__linux-raw-sys-0.4.13//:linux_raw_sys\",  # cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__linux-raw-sys-0.4.13//:linux_raw_sys\",  # cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"))))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__linux-raw-sys-0.4.13//:linux_raw_sys\",  # cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(windows)\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__linux-raw-sys-0.4.13//:linux_raw_sys\",  # cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"))))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__linux-raw-sys-0.4.13//:linux_raw_sys\",  # cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__linux-raw-sys-0.4.13//:linux_raw_sys\",  # cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__linux-raw-sys-0.4.13//:linux_raw_sys\",  # cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(windows)\n            \"@crate_index__windows-sys-0.52.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__linux-raw-sys-0.4.13//:linux_raw_sys\",  # cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__linux-raw-sys-0.4.13//:linux_raw_sys\",  # cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"))))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [\n            \"@crate_index__errno-0.3.8//:errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        ],\n        \"//conditions:default\": [],\n    }),\n    aliases = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:aarch64-linux-android\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(windows)\n        },\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:i686-apple-darwin\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:i686-linux-android\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(windows)\n        },\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:wasm32-wasi\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:x86_64-linux-android\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(windows)\n        },\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": {\n            \"@crate_index__errno-0.3.8//:errno\": \"libc_errno\",  # cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))\n        },\n        \"//conditions:default\": {},\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"fs\",\n        \"net\",\n        \"std\",\n        \"use-libc-auxv\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"event\",  # aarch64-apple-darwin\n            \"pipe\",  # aarch64-apple-darwin\n            \"process\",  # aarch64-apple-darwin\n            \"time\",  # aarch64-apple-darwin\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"event\",  # aarch64-apple-ios\n            \"pipe\",  # aarch64-apple-ios\n            \"process\",  # aarch64-apple-ios\n            \"time\",  # aarch64-apple-ios\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"event\",  # aarch64-apple-ios-sim\n            \"pipe\",  # aarch64-apple-ios-sim\n            \"process\",  # aarch64-apple-ios-sim\n            \"time\",  # aarch64-apple-ios-sim\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"event\",  # aarch64-fuchsia\n            \"pipe\",  # aarch64-fuchsia\n            \"process\",  # aarch64-fuchsia\n            \"time\",  # aarch64-fuchsia\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"event\",  # aarch64-linux-android\n            \"pipe\",  # aarch64-linux-android\n            \"process\",  # aarch64-linux-android\n            \"time\",  # aarch64-linux-android\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"event\",  # aarch64-unknown-linux-gnu\n            \"pipe\",  # aarch64-unknown-linux-gnu\n            \"process\",  # aarch64-unknown-linux-gnu\n            \"time\",  # aarch64-unknown-linux-gnu\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"event\",  # aarch64-unknown-nixos-gnu\n            \"pipe\",  # aarch64-unknown-nixos-gnu\n            \"process\",  # aarch64-unknown-nixos-gnu\n            \"time\",  # aarch64-unknown-nixos-gnu\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"event\",  # aarch64-unknown-nto-qnx710\n            \"pipe\",  # aarch64-unknown-nto-qnx710\n            \"process\",  # aarch64-unknown-nto-qnx710\n            \"time\",  # aarch64-unknown-nto-qnx710\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"event\",  # arm-unknown-linux-gnueabi\n            \"pipe\",  # arm-unknown-linux-gnueabi\n            \"process\",  # arm-unknown-linux-gnueabi\n            \"time\",  # arm-unknown-linux-gnueabi\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"event\",  # armv7-linux-androideabi\n            \"pipe\",  # armv7-linux-androideabi\n            \"process\",  # armv7-linux-androideabi\n            \"time\",  # armv7-linux-androideabi\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"event\",  # armv7-unknown-linux-gnueabi\n            \"pipe\",  # armv7-unknown-linux-gnueabi\n            \"process\",  # armv7-unknown-linux-gnueabi\n            \"time\",  # armv7-unknown-linux-gnueabi\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"event\",  # i686-apple-darwin\n            \"pipe\",  # i686-apple-darwin\n            \"process\",  # i686-apple-darwin\n            \"time\",  # i686-apple-darwin\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"event\",  # i686-linux-android\n            \"pipe\",  # i686-linux-android\n            \"process\",  # i686-linux-android\n            \"time\",  # i686-linux-android\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"event\",  # i686-unknown-freebsd\n            \"pipe\",  # i686-unknown-freebsd\n            \"process\",  # i686-unknown-freebsd\n            \"time\",  # i686-unknown-freebsd\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"event\",  # i686-unknown-linux-gnu\n            \"pipe\",  # i686-unknown-linux-gnu\n            \"process\",  # i686-unknown-linux-gnu\n            \"time\",  # i686-unknown-linux-gnu\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"event\",  # powerpc-unknown-linux-gnu\n            \"pipe\",  # powerpc-unknown-linux-gnu\n            \"process\",  # powerpc-unknown-linux-gnu\n            \"time\",  # powerpc-unknown-linux-gnu\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"event\",  # s390x-unknown-linux-gnu\n            \"pipe\",  # s390x-unknown-linux-gnu\n            \"process\",  # s390x-unknown-linux-gnu\n            \"time\",  # s390x-unknown-linux-gnu\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"event\",  # x86_64-apple-darwin\n            \"pipe\",  # x86_64-apple-darwin\n            \"process\",  # x86_64-apple-darwin\n            \"time\",  # x86_64-apple-darwin\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"event\",  # x86_64-apple-ios\n            \"pipe\",  # x86_64-apple-ios\n            \"process\",  # x86_64-apple-ios\n            \"time\",  # x86_64-apple-ios\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"event\",  # x86_64-fuchsia\n            \"pipe\",  # x86_64-fuchsia\n            \"process\",  # x86_64-fuchsia\n            \"time\",  # x86_64-fuchsia\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"event\",  # x86_64-linux-android\n            \"pipe\",  # x86_64-linux-android\n            \"process\",  # x86_64-linux-android\n            \"time\",  # x86_64-linux-android\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"event\",  # x86_64-unknown-freebsd\n            \"pipe\",  # x86_64-unknown-freebsd\n            \"process\",  # x86_64-unknown-freebsd\n            \"time\",  # x86_64-unknown-freebsd\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"event\",  # x86_64-unknown-linux-gnu\n            \"pipe\",  # x86_64-unknown-linux-gnu\n            \"process\",  # x86_64-unknown-linux-gnu\n            \"time\",  # x86_64-unknown-linux-gnu\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"event\",  # x86_64-unknown-nixos-gnu\n            \"pipe\",  # x86_64-unknown-nixos-gnu\n            \"process\",  # x86_64-unknown-nixos-gnu\n            \"time\",  # x86_64-unknown-nixos-gnu\n        ],\n        \"//conditions:default\": [],\n    }),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rustix\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.38.31\",\n)\n\ncargo_build_script(\n    name = \"rustix_bs\",\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"fs\",\n        \"net\",\n        \"std\",\n        \"use-libc-auxv\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"event\",  # aarch64-apple-darwin\n            \"pipe\",  # aarch64-apple-darwin\n            \"process\",  # aarch64-apple-darwin\n            \"time\",  # aarch64-apple-darwin\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"event\",  # aarch64-apple-ios\n            \"pipe\",  # aarch64-apple-ios\n            \"process\",  # aarch64-apple-ios\n            \"time\",  # aarch64-apple-ios\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"event\",  # aarch64-apple-ios-sim\n            \"pipe\",  # aarch64-apple-ios-sim\n            \"process\",  # aarch64-apple-ios-sim\n            \"time\",  # aarch64-apple-ios-sim\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"event\",  # aarch64-fuchsia\n            \"pipe\",  # aarch64-fuchsia\n            \"process\",  # aarch64-fuchsia\n            \"time\",  # aarch64-fuchsia\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"event\",  # aarch64-linux-android\n            \"pipe\",  # aarch64-linux-android\n            \"process\",  # aarch64-linux-android\n            \"time\",  # aarch64-linux-android\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"event\",  # aarch64-unknown-linux-gnu\n            \"pipe\",  # aarch64-unknown-linux-gnu\n            \"process\",  # aarch64-unknown-linux-gnu\n            \"time\",  # aarch64-unknown-linux-gnu\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"event\",  # aarch64-unknown-nixos-gnu\n            \"pipe\",  # aarch64-unknown-nixos-gnu\n            \"process\",  # aarch64-unknown-nixos-gnu\n            \"time\",  # aarch64-unknown-nixos-gnu\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"event\",  # aarch64-unknown-nto-qnx710\n            \"pipe\",  # aarch64-unknown-nto-qnx710\n            \"process\",  # aarch64-unknown-nto-qnx710\n            \"time\",  # aarch64-unknown-nto-qnx710\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"event\",  # arm-unknown-linux-gnueabi\n            \"pipe\",  # arm-unknown-linux-gnueabi\n            \"process\",  # arm-unknown-linux-gnueabi\n            \"time\",  # arm-unknown-linux-gnueabi\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"event\",  # armv7-linux-androideabi\n            \"pipe\",  # armv7-linux-androideabi\n            \"process\",  # armv7-linux-androideabi\n            \"time\",  # armv7-linux-androideabi\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"event\",  # armv7-unknown-linux-gnueabi\n            \"pipe\",  # armv7-unknown-linux-gnueabi\n            \"process\",  # armv7-unknown-linux-gnueabi\n            \"time\",  # armv7-unknown-linux-gnueabi\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"event\",  # i686-apple-darwin\n            \"pipe\",  # i686-apple-darwin\n            \"process\",  # i686-apple-darwin\n            \"time\",  # i686-apple-darwin\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"event\",  # i686-linux-android\n            \"pipe\",  # i686-linux-android\n            \"process\",  # i686-linux-android\n            \"time\",  # i686-linux-android\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"event\",  # i686-unknown-freebsd\n            \"pipe\",  # i686-unknown-freebsd\n            \"process\",  # i686-unknown-freebsd\n            \"time\",  # i686-unknown-freebsd\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"event\",  # i686-unknown-linux-gnu\n            \"pipe\",  # i686-unknown-linux-gnu\n            \"process\",  # i686-unknown-linux-gnu\n            \"time\",  # i686-unknown-linux-gnu\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"event\",  # powerpc-unknown-linux-gnu\n            \"pipe\",  # powerpc-unknown-linux-gnu\n            \"process\",  # powerpc-unknown-linux-gnu\n            \"time\",  # powerpc-unknown-linux-gnu\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"event\",  # s390x-unknown-linux-gnu\n            \"pipe\",  # s390x-unknown-linux-gnu\n            \"process\",  # s390x-unknown-linux-gnu\n            \"time\",  # s390x-unknown-linux-gnu\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"event\",  # x86_64-apple-darwin\n            \"pipe\",  # x86_64-apple-darwin\n            \"process\",  # x86_64-apple-darwin\n            \"time\",  # x86_64-apple-darwin\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"event\",  # x86_64-apple-ios\n            \"pipe\",  # x86_64-apple-ios\n            \"process\",  # x86_64-apple-ios\n            \"time\",  # x86_64-apple-ios\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"event\",  # x86_64-fuchsia\n            \"pipe\",  # x86_64-fuchsia\n            \"process\",  # x86_64-fuchsia\n            \"time\",  # x86_64-fuchsia\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"event\",  # x86_64-linux-android\n            \"pipe\",  # x86_64-linux-android\n            \"process\",  # x86_64-linux-android\n            \"time\",  # x86_64-linux-android\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"event\",  # x86_64-unknown-freebsd\n            \"pipe\",  # x86_64-unknown-freebsd\n            \"process\",  # x86_64-unknown-freebsd\n            \"time\",  # x86_64-unknown-freebsd\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"event\",  # x86_64-unknown-linux-gnu\n            \"pipe\",  # x86_64-unknown-linux-gnu\n            \"process\",  # x86_64-unknown-linux-gnu\n            \"time\",  # x86_64-unknown-linux-gnu\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"event\",  # x86_64-unknown-nixos-gnu\n            \"pipe\",  # x86_64-unknown-nixos-gnu\n            \"process\",  # x86_64-unknown-nixos-gnu\n            \"time\",  # x86_64-unknown-nixos-gnu\n        ],\n        \"//conditions:default\": [],\n    }),\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rustix\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.38.31\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":rustix_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__bitflags-1.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__bitflags-1.3.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bitflags/1.3.2/download"
              ],
              "strip_prefix": "bitflags-1.3.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"bitflags\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=bitflags\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.3.2\",\n)\n"
            }
          },
          "crate_index__jpeg-decoder-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__jpeg-decoder-0.3.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f5d4a7da358eff58addd2877a45865158f0d78c911d43a5784ceb7bbf52833b0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/jpeg-decoder/0.3.1/download"
              ],
              "strip_prefix": "jpeg-decoder-0.3.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"jpeg_decoder\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=jpeg-decoder\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.1\",\n)\n"
            }
          },
          "crate_index__warp-0.3.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__warp-0.3.6",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c1e92e22e03ff1230c03a1a8ee37d2f89cd489e2e541b7550d6afad96faed169",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/warp/0.3.6/download"
              ],
              "strip_prefix": "warp-0.3.6",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"warp\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__futures-channel-0.3.30//:futures_channel\",\n        \"@crate_index__futures-util-0.3.30//:futures_util\",\n        \"@crate_index__headers-0.3.9//:headers\",\n        \"@crate_index__http-0.2.11//:http\",\n        \"@crate_index__hyper-0.14.28//:hyper\",\n        \"@crate_index__log-0.4.21//:log\",\n        \"@crate_index__mime-0.3.17//:mime\",\n        \"@crate_index__mime_guess-2.0.4//:mime_guess\",\n        \"@crate_index__percent-encoding-2.3.1//:percent_encoding\",\n        \"@crate_index__pin-project-1.1.4//:pin_project\",\n        \"@crate_index__rustls-pemfile-1.0.4//:rustls_pemfile\",\n        \"@crate_index__scoped-tls-1.0.1//:scoped_tls\",\n        \"@crate_index__serde-1.0.197//:serde\",\n        \"@crate_index__serde_json-1.0.114//:serde_json\",\n        \"@crate_index__serde_urlencoded-0.7.1//:serde_urlencoded\",\n        \"@crate_index__tokio-1.36.0//:tokio\",\n        \"@crate_index__tokio-stream-0.1.14//:tokio_stream\",\n        \"@crate_index__tokio-util-0.7.10//:tokio_util\",\n        \"@crate_index__tower-service-0.3.2//:tower_service\",\n        \"@crate_index__tracing-0.1.40//:tracing\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=warp\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.6\",\n)\n"
            }
          },
          "crate_index__windows-sys-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows-sys-0.48.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows-sys/0.48.0/download"
              ],
              "strip_prefix": "windows-sys-0.48.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_sys\",\n    deps = [\n        \"@crate_index__windows-targets-0.48.5//:windows_targets\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"Win32\",\n        \"Win32_Foundation\",\n        \"Win32_NetworkManagement\",\n        \"Win32_NetworkManagement_IpHelper\",\n        \"Win32_Networking\",\n        \"Win32_Networking_WinSock\",\n        \"Win32_Security\",\n        \"Win32_Storage\",\n        \"Win32_Storage_FileSystem\",\n        \"Win32_System\",\n        \"Win32_System_Diagnostics\",\n        \"Win32_System_Diagnostics_Debug\",\n        \"Win32_System_IO\",\n        \"Win32_System_LibraryLoader\",\n        \"Win32_System_Pipes\",\n        \"Win32_System_Registry\",\n        \"Win32_System_SystemServices\",\n        \"Win32_System_Threading\",\n        \"Win32_System_Time\",\n        \"Win32_System_WindowsProgramming\",\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.48.0\",\n)\n"
            }
          },
          "crate_index__parking_lot_core-0.9.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__parking_lot_core-0.9.9",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4c42a9226546d68acdd9c0a280d17ce19bfe27a46bf68784e4066115788d008e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/parking_lot_core/0.9.9/download"
              ],
              "strip_prefix": "parking_lot_core-0.9.9",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"parking_lot_core\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__parking_lot_core-0.9.9//:build_script_build\",\n        \"@crate_index__smallvec-1.13.1//:smallvec\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__windows-targets-0.48.5//:windows_targets\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__windows-targets-0.48.5//:windows_targets\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__windows-targets-0.48.5//:windows_targets\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=parking_lot_core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.9.9\",\n)\n\ncargo_build_script(\n    name = \"parking_lot_core_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=parking_lot_core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.9.9\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":parking_lot_core_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__fnv-1.0.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__fnv-1.0.7",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/fnv/1.0.7/download"
              ],
              "strip_prefix": "fnv-1.0.7",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"fnv\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=fnv\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.7\",\n)\n"
            }
          },
          "crate_index__toml_datetime-0.6.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__toml_datetime-0.6.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3550f4e9685620ac18a50ed434eb3aec30db8ba93b0287467bca5826ea25baf1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/toml_datetime/0.6.5/download"
              ],
              "strip_prefix": "toml_datetime-0.6.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"toml_datetime\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=toml_datetime\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.6.5\",\n)\n"
            }
          },
          "crate_index__yasna-0.5.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__yasna-0.5.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e17bb3549cc1321ae1296b9cdc2698e2b6cb1992adfa19a8c72e5b7a738f44cd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/yasna/0.5.2/download"
              ],
              "strip_prefix": "yasna-0.5.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"yasna\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=yasna\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.5.2\",\n)\n"
            }
          },
          "crate_index__num-conv-0.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__num-conv-0.1.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num-conv/0.1.0/download"
              ],
              "strip_prefix": "num-conv-0.1.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"num_conv\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=num-conv\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.0\",\n)\n"
            }
          },
          "crate_index__rustls-connector-0.18.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__rustls-connector-0.18.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "25da151615461c7347114b1ad1a7458b4cdebc69cb220cd140cd5cb324b1dd37",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustls-connector/0.18.5/download"
              ],
              "strip_prefix": "rustls-connector-0.18.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rustls_connector\",\n    deps = [\n        \"@crate_index__log-0.4.21//:log\",\n        \"@crate_index__rustls-0.21.10//:rustls\",\n        \"@crate_index__rustls-native-certs-0.6.3//:rustls_native_certs\",\n        \"@crate_index__rustls-webpki-0.101.7//:webpki\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"log\",\n        \"native-certs\",\n        \"rustls-native-certs\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rustls-connector\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.18.5\",\n)\n"
            }
          },
          "crate_index__rustls-webpki-0.101.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__rustls-webpki-0.101.7",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8b6275d1ee7a1cd780b64aca7726599a1dbc893b1e64144529e55c3c2f745765",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustls-webpki/0.101.7/download"
              ],
              "strip_prefix": "rustls-webpki-0.101.7",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"webpki\",\n    deps = [\n        \"@crate_index__ring-0.17.8//:ring\",\n        \"@crate_index__untrusted-0.9.0//:untrusted\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rustls-webpki\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.101.7\",\n)\n"
            }
          },
          "crate_index__isolang-2.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__isolang-2.4.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "fe50d48c77760c55188549098b9a7f6e37ae980c586a24693d6b01c3b2010c3c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/isolang/2.4.0/download"
              ],
              "strip_prefix": "isolang-2.4.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"isolang\",\n    deps = [\n        \"@crate_index__phf-0.11.2//:phf\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"english_names\",\n        \"list_languages\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=isolang\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.4.0\",\n)\n"
            }
          },
          "crate_index__libm-0.2.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__libm-0.2.8",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "4ec2a862134d2a7d32d7983ddcdd1c4923530833c9f2ea1a44fc5fa473989058",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/libm/0.2.8/download"
              ],
              "strip_prefix": "libm-0.2.8",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"libm\",\n    deps = [\n        \"@crate_index__libm-0.2.8//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=libm\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.8\",\n)\n\ncargo_build_script(\n    name = \"libm_bs\",\n    crate_features = [\n        \"default\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=libm\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.2.8\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":libm_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__tonic-build-0.11.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tonic-build-0.11.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "be4ef6dd70a610078cb4e338a0f79d06bc759ff1b22d2120c2ff02ae264ba9c2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tonic-build/0.11.0/download"
              ],
              "strip_prefix": "tonic-build-0.11.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tonic_build\",\n    deps = [\n        \"@crate_index__prettyplease-0.2.16//:prettyplease\",\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__prost-build-0.12.3//:prost_build\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.52//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"prost\",\n        \"prost-build\",\n        \"transport\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tonic-build\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.11.0\",\n)\n"
            }
          },
          "crate_index__winapi-x86_64-pc-windows-gnu-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__winapi-x86_64-pc-windows-gnu-0.4.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi-x86_64-pc-windows-gnu/0.4.0/download"
              ],
              "strip_prefix": "winapi-x86_64-pc-windows-gnu-0.4.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"winapi_x86_64_pc_windows_gnu\",\n    deps = [\n        \"@crate_index__winapi-x86_64-pc-windows-gnu-0.4.0//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=winapi-x86_64-pc-windows-gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.0\",\n)\n\ncargo_build_script(\n    name = \"winapi-x86_64-pc-windows-gnu_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=winapi-x86_64-pc-windows-gnu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.4.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":winapi-x86_64-pc-windows-gnu_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__async-global-executor-trait-2.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__async-global-executor-trait-2.1.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "33dd14c5a15affd2abcff50d84efd4009ada28a860f01c14f9d654f3e81b3f75",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/async-global-executor-trait/2.1.0/download"
              ],
              "strip_prefix": "async-global-executor-trait-2.1.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"async_global_executor_trait\",\n    deps = [\n        \"@crate_index__async-global-executor-2.4.1//:async_global_executor\",\n        \"@crate_index__executor-trait-2.1.0//:executor_trait\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__async-trait-0.1.77//:async_trait\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"async-io\",\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=async-global-executor-trait\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.1.0\",\n)\n"
            }
          },
          "crate_index__sync_wrapper-0.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__sync_wrapper-0.1.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "2047c6ded9c721764247e62cd3b03c09ffc529b2ba5b10ec482ae507a4a70160",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/sync_wrapper/0.1.2/download"
              ],
              "strip_prefix": "sync_wrapper-0.1.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"sync_wrapper\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=sync_wrapper\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.2\",\n)\n"
            }
          },
          "crate_index__futures-io-0.3.30": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__futures-io-0.3.30",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a44623e20b9681a318efdd71c299b6b222ed6f231972bfe2f224ebad6311f0c1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/futures-io/0.3.30/download"
              ],
              "strip_prefix": "futures-io-0.3.30",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"futures_io\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=futures-io\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.30\",\n)\n"
            }
          },
          "crate_index__futures-lite-2.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__futures-lite-2.2.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "445ba825b27408685aaecefd65178908c36c6e96aaf6d8599419d46e624192ba",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/futures-lite/2.2.0/download"
              ],
              "strip_prefix": "futures-lite-2.2.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"futures_lite\",\n    deps = [\n        \"@crate_index__fastrand-2.0.1//:fastrand\",\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-io-0.3.30//:futures_io\",\n        \"@crate_index__parking-2.2.0//:parking\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"fastrand\",\n        \"futures-io\",\n        \"parking\",\n        \"race\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=futures-lite\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.2.0\",\n)\n"
            }
          },
          "crate_index__scylla-0.12.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__scylla-0.12.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "03d2db76aa23f55d2ece5354e1a3778633098a3d1ea76153f494d71e92cd02d8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/scylla/0.12.0/download"
              ],
              "strip_prefix": "scylla-0.12.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"scylla\",\n    deps = [\n        \"@crate_index__arc-swap-1.6.0//:arc_swap\",\n        \"@crate_index__byteorder-1.5.0//:byteorder\",\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__chrono-0.4.34//:chrono\",\n        \"@crate_index__dashmap-5.5.3//:dashmap\",\n        \"@crate_index__futures-0.3.30//:futures\",\n        \"@crate_index__histogram-0.6.9//:histogram\",\n        \"@crate_index__itertools-0.11.0//:itertools\",\n        \"@crate_index__lz4_flex-0.11.2//:lz4_flex\",\n        \"@crate_index__num_enum-0.6.1//:num_enum\",\n        \"@crate_index__rand-0.8.5//:rand\",\n        \"@crate_index__rand_pcg-0.3.1//:rand_pcg\",\n        \"@crate_index__scylla-cql-0.1.0//:scylla_cql\",\n        \"@crate_index__smallvec-1.13.1//:smallvec\",\n        \"@crate_index__snap-1.1.1//:snap\",\n        \"@crate_index__socket2-0.5.6//:socket2\",\n        \"@crate_index__strum-0.23.0//:strum\",\n        \"@crate_index__thiserror-1.0.57//:thiserror\",\n        \"@crate_index__tokio-1.36.0//:tokio\",\n        \"@crate_index__tracing-0.1.40//:tracing\",\n        \"@crate_index__uuid-1.7.0//:uuid\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__async-trait-0.1.77//:async_trait\",\n        \"@crate_index__scylla-macros-0.4.0//:scylla_macros\",\n        \"@crate_index__strum_macros-0.23.1//:strum_macros\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=scylla\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.12.0\",\n)\n"
            }
          },
          "crate_index__concurrent-queue-2.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__concurrent-queue-2.4.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d16048cd947b08fa32c24458a22f5dc5e835264f689f4f5653210c69fd107363",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/concurrent-queue/2.4.0/download"
              ],
              "strip_prefix": "concurrent-queue-2.4.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"concurrent_queue\",\n    deps = [\n        \"@crate_index__crossbeam-utils-0.8.19//:crossbeam_utils\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=concurrent-queue\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.4.0\",\n)\n"
            }
          },
          "crate_index__typenum-1.17.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__typenum-1.17.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/typenum/1.17.0/download"
              ],
              "strip_prefix": "typenum-1.17.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"typenum\",\n    deps = [\n        \"@crate_index__typenum-1.17.0//:build_script_main\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=typenum\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.17.0\",\n)\n\ncargo_build_script(\n    name = \"typenum_bs\",\n    crate_name = \"build_script_main\",\n    crate_root = \"build/main.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=typenum\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.17.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_main\",\n    actual = \":typenum_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__async-task-4.7.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__async-task-4.7.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "fbb36e985947064623dbd357f727af08ffd077f93d696782f3c56365fa2e2799",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/async-task/4.7.0/download"
              ],
              "strip_prefix": "async-task-4.7.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"async_task\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=async-task\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"4.7.0\",\n)\n"
            }
          },
          "crate_index__percent-encoding-2.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__percent-encoding-2.3.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/percent-encoding/2.3.1/download"
              ],
              "strip_prefix": "percent-encoding-2.3.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"percent_encoding\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=percent-encoding\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.3.1\",\n)\n"
            }
          },
          "crate_index__strum_macros-0.23.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__strum_macros-0.23.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5bb0dc7ee9c15cea6199cde9a127fa16a4c5819af85395457ad72d68edc85a38",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/strum_macros/0.23.1/download"
              ],
              "strip_prefix": "strum_macros-0.23.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"strum_macros\",\n    deps = [\n        \"@crate_index__heck-0.3.3//:heck\",\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-1.0.109//:syn\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__rustversion-1.0.14//:rustversion\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=strum_macros\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.23.1\",\n)\n"
            }
          },
          "crate_index__prettyplease-0.2.16": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__prettyplease-0.2.16",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a41cf62165e97c7f814d2221421dbb9afcbcdb0a88068e5ea206e19951c2cbb5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/prettyplease/0.2.16/download"
              ],
              "strip_prefix": "prettyplease-0.2.16",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"prettyplease\",\n    deps = [\n        \"@crate_index__prettyplease-0.2.16//:build_script_build\",\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__syn-2.0.52//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=prettyplease\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.16\",\n)\n\ncargo_build_script(\n    name = \"prettyplease_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    links = \"prettyplease02\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=prettyplease\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.2.16\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":prettyplease_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__jsonwebtoken-9.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__jsonwebtoken-9.2.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5c7ea04a7c5c055c175f189b6dc6ba036fd62306b58c66c9f6389036c503a3f4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/jsonwebtoken/9.2.0/download"
              ],
              "strip_prefix": "jsonwebtoken-9.2.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"jsonwebtoken\",\n    deps = [\n        \"@crate_index__base64-0.21.7//:base64\",\n        \"@crate_index__pem-3.0.3//:pem\",\n        \"@crate_index__serde-1.0.197//:serde\",\n        \"@crate_index__serde_json-1.0.114//:serde_json\",\n        \"@crate_index__simple_asn1-0.6.2//:simple_asn1\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"@crate_index__js-sys-0.3.68//:js_sys\",  # cfg(target_arch = \"wasm32\")\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(target_arch = \"wasm32\")\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"@crate_index__js-sys-0.3.68//:js_sys\",  # cfg(target_arch = \"wasm32\")\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(target_arch = \"wasm32\")\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [\n            \"@crate_index__ring-0.17.8//:ring\",  # cfg(not(target_arch = \"wasm32\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"pem\",\n        \"simple_asn1\",\n        \"use_pem\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=jsonwebtoken\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"9.2.0\",\n)\n"
            }
          },
          "crate_index__vcpkg-0.2.15": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__vcpkg-0.2.15",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/vcpkg/0.2.15/download"
              ],
              "strip_prefix": "vcpkg-0.2.15",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"vcpkg\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=vcpkg\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.15\",\n)\n"
            }
          },
          "crate_index__windows_x86_64_msvc-0.52.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows_x86_64_msvc-0.52.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "32b752e52a2da0ddfbdbcc6fceadfeede4c939ed16d13e648833a61dfb611ed8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_msvc/0.52.4/download"
              ],
              "strip_prefix": "windows_x86_64_msvc-0.52.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_x86_64_msvc\",\n    deps = [\n        \"@crate_index__windows_x86_64_msvc-0.52.4//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.4\",\n)\n\ncargo_build_script(\n    name = \"windows_x86_64_msvc_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.52.4\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":windows_x86_64_msvc_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__crc-3.0.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__crc-3.0.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "86ec7a15cbe22e59248fc7eadb1907dab5ba09372595da4d73dd805ed4417dfe",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crc/3.0.1/download"
              ],
              "strip_prefix": "crc-3.0.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"crc\",\n    deps = [\n        \"@crate_index__crc-catalog-2.4.0//:crc_catalog\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=crc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"3.0.1\",\n)\n"
            }
          },
          "crate_index__arrayvec-0.7.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__arrayvec-0.7.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "96d30a06541fbafbc7f82ed10c06164cfbd2c401138f6addd8404629c4b16711",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/arrayvec/0.7.4/download"
              ],
              "strip_prefix": "arrayvec-0.7.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"arrayvec\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=arrayvec\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.7.4\",\n)\n"
            }
          },
          "crate_index__iana-time-zone-0.1.60": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__iana-time-zone-0.1.60",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e7ffbb5a1b541ea2561f8c41c087286cc091e21e556a4f09a8f6cbf17b69b141",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/iana-time-zone/0.1.60/download"
              ],
              "strip_prefix": "iana-time-zone-0.1.60",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"iana_time_zone\",\n    deps = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__core-foundation-sys-0.8.6//:core_foundation_sys\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__core-foundation-sys-0.8.6//:core_foundation_sys\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__core-foundation-sys-0.8.6//:core_foundation_sys\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__android_system_properties-0.1.5//:android_system_properties\",  # cfg(target_os = \"android\")\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__windows-core-0.52.0//:windows_core\",  # cfg(target_os = \"windows\")\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__android_system_properties-0.1.5//:android_system_properties\",  # cfg(target_os = \"android\")\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__core-foundation-sys-0.8.6//:core_foundation_sys\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__android_system_properties-0.1.5//:android_system_properties\",  # cfg(target_os = \"android\")\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__windows-core-0.52.0//:windows_core\",  # cfg(target_os = \"windows\")\n        ],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"@crate_index__js-sys-0.3.68//:js_sys\",  # cfg(target_arch = \"wasm32\")\n            \"@crate_index__wasm-bindgen-0.2.91//:wasm_bindgen\",  # cfg(target_arch = \"wasm32\")\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"@crate_index__js-sys-0.3.68//:js_sys\",  # cfg(target_arch = \"wasm32\")\n            \"@crate_index__wasm-bindgen-0.2.91//:wasm_bindgen\",  # cfg(target_arch = \"wasm32\")\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__core-foundation-sys-0.8.6//:core_foundation_sys\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__core-foundation-sys-0.8.6//:core_foundation_sys\",  # cfg(any(target_os = \"macos\", target_os = \"ios\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__android_system_properties-0.1.5//:android_system_properties\",  # cfg(target_os = \"android\")\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__windows-core-0.52.0//:windows_core\",  # cfg(target_os = \"windows\")\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"fallback\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=iana-time-zone\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.60\",\n)\n"
            }
          },
          "crate_index__indexmap-2.2.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__indexmap-2.2.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7b0b929d511467233429c45a44ac1dcaa21ba0f5ba11e4879e6ed28ddb4f9df4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/indexmap/2.2.5/download"
              ],
              "strip_prefix": "indexmap-2.2.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"indexmap\",\n    deps = [\n        \"@crate_index__equivalent-1.0.1//:equivalent\",\n        \"@crate_index__hashbrown-0.14.3//:hashbrown\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=indexmap\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.2.5\",\n)\n"
            }
          },
          "crate_index__android_system_properties-0.1.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__android_system_properties-0.1.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/android_system_properties/0.1.5/download"
              ],
              "strip_prefix": "android_system_properties-0.1.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"android_system_properties\",\n    deps = [\n        \"@crate_index__libc-0.2.153//:libc\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=android_system_properties\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.5\",\n)\n"
            }
          },
          "crate_index__httparse-1.8.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__httparse-1.8.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d897f394bad6a705d5f4104762e116a75639e470d80901eed05a860a95cb1904",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/httparse/1.8.0/download"
              ],
              "strip_prefix": "httparse-1.8.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"httparse\",\n    deps = [\n        \"@crate_index__httparse-1.8.0//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=httparse\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.8.0\",\n)\n\ncargo_build_script(\n    name = \"httparse_bs\",\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=httparse\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.8.0\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":httparse_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__executor-trait-2.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__executor-trait-2.1.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1a1052dd43212a7777ec6a69b117da52f5e52f07aec47d00c1a2b33b85d06b08",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/executor-trait/2.1.0/download"
              ],
              "strip_prefix": "executor-trait-2.1.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"executor_trait\",\n    proc_macro_deps = [\n        \"@crate_index__async-trait-0.1.77//:async_trait\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=executor-trait\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.1.0\",\n)\n"
            }
          },
          "crate_index__fpe-0.6.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__fpe-0.6.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "26c4b37de5ae15812a764c958297cfc50f5c010438f60c6ce75d11b802abd404",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/fpe/0.6.1/download"
              ],
              "strip_prefix": "fpe-0.6.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"fpe\",\n    deps = [\n        \"@crate_index__cbc-0.1.2//:cbc\",\n        \"@crate_index__cipher-0.4.4//:cipher\",\n        \"@crate_index__libm-0.2.8//:libm\",\n        \"@crate_index__num-bigint-0.4.4//:num_bigint\",\n        \"@crate_index__num-integer-0.1.46//:num_integer\",\n        \"@crate_index__num-traits-0.2.18//:num_traits\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"num-bigint\",\n        \"num-integer\",\n        \"num-traits\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=fpe\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.6.1\",\n)\n"
            }
          },
          "crate_index__async-lock-3.3.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__async-lock-3.3.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d034b430882f8381900d3fe6f0aaa3ad94f2cb4ac519b429692a1bc2dda4ae7b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/async-lock/3.3.0/download"
              ],
              "strip_prefix": "async-lock-3.3.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"async_lock\",\n    deps = [\n        \"@crate_index__event-listener-4.0.3//:event_listener\",\n        \"@crate_index__event-listener-strategy-0.4.0//:event_listener_strategy\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=async-lock\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"3.3.0\",\n)\n"
            }
          },
          "crate_index__rand_pcg-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__rand_pcg-0.3.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "59cad018caf63deb318e5a4586d99a24424a364f40f1e5778c29aca23f4fc73e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rand_pcg/0.3.1/download"
              ],
              "strip_prefix": "rand_pcg-0.3.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"rand_pcg\",\n    deps = [\n        \"@crate_index__rand_core-0.6.4//:rand_core\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=rand_pcg\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.1\",\n)\n"
            }
          },
          "crate_index__tokio-io-timeout-1.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tokio-io-timeout-1.2.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "30b74022ada614a1b4834de765f9bb43877f910cc8ce4be40e89042c9223a8bf",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tokio-io-timeout/1.2.0/download"
              ],
              "strip_prefix": "tokio-io-timeout-1.2.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tokio_io_timeout\",\n    deps = [\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n        \"@crate_index__tokio-1.36.0//:tokio\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tokio-io-timeout\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.2.0\",\n)\n"
            }
          },
          "crate_index__fern-0.6.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__fern-0.6.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d9f0c14694cbd524c8720dd69b0e3179344f04ebb5f90f2e4a440c6ea3b2f1ee",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/fern/0.6.2/download"
              ],
              "strip_prefix": "fern-0.6.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"fern\",\n    deps = [\n        \"@crate_index__log-0.4.21//:log\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=fern\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.6.2\",\n)\n"
            }
          },
          "crate_index__subtle-2.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__subtle-2.5.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "81cdd64d312baedb58e21336b31bc043b77e01cc99033ce76ef539f78e965ebc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/subtle/2.5.0/download"
              ],
              "strip_prefix": "subtle-2.5.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"subtle\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=subtle\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.5.0\",\n)\n"
            }
          },
          "crate_index__tokio-1.36.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tokio-1.36.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "61285f6515fa018fb2d1e46eb21223fff441ee8db5d0f1435e8ab4f5cdb80931",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tokio/1.36.0/download"
              ],
              "strip_prefix": "tokio-1.36.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tokio\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__mio-0.8.11//:mio\",\n        \"@crate_index__num_cpus-1.16.0//:num_cpus\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n            \"@crate_index__windows-sys-0.48.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n            \"@crate_index__windows-sys-0.48.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n            \"@crate_index__windows-sys-0.48.0//:windows_sys\",  # cfg(windows)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [\n            \"@crate_index__socket2-0.5.6//:socket2\",  # cfg(not(target_family = \"wasm\"))\n        ],\n        \"//conditions:default\": [],\n    }),\n    proc_macro_deps = [\n        \"@crate_index__tokio-macros-2.2.0//:tokio_macros\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"bytes\",\n        \"default\",\n        \"fs\",\n        \"io-std\",\n        \"io-util\",\n        \"libc\",\n        \"macros\",\n        \"mio\",\n        \"net\",\n        \"num_cpus\",\n        \"rt\",\n        \"rt-multi-thread\",\n        \"socket2\",\n        \"sync\",\n        \"time\",\n        \"tokio-macros\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [\n            \"windows-sys\",  # aarch64-pc-windows-msvc\n        ],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [\n            \"windows-sys\",  # i686-pc-windows-msvc\n        ],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [\n            \"windows-sys\",  # x86_64-pc-windows-msvc\n        ],\n        \"//conditions:default\": [],\n    }),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tokio\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.36.0\",\n)\n"
            }
          },
          "crate_index__windows_aarch64_gnullvm-0.48.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows_aarch64_gnullvm-0.48.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_aarch64_gnullvm/0.48.5/download"
              ],
              "strip_prefix": "windows_aarch64_gnullvm-0.48.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_aarch64_gnullvm\",\n    deps = [\n        \"@crate_index__windows_aarch64_gnullvm-0.48.5//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_aarch64_gnullvm\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.48.5\",\n)\n\ncargo_build_script(\n    name = \"windows_aarch64_gnullvm_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_aarch64_gnullvm\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.48.5\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":windows_aarch64_gnullvm_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__snap-1.1.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__snap-1.1.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1b6b67fb9a61334225b5b790716f609cd58395f895b3fe8b328786812a40bc3b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/snap/1.1.1/download"
              ],
              "strip_prefix": "snap-1.1.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"snap\",\n    deps = [\n        \"@crate_index__snap-1.1.1//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=snap\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.1.1\",\n)\n\ncargo_build_script(\n    name = \"snap_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=snap\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.1.1\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":snap_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__p12-0.6.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__p12-0.6.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "d4873306de53fe82e7e484df31e1e947d61514b6ea2ed6cd7b45d63006fd9224",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/p12/0.6.3/download"
              ],
              "strip_prefix": "p12-0.6.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"p12\",\n    deps = [\n        \"@crate_index__cbc-0.1.2//:cbc\",\n        \"@crate_index__cipher-0.4.4//:cipher\",\n        \"@crate_index__des-0.8.1//:des\",\n        \"@crate_index__getrandom-0.2.12//:getrandom\",\n        \"@crate_index__hmac-0.12.1//:hmac\",\n        \"@crate_index__lazy_static-1.4.0//:lazy_static\",\n        \"@crate_index__rc2-0.8.1//:rc2\",\n        \"@crate_index__sha1-0.10.6//:sha1\",\n        \"@crate_index__yasna-0.5.2//:yasna\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=p12\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.6.3\",\n)\n"
            }
          },
          "crate_index__heck-0.3.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__heck-0.3.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "6d621efb26863f0e9924c6ac577e8275e5e6b77455db64ffa6c65c904e9e132c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/heck/0.3.3/download"
              ],
              "strip_prefix": "heck-0.3.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"heck\",\n    deps = [\n        \"@crate_index__unicode-segmentation-1.11.0//:unicode_segmentation\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=heck\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.3\",\n)\n"
            }
          },
          "crate_index__ryu-1.0.17": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__ryu-1.0.17",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e86697c916019a8588c99b5fac3cead74ec0b4b819707a682fd4d23fa0ce1ba1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ryu/1.0.17/download"
              ],
              "strip_prefix": "ryu-1.0.17",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"ryu\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=ryu\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.17\",\n)\n"
            }
          },
          "crate_index__hex-0.4.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__hex-0.4.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hex/0.4.3/download"
              ],
              "strip_prefix": "hex-0.4.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"hex\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=hex\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.3\",\n)\n"
            }
          },
          "crate_index__tracing-attributes-0.1.27": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tracing-attributes-0.1.27",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tracing-attributes/0.1.27/download"
              ],
              "strip_prefix": "tracing-attributes-0.1.27",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"tracing_attributes\",\n    deps = [\n        \"@crate_index__proc-macro2-1.0.78//:proc_macro2\",\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__syn-2.0.52//:syn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tracing-attributes\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.27\",\n)\n"
            }
          },
          "crate_index__async-executor-1.8.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__async-executor-1.8.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "17ae5ebefcc48e7452b4987947920dac9450be1110cadf34d1b8c116bdbaf97c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/async-executor/1.8.0/download"
              ],
              "strip_prefix": "async-executor-1.8.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"async_executor\",\n    deps = [\n        \"@crate_index__async-lock-3.3.0//:async_lock\",\n        \"@crate_index__async-task-4.7.0//:async_task\",\n        \"@crate_index__concurrent-queue-2.4.0//:concurrent_queue\",\n        \"@crate_index__fastrand-2.0.1//:fastrand\",\n        \"@crate_index__futures-lite-2.2.0//:futures_lite\",\n        \"@crate_index__slab-0.4.9//:slab\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=async-executor\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.8.0\",\n)\n"
            }
          },
          "crate_index__wasi-0.11.0-wasi-snapshot-preview1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__wasi-0.11.0-wasi-snapshot-preview1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasi/0.11.0+wasi-snapshot-preview1/download"
              ],
              "strip_prefix": "wasi-0.11.0+wasi-snapshot-preview1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"wasi\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=wasi\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.11.0+wasi-snapshot-preview1\",\n)\n"
            }
          },
          "crate_index__cookie-factory-0.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__cookie-factory-0.3.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "396de984970346b0d9e93d1415082923c679e5ae5c3ee3dcbd104f5610af126b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cookie-factory/0.3.2/download"
              ],
              "strip_prefix": "cookie-factory-0.3.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"cookie_factory\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=cookie-factory\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.2\",\n)\n"
            }
          },
          "crate_index__inout-0.1.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__inout-0.1.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a0c10553d664a4d0bcff9f4215d0aac67a639cc68ef660840afe309b807bc9f5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/inout/0.1.3/download"
              ],
              "strip_prefix": "inout-0.1.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"inout\",\n    deps = [\n        \"@crate_index__block-padding-0.3.3//:block_padding\",\n        \"@crate_index__generic-array-0.14.7//:generic_array\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"block-padding\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=inout\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.3\",\n)\n"
            }
          },
          "crate_index__async-reactor-trait-1.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__async-reactor-trait-1.1.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7a6012d170ad00de56c9ee354aef2e358359deb1ec504254e0e5a3774771de0e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/async-reactor-trait/1.1.0/download"
              ],
              "strip_prefix": "async-reactor-trait-1.1.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"async_reactor_trait\",\n    deps = [\n        \"@crate_index__async-io-1.13.0//:async_io\",\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__reactor-trait-1.1.0//:reactor_trait\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__async-trait-0.1.77//:async_trait\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=async-reactor-trait\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.1.0\",\n)\n"
            }
          },
          "crate_index__doc-comment-0.3.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__doc-comment-0.3.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "fea41bba32d969b513997752735605054bc0dfa92b4c56bf1189f2e174be7a10",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/doc-comment/0.3.3/download"
              ],
              "strip_prefix": "doc-comment-0.3.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"doc_comment\",\n    deps = [\n        \"@crate_index__doc-comment-0.3.3//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=doc-comment\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.3\",\n)\n\ncargo_build_script(\n    name = \"doc-comment_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=doc-comment\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.3.3\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":doc-comment_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__h2-0.3.24": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__h2-0.3.24",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bb2c4422095b67ee78da96fbb51a4cc413b3b25883c7717ff7ca1ab31022c9c9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/h2/0.3.24/download"
              ],
              "strip_prefix": "h2-0.3.24",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"h2\",\n    deps = [\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__fnv-1.0.7//:fnv\",\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-sink-0.3.30//:futures_sink\",\n        \"@crate_index__futures-util-0.3.30//:futures_util\",\n        \"@crate_index__http-0.2.11//:http\",\n        \"@crate_index__indexmap-2.2.5//:indexmap\",\n        \"@crate_index__slab-0.4.9//:slab\",\n        \"@crate_index__tokio-1.36.0//:tokio\",\n        \"@crate_index__tokio-util-0.7.10//:tokio_util\",\n        \"@crate_index__tracing-0.1.40//:tracing\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=h2\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.24\",\n)\n"
            }
          },
          "crate_index__crunchy-0.2.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__crunchy-0.2.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crunchy/0.2.2/download"
              ],
              "strip_prefix": "crunchy-0.2.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"crunchy\",\n    deps = [\n        \"@crate_index__crunchy-0.2.2//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=crunchy\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.2\",\n)\n\ncargo_build_script(\n    name = \"crunchy_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=crunchy\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.2.2\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":crunchy_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__num-integer-0.1.46": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__num-integer-0.1.46",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num-integer/0.1.46/download"
              ],
              "strip_prefix": "num-integer-0.1.46",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"num_integer\",\n    deps = [\n        \"@crate_index__num-traits-0.2.18//:num_traits\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"i128\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=num-integer\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.46\",\n)\n"
            }
          },
          "crate_index__scylla-cql-0.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__scylla-cql-0.1.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "345626c0dd5d9624c413daaba854685bba6a65cff4eb5ea0fb0366df16901f67",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/scylla-cql/0.1.0/download"
              ],
              "strip_prefix": "scylla-cql-0.1.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"scylla_cql\",\n    deps = [\n        \"@crate_index__byteorder-1.5.0//:byteorder\",\n        \"@crate_index__bytes-1.5.0//:bytes\",\n        \"@crate_index__lz4_flex-0.11.2//:lz4_flex\",\n        \"@crate_index__num_enum-0.6.1//:num_enum\",\n        \"@crate_index__snap-1.1.1//:snap\",\n        \"@crate_index__thiserror-1.0.57//:thiserror\",\n        \"@crate_index__tokio-1.36.0//:tokio\",\n        \"@crate_index__uuid-1.7.0//:uuid\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__async-trait-0.1.77//:async_trait\",\n        \"@crate_index__scylla-macros-0.4.0//:scylla_macros\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=scylla-cql\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.0\",\n)\n"
            }
          },
          "crate_index__windows_x86_64_msvc-0.48.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows_x86_64_msvc-0.48.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_msvc/0.48.5/download"
              ],
              "strip_prefix": "windows_x86_64_msvc-0.48.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_x86_64_msvc\",\n    deps = [\n        \"@crate_index__windows_x86_64_msvc-0.48.5//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.48.5\",\n)\n\ncargo_build_script(\n    name = \"windows_x86_64_msvc_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_x86_64_msvc\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.48.5\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":windows_x86_64_msvc_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__crossbeam-utils-0.8.19": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__crossbeam-utils-0.8.19",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "248e3bacc7dc6baa3b21e405ee045c3047101a49145e7e9eca583ab4c2ca5345",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crossbeam-utils/0.8.19/download"
              ],
              "strip_prefix": "crossbeam-utils-0.8.19",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"crossbeam_utils\",\n    deps = [\n        \"@crate_index__crossbeam-utils-0.8.19//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=crossbeam-utils\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.19\",\n)\n\ncargo_build_script(\n    name = \"crossbeam-utils_bs\",\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=crossbeam-utils\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.8.19\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":crossbeam-utils_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__winapi-0.3.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__winapi-0.3.9",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi/0.3.9/download"
              ],
              "strip_prefix": "winapi-0.3.9",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"winapi\",\n    deps = [\n        \"@crate_index__winapi-0.3.9//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"consoleapi\",\n        \"errhandlingapi\",\n        \"fileapi\",\n        \"handleapi\",\n        \"minwindef\",\n        \"processenv\",\n        \"std\",\n        \"sysinfoapi\",\n        \"winbase\",\n        \"wincon\",\n        \"winerror\",\n        \"winnt\",\n        \"ws2ipdef\",\n        \"ws2tcpip\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=winapi\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.3.9\",\n)\n\ncargo_build_script(\n    name = \"winapi_bs\",\n    crate_features = [\n        \"consoleapi\",\n        \"errhandlingapi\",\n        \"fileapi\",\n        \"handleapi\",\n        \"minwindef\",\n        \"processenv\",\n        \"std\",\n        \"sysinfoapi\",\n        \"winbase\",\n        \"wincon\",\n        \"winerror\",\n        \"winnt\",\n        \"ws2ipdef\",\n        \"ws2tcpip\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2015\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=winapi\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.3.9\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":winapi_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__matchit-0.7.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__matchit-0.7.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "0e7465ac9959cc2b1404e8e2367b43684a6d13790fe23056cc8c6c5a6b7bcb94",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/matchit/0.7.3/download"
              ],
              "strip_prefix": "matchit-0.7.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"matchit\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=matchit\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.7.3\",\n)\n"
            }
          },
          "crate_index__iana-time-zone-haiku-0.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__iana-time-zone-haiku-0.1.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/iana-time-zone-haiku/0.1.2/download"
              ],
              "strip_prefix": "iana-time-zone-haiku-0.1.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"iana_time_zone_haiku\",\n    deps = [\n        \"@crate_index__iana-time-zone-haiku-0.1.2//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=iana-time-zone-haiku\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.2\",\n)\n\ncargo_build_script(\n    name = \"iana-time-zone-haiku_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__cc-1.0.88//:cc\",\n    ],\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=iana-time-zone-haiku\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.1.2\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":iana-time-zone-haiku_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__thiserror-1.0.57": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__thiserror-1.0.57",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1e45bcbe8ed29775f228095caf2cd67af7a4ccf756ebff23a306bf3e8b47b24b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/thiserror/1.0.57/download"
              ],
              "strip_prefix": "thiserror-1.0.57",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"thiserror\",\n    deps = [\n        \"@crate_index__thiserror-1.0.57//:build_script_build\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__thiserror-impl-1.0.57//:thiserror_impl\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=thiserror\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.57\",\n)\n\ncargo_build_script(\n    name = \"thiserror_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=thiserror\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.0.57\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":thiserror_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__flume-0.11.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__flume-0.11.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "55ac459de2512911e4b674ce33cf20befaba382d05b62b008afc1c8b57cbf181",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/flume/0.11.0/download"
              ],
              "strip_prefix": "flume-0.11.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"flume\",\n    deps = [\n        \"@crate_index__spin-0.9.8//:spin\",\n    ],\n    aliases = {\n        \"@crate_index__spin-0.9.8//:spin\": \"spin1\",\n    },\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=flume\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.11.0\",\n)\n"
            }
          },
          "crate_index__bytemuck-1.14.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__bytemuck-1.14.3",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "a2ef034f05691a48569bd920a96c81b9d91bbad1ab5ac7c4616c1f6ef36cb79f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bytemuck/1.14.3/download"
              ],
              "strip_prefix": "bytemuck-1.14.3",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"bytemuck\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"extern_crate_alloc\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=bytemuck\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.14.3\",\n)\n"
            }
          },
          "crate_index__security-framework-sys-2.9.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__security-framework-sys-2.9.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "e932934257d3b408ed8f30db49d85ea163bfe74961f017f405b025af298f0c7a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/security-framework-sys/2.9.1/download"
              ],
              "strip_prefix": "security-framework-sys-2.9.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"security_framework_sys\",\n    deps = [\n        \"@crate_index__core-foundation-sys-0.8.6//:core_foundation_sys\",\n        \"@crate_index__libc-0.2.153//:libc\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"OSX_10_9\",\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=security-framework-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"2.9.1\",\n)\n"
            }
          },
          "crate_index__regex-automata-0.4.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__regex-automata-0.4.5",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5bb987efffd3c6d0d8f5f89510bb458559eab11e4f869acb20bf845e016259cd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex-automata/0.4.5/download"
              ],
              "strip_prefix": "regex-automata-0.4.5",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"regex_automata\",\n    deps = [\n        \"@crate_index__regex-syntax-0.8.2//:regex_syntax\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"meta\",\n        \"nfa-pikevm\",\n        \"nfa-thompson\",\n        \"std\",\n        \"syntax\",\n        \"unicode-bool\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=regex-automata\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.5\",\n)\n"
            }
          },
          "crate_index__openssl-sys-0.9.101": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__openssl-sys-0.9.101",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "dda2b0f344e78efc2facf7d195d098df0dd72151b26ab98da807afc26c198dff",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/openssl-sys/0.9.101/download"
              ],
              "strip_prefix": "openssl-sys-0.9.101",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"openssl_sys\",\n    deps = [\n        \"@crate_index__libc-0.2.153//:libc\",\n        \"@crate_index__openssl-sys-0.9.101//:build_script_main\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=openssl-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.9.101\",\n)\n\ncargo_build_script(\n    name = \"openssl-sys_bs\",\n    crate_name = \"build_script_main\",\n    crate_root = \"build/main.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    deps = [\n        \"@crate_index__cc-1.0.88//:cc\",\n        \"@crate_index__pkg-config-0.3.30//:pkg_config\",\n        \"@crate_index__vcpkg-0.2.15//:vcpkg\",\n    ],\n    edition = \"2018\",\n    links = \"openssl\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=openssl-sys\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.9.101\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_main\",\n    actual = \":openssl-sys_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__anyhow-1.0.80": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__anyhow-1.0.80",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "5ad32ce52e4161730f7098c077cd2ed6229b5804ccf99e5366be1ab72a98b4e1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anyhow/1.0.80/download"
              ],
              "strip_prefix": "anyhow-1.0.80",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"anyhow\",\n    deps = [\n        \"@crate_index__anyhow-1.0.80//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=anyhow\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.0.80\",\n)\n\ncargo_build_script(\n    name = \"anyhow_bs\",\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=anyhow\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"1.0.80\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":anyhow_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__criterion-plot-0.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__criterion-plot-0.5.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "6b50826342786a51a89e2da3a28f1c32b06e387201bc2d19791f622c673706b1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/criterion-plot/0.5.0/download"
              ],
              "strip_prefix": "criterion-plot-0.5.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"criterion_plot\",\n    deps = [\n        \"@crate_index__cast-0.3.0//:cast\",\n        \"@crate_index__itertools-0.10.5//:itertools\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=criterion-plot\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.5.0\",\n)\n"
            }
          },
          "crate_index__ciborium-0.2.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__ciborium-0.2.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "42e69ffd6f0917f5c029256a24d0161db17cea3997d185db0d35926308770f0e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ciborium/0.2.2/download"
              ],
              "strip_prefix": "ciborium-0.2.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"ciborium\",\n    deps = [\n        \"@crate_index__ciborium-io-0.2.2//:ciborium_io\",\n        \"@crate_index__ciborium-ll-0.2.2//:ciborium_ll\",\n        \"@crate_index__serde-1.0.197//:serde\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=ciborium\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.2\",\n)\n"
            }
          },
          "crate_index__getrandom-0.2.12": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__getrandom-0.2.12",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "190092ea657667030ac6a35e305e62fc4dd69fd98ac98631e5d3a2b1575a12b5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/getrandom/0.2.12/download"
              ],
              "strip_prefix": "getrandom-0.2.12",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"getrandom\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n    ] + select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"@crate_index__js-sys-0.3.68//:js_sys\",  # cfg(all(any(target_arch = \"wasm32\", target_arch = \"wasm64\"), target_os = \"unknown\"))\n            \"@crate_index__wasm-bindgen-0.2.91//:wasm_bindgen\",  # cfg(all(any(target_arch = \"wasm32\", target_arch = \"wasm64\"), target_os = \"unknown\"))\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"@crate_index__wasi-0.11.0-wasi-snapshot-preview1//:wasi\",  # cfg(target_os = \"wasi\")\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [\n            \"@crate_index__libc-0.2.153//:libc\",  # cfg(unix)\n        ],\n        \"//conditions:default\": [],\n    }),\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"std\",\n    ] + select({\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [\n            \"js\",  # wasm32-unknown-unknown\n            \"js-sys\",  # wasm32-unknown-unknown\n            \"wasm-bindgen\",  # wasm32-unknown-unknown\n        ],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [\n            \"js\",  # wasm32-wasi\n            \"js-sys\",  # wasm32-wasi\n            \"wasm-bindgen\",  # wasm32-wasi\n        ],\n        \"//conditions:default\": [],\n    }),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=getrandom\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.12\",\n)\n"
            }
          },
          "crate_index__parking_lot-0.12.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__parking_lot-0.12.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/parking_lot/0.12.1/download"
              ],
              "strip_prefix": "parking_lot-0.12.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"parking_lot\",\n    deps = [\n        \"@crate_index__lock_api-0.4.11//:lock_api\",\n        \"@crate_index__parking_lot_core-0.9.9//:parking_lot_core\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=parking_lot\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.12.1\",\n)\n"
            }
          },
          "crate_index__core-foundation-0.9.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__core-foundation-0.9.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "91e195e091a93c46f7102ec7818a2aa394e1e1771c3ab4825963fa03e45afb8f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/core-foundation/0.9.4/download"
              ],
              "strip_prefix": "core-foundation-0.9.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"core_foundation\",\n    deps = [\n        \"@crate_index__core-foundation-sys-0.8.6//:core_foundation_sys\",\n        \"@crate_index__libc-0.2.153//:libc\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"default\",\n        \"link\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=core-foundation\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.9.4\",\n)\n"
            }
          },
          "crate_index__futures-lite-1.13.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__futures-lite-1.13.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "49a9d51ce47660b1e808d3c990b4709f2f415d928835a17dfd16991515c46bce",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/futures-lite/1.13.0/download"
              ],
              "strip_prefix": "futures-lite-1.13.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"futures_lite\",\n    deps = [\n        \"@crate_index__fastrand-1.9.0//:fastrand\",\n        \"@crate_index__futures-core-0.3.30//:futures_core\",\n        \"@crate_index__futures-io-0.3.30//:futures_io\",\n        \"@crate_index__memchr-2.7.1//:memchr\",\n        \"@crate_index__parking-2.2.0//:parking\",\n        \"@crate_index__pin-project-lite-0.2.13//:pin_project_lite\",\n        \"@crate_index__waker-fn-1.1.1//:waker_fn\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"alloc\",\n        \"default\",\n        \"fastrand\",\n        \"futures-io\",\n        \"memchr\",\n        \"parking\",\n        \"std\",\n        \"waker-fn\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=futures-lite\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.13.0\",\n)\n"
            }
          },
          "crate_index__winreg-0.50.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__winreg-0.50.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "524e57b2c537c0f9b1e69f1965311ec12182b4122e45035b1508cd24d2adadb1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winreg/0.50.0/download"
              ],
              "strip_prefix": "winreg-0.50.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"winreg\",\n    deps = [\n        \"@crate_index__cfg-if-1.0.0//:cfg_if\",\n        \"@crate_index__windows-sys-0.48.0//:windows_sys\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=winreg\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.50.0\",\n)\n"
            }
          },
          "crate_index__amq-protocol-7.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__amq-protocol-7.1.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "1d40d8b2465c7959dd40cee32ba6ac334b5de57e9fca0cc756759894a4152a5d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/amq-protocol/7.1.2/download"
              ],
              "strip_prefix": "amq-protocol-7.1.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"amq_protocol\",\n    deps = [\n        \"@crate_index__amq-protocol-7.1.2//:build_script_build\",\n        \"@crate_index__amq-protocol-tcp-7.1.2//:amq_protocol_tcp\",\n        \"@crate_index__amq-protocol-types-7.1.2//:amq_protocol_types\",\n        \"@crate_index__amq-protocol-uri-7.1.2//:amq_protocol_uri\",\n        \"@crate_index__cookie-factory-0.3.2//:cookie_factory\",\n        \"@crate_index__nom-7.1.3//:nom\",\n        \"@crate_index__serde-1.0.197//:serde\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"rustls-native-certs\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=amq-protocol\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"7.1.2\",\n)\n\ncargo_build_script(\n    name = \"amq-protocol_bs\",\n    crate_features = [\n        \"rustls-native-certs\",\n    ],\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=amq-protocol\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"7.1.2\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":amq-protocol_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__r2d2-0.8.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__r2d2-0.8.10",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "51de85fb3fb6524929c8a2eb85e6b6d363de4e8c48f9e2c2eac4944abc181c93",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/r2d2/0.8.10/download"
              ],
              "strip_prefix": "r2d2-0.8.10",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"r2d2\",\n    deps = [\n        \"@crate_index__log-0.4.21//:log\",\n        \"@crate_index__parking_lot-0.12.1//:parking_lot\",\n        \"@crate_index__scheduled-thread-pool-0.2.7//:scheduled_thread_pool\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=r2d2\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.8.10\",\n)\n"
            }
          },
          "crate_index__windows_aarch64_gnullvm-0.52.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__windows_aarch64_gnullvm-0.52.4",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "bcf46cf4c365c6f2d1cc93ce535f2c8b244591df96ceee75d8e83deb70a9cac9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_aarch64_gnullvm/0.52.4/download"
              ],
              "strip_prefix": "windows_aarch64_gnullvm-0.52.4",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//cargo:defs.bzl\", \"cargo_build_script\")\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"windows_aarch64_gnullvm\",\n    deps = [\n        \"@crate_index__windows_aarch64_gnullvm-0.52.4//:build_script_build\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_aarch64_gnullvm\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.52.4\",\n)\n\ncargo_build_script(\n    name = \"windows_aarch64_gnullvm_bs\",\n    crate_name = \"build_script_build\",\n    crate_root = \"build.rs\",\n    data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=windows_aarch64_gnullvm\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    version = \"0.52.4\",\n    visibility = [\"//visibility:private\"],\n)\n\nalias(\n    name = \"build_script_build\",\n    actual = \":windows_aarch64_gnullvm_bs\",\n    tags = [\"manual\"],\n)\n"
            }
          },
          "crate_index__criterion-0.5.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__criterion-0.5.1",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "f2b12d017a929603d80db1831cd3a24082f8137ce19c69e6447f54f5fc8d692f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/criterion/0.5.1/download"
              ],
              "strip_prefix": "criterion-0.5.1",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"criterion\",\n    deps = [\n        \"@crate_index__anes-0.1.6//:anes\",\n        \"@crate_index__cast-0.3.0//:cast\",\n        \"@crate_index__ciborium-0.2.2//:ciborium\",\n        \"@crate_index__clap-4.5.1//:clap\",\n        \"@crate_index__criterion-plot-0.5.0//:criterion_plot\",\n        \"@crate_index__is-terminal-0.4.12//:is_terminal\",\n        \"@crate_index__itertools-0.10.5//:itertools\",\n        \"@crate_index__num-traits-0.2.18//:num_traits\",\n        \"@crate_index__once_cell-1.19.0//:once_cell\",\n        \"@crate_index__oorandom-11.1.3//:oorandom\",\n        \"@crate_index__plotters-0.3.5//:plotters\",\n        \"@crate_index__rayon-1.9.0//:rayon\",\n        \"@crate_index__regex-1.10.3//:regex\",\n        \"@crate_index__serde-1.0.197//:serde\",\n        \"@crate_index__serde_json-1.0.114//:serde_json\",\n        \"@crate_index__tinytemplate-1.2.1//:tinytemplate\",\n        \"@crate_index__walkdir-2.5.0//:walkdir\",\n    ],\n    proc_macro_deps = [\n        \"@crate_index__serde_derive-1.0.197//:serde_derive\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"cargo_bench_support\",\n        \"default\",\n        \"html_reports\",\n        \"plotters\",\n        \"rayon\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=criterion\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.5.1\",\n)\n"
            }
          },
          "crate_index__pin-project-lite-0.2.13": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__pin-project-lite-0.2.13",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "8afb450f006bf6385ca15ef45d71d2288452bc3683ce2e2cacc0d18e4be60b58",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/pin-project-lite/0.2.13/download"
              ],
              "strip_prefix": "pin-project-lite-0.2.13",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"pin_project_lite\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=pin-project-lite\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.13\",\n)\n"
            }
          },
          "crate_index__wasm-bindgen-macro-0.2.91": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__wasm-bindgen-macro-0.2.91",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b30af9e2d358182b5c7449424f017eba305ed32a7010509ede96cdc4696c46ed",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-macro/0.2.91/download"
              ],
              "strip_prefix": "wasm-bindgen-macro-0.2.91",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_proc_macro\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_proc_macro(\n    name = \"wasm_bindgen_macro\",\n    deps = [\n        \"@crate_index__quote-1.0.35//:quote\",\n        \"@crate_index__wasm-bindgen-macro-support-0.2.91//:wasm_bindgen_macro_support\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"spans\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=wasm-bindgen-macro\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.2.91\",\n)\n"
            }
          },
          "crate_index__aho-corasick-1.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__aho-corasick-1.1.2",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/aho-corasick/1.1.2/download"
              ],
              "strip_prefix": "aho-corasick-1.1.2",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"aho_corasick\",\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=aho-corasick\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"1.1.2\",\n)\n"
            }
          },
          "crate_index__tracing-core-0.1.32": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__tracing-core-0.1.32",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tracing-core/0.1.32/download"
              ],
              "strip_prefix": "tracing-core-0.1.32",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"tracing_core\",\n    deps = [\n        \"@crate_index__once_cell-1.19.0//:once_cell\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_features = [\n        \"once_cell\",\n        \"std\",\n    ],\n    crate_root = \"src/lib.rs\",\n    edition = \"2018\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=tracing-core\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.1.32\",\n)\n"
            }
          },
          "crate_index__cloudinary-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~crate~crate_index__cloudinary-0.4.0",
              "patch_args": [
                "-p0"
              ],
              "patch_tool": "",
              "patches": [],
              "remote_patch_strip": 1,
              "sha256": "3b2bf9354f9e6756343f66fef23bc44fbae5fd1f61af3fd4ae3fccb72977a2f0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cloudinary/0.4.0/download"
              ],
              "strip_prefix": "cloudinary-0.4.0",
              "build_file_content": "###############################################################################\n# @generated\n# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To \n# regenerate this file, run the following:\n#\n#     Run 'cargo update [--workspace]'\n###############################################################################\n\nload(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\n# buildifier: disable=bzl-visibility\nload(\"@rules_rust//crate_universe/private:selects.bzl\", \"selects\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nrust_library(\n    name = \"cloudinary\",\n    deps = [\n        \"@crate_index__anyhow-1.0.80//:anyhow\",\n        \"@crate_index__chrono-0.4.34//:chrono\",\n        \"@crate_index__itertools-0.12.1//:itertools\",\n        \"@crate_index__mime-0.3.17//:mime\",\n        \"@crate_index__reqwest-0.11.24//:reqwest\",\n        \"@crate_index__serde-1.0.197//:serde\",\n        \"@crate_index__serde_json-1.0.114//:serde_json\",\n        \"@crate_index__sha1-0.10.6//:sha1\",\n        \"@crate_index__tokio-1.36.0//:tokio\",\n        \"@crate_index__tokio-util-0.7.10//:tokio_util\",\n        \"@crate_index__url-2.5.0//:url\",\n    ],\n    compile_data = glob(\n        allow_empty = True,\n        include = [\"**\"],\n        exclude = [\n            \"**/* *\",\n            \".tmp_git_root/**/*\",\n            \"BUILD\",\n            \"BUILD.bazel\",\n            \"WORKSPACE\",\n            \"WORKSPACE.bazel\",\n        ],\n    ),\n    crate_root = \"src/lib.rs\",\n    edition = \"2021\",\n    rustc_flags = [\n        \"--cap-lints=allow\",\n    ],\n    srcs = glob(\n        allow_empty = False,\n        include = [\"**/*.rs\"],\n    ),\n    tags = [\n        \"cargo-bazel\",\n        \"crate-name=cloudinary\",\n        \"manual\",\n        \"noclippy\",\n        \"norustfmt\",\n    ],\n    target_compatible_with = select({\n        \"@rules_rust//rust/platform:aarch64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios\": [],\n        \"@rules_rust//rust/platform:aarch64-apple-ios-sim\": [],\n        \"@rules_rust//rust/platform:aarch64-fuchsia\": [],\n        \"@rules_rust//rust/platform:aarch64-linux-android\": [],\n        \"@rules_rust//rust/platform:aarch64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:aarch64-unknown-nto-qnx710\": [],\n        \"@rules_rust//rust/platform:arm-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:armv7-linux-androideabi\": [],\n        \"@rules_rust//rust/platform:armv7-unknown-linux-gnueabi\": [],\n        \"@rules_rust//rust/platform:i686-apple-darwin\": [],\n        \"@rules_rust//rust/platform:i686-linux-android\": [],\n        \"@rules_rust//rust/platform:i686-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:i686-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:i686-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:powerpc-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:riscv32imc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:riscv64gc-unknown-none-elf\": [],\n        \"@rules_rust//rust/platform:s390x-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:thumbv7em-none-eabi\": [],\n        \"@rules_rust//rust/platform:thumbv8m.main-none-eabi\": [],\n        \"@rules_rust//rust/platform:wasm32-unknown-unknown\": [],\n        \"@rules_rust//rust/platform:wasm32-wasi\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-darwin\": [],\n        \"@rules_rust//rust/platform:x86_64-apple-ios\": [],\n        \"@rules_rust//rust/platform:x86_64-fuchsia\": [],\n        \"@rules_rust//rust/platform:x86_64-linux-android\": [],\n        \"@rules_rust//rust/platform:x86_64-pc-windows-msvc\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-freebsd\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-linux-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-nixos-gnu\": [],\n        \"@rules_rust//rust/platform:x86_64-unknown-none\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    version = \"0.4.0\",\n)\n"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "rules_rust~0.40.0",
            "bazel_skylib",
            "bazel_skylib~1.5.0"
          ],
          [
            "rules_rust~0.40.0",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_rust~0.40.0",
            "cargo_bazel_bootstrap",
            "rules_rust~0.40.0~cargo_bazel_bootstrap~cargo_bazel_bootstrap"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust",
            "rules_rust~0.40.0"
          ],
          [
            "rules_rust~0.40.0",
            "rust_host_tools",
            "rules_rust~0.40.0~rust~rust_host_tools"
          ]
        ]
      }
    },
    "@@rules_rust~0.40.0//crate_universe/private/module_extensions:cargo_bazel_bootstrap.bzl%cargo_bazel_bootstrap": {
      "general": {
        "bzlTransitiveDigest": "o9uBpU87QEWhQVivBsJqdDOZiniwJdCeavVSWzhX6wY=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "cargo_bazel_bootstrap": {
            "bzlFile": "@@rules_rust~0.40.0//cargo/private:cargo_bootstrap.bzl",
            "ruleClassName": "cargo_bootstrap_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~cargo_bazel_bootstrap~cargo_bazel_bootstrap",
              "srcs": [
                "@@rules_rust~0.40.0//crate_universe:src/api.rs",
                "@@rules_rust~0.40.0//crate_universe:src/api/lockfile.rs",
                "@@rules_rust~0.40.0//crate_universe:src/cli.rs",
                "@@rules_rust~0.40.0//crate_universe:src/cli/generate.rs",
                "@@rules_rust~0.40.0//crate_universe:src/cli/query.rs",
                "@@rules_rust~0.40.0//crate_universe:src/cli/splice.rs",
                "@@rules_rust~0.40.0//crate_universe:src/cli/vendor.rs",
                "@@rules_rust~0.40.0//crate_universe:src/config.rs",
                "@@rules_rust~0.40.0//crate_universe:src/context.rs",
                "@@rules_rust~0.40.0//crate_universe:src/context/crate_context.rs",
                "@@rules_rust~0.40.0//crate_universe:src/context/platforms.rs",
                "@@rules_rust~0.40.0//crate_universe:src/lib.rs",
                "@@rules_rust~0.40.0//crate_universe:src/lockfile.rs",
                "@@rules_rust~0.40.0//crate_universe:src/main.rs",
                "@@rules_rust~0.40.0//crate_universe:src/metadata.rs",
                "@@rules_rust~0.40.0//crate_universe:src/metadata/dependency.rs",
                "@@rules_rust~0.40.0//crate_universe:src/metadata/metadata_annotation.rs",
                "@@rules_rust~0.40.0//crate_universe:src/rendering.rs",
                "@@rules_rust~0.40.0//crate_universe:src/rendering/template_engine.rs",
                "@@rules_rust~0.40.0//crate_universe:src/rendering/templates/module_bzl.j2",
                "@@rules_rust~0.40.0//crate_universe:src/rendering/templates/partials/header.j2",
                "@@rules_rust~0.40.0//crate_universe:src/rendering/templates/partials/module/aliases_map.j2",
                "@@rules_rust~0.40.0//crate_universe:src/rendering/templates/partials/module/deps_map.j2",
                "@@rules_rust~0.40.0//crate_universe:src/rendering/templates/partials/module/repo_git.j2",
                "@@rules_rust~0.40.0//crate_universe:src/rendering/templates/partials/module/repo_http.j2",
                "@@rules_rust~0.40.0//crate_universe:src/rendering/templates/vendor_module.j2",
                "@@rules_rust~0.40.0//crate_universe:src/rendering/verbatim/alias_rules.bzl",
                "@@rules_rust~0.40.0//crate_universe:src/select.rs",
                "@@rules_rust~0.40.0//crate_universe:src/splicing.rs",
                "@@rules_rust~0.40.0//crate_universe:src/splicing/cargo_config.rs",
                "@@rules_rust~0.40.0//crate_universe:src/splicing/crate_index_lookup.rs",
                "@@rules_rust~0.40.0//crate_universe:src/splicing/splicer.rs",
                "@@rules_rust~0.40.0//crate_universe:src/test.rs",
                "@@rules_rust~0.40.0//crate_universe:src/utils.rs",
                "@@rules_rust~0.40.0//crate_universe:src/utils/starlark.rs",
                "@@rules_rust~0.40.0//crate_universe:src/utils/starlark/glob.rs",
                "@@rules_rust~0.40.0//crate_universe:src/utils/starlark/label.rs",
                "@@rules_rust~0.40.0//crate_universe:src/utils/starlark/select.rs",
                "@@rules_rust~0.40.0//crate_universe:src/utils/starlark/select_dict.rs",
                "@@rules_rust~0.40.0//crate_universe:src/utils/starlark/select_list.rs",
                "@@rules_rust~0.40.0//crate_universe:src/utils/starlark/select_scalar.rs",
                "@@rules_rust~0.40.0//crate_universe:src/utils/starlark/select_set.rs",
                "@@rules_rust~0.40.0//crate_universe:src/utils/starlark/serialize.rs",
                "@@rules_rust~0.40.0//crate_universe:src/utils/starlark/target_compatible_with.rs",
                "@@rules_rust~0.40.0//crate_universe:src/utils/target_triple.rs"
              ],
              "binary": "cargo-bazel",
              "cargo_lockfile": "@@rules_rust~0.40.0//crate_universe:Cargo.lock",
              "cargo_toml": "@@rules_rust~0.40.0//crate_universe:Cargo.toml",
              "version": "1.76.0",
              "timeout": 900,
              "rust_toolchain_cargo_template": "@rust_host_tools//:bin/{tool}",
              "rust_toolchain_rustc_template": "@rust_host_tools//:bin/{tool}"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "rules_rust~0.40.0",
            "bazel_skylib",
            "bazel_skylib~1.5.0"
          ],
          [
            "rules_rust~0.40.0",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust",
            "rules_rust~0.40.0"
          ]
        ]
      }
    },
    "@@rules_rust~0.40.0//rust:extensions.bzl%rust": {
      "general": {
        "bzlTransitiveDigest": "I2ECWAfjTweoEwT+ulurWMJlNijPuXMqs3vBh+mgvd0=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly_tools",
              "exec_triple": "x86_64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "x86_64-unknown-linux-gnu",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_windows_x86_64__wasm32-wasi__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_x86_64__wasm32-wasi__stable_tools",
              "exec_triple": "x86_64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_darwin_aarch64__wasm32-wasi__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_aarch64__wasm32-wasi__stable_tools",
              "exec_triple": "aarch64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_darwin_x86_64__wasm32-wasi__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_x86_64__wasm32-wasi__stable_tools",
              "exec_triple": "x86_64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_linux_aarch64__aarch64-unknown-linux-gnu__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_aarch64__aarch64-unknown-linux-gnu__stable_tools",
              "exec_triple": "aarch64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "aarch64-unknown-linux-gnu",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_windows_x86_64": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_set_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_x86_64",
              "toolchains": [
                "@rust_windows_x86_64__x86_64-pc-windows-msvc__stable//:toolchain",
                "@rust_windows_x86_64__x86_64-pc-windows-msvc__nightly//:toolchain",
                "@rust_windows_x86_64__wasm32-unknown-unknown__stable//:toolchain",
                "@rust_windows_x86_64__wasm32-unknown-unknown__nightly//:toolchain",
                "@rust_windows_x86_64__wasm32-wasi__stable//:toolchain",
                "@rust_windows_x86_64__wasm32-wasi__nightly//:toolchain"
              ]
            }
          },
          "rust_windows_aarch64__aarch64-pc-windows-msvc__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_aarch64__aarch64-pc-windows-msvc__nightly",
              "toolchain": "@rust_windows_aarch64__aarch64-pc-windows-msvc__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:windows"
              ]
            }
          },
          "rust_windows_aarch64__wasm32-wasi__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_aarch64__wasm32-wasi__stable_tools",
              "exec_triple": "aarch64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_windows_aarch64__aarch64-pc-windows-msvc__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_aarch64__aarch64-pc-windows-msvc__stable_tools",
              "exec_triple": "aarch64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "aarch64-pc-windows-msvc",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_windows_aarch64": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_set_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_aarch64",
              "toolchains": [
                "@rust_windows_aarch64__aarch64-pc-windows-msvc__stable//:toolchain",
                "@rust_windows_aarch64__aarch64-pc-windows-msvc__nightly//:toolchain",
                "@rust_windows_aarch64__wasm32-unknown-unknown__stable//:toolchain",
                "@rust_windows_aarch64__wasm32-unknown-unknown__nightly//:toolchain",
                "@rust_windows_aarch64__wasm32-wasi__stable//:toolchain",
                "@rust_windows_aarch64__wasm32-wasi__nightly//:toolchain"
              ]
            }
          },
          "rustfmt_nightly-2024-02-08__x86_64-unknown-linux-gnu": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rustfmt_nightly-2024-02-08__x86_64-unknown-linux-gnu",
              "toolchain": "@rustfmt_nightly-2024-02-08__x86_64-unknown-linux-gnu_tools//:rustfmt_toolchain",
              "toolchain_type": "@rules_rust//rust/rustfmt:toolchain_type",
              "target_settings": [],
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": []
            }
          },
          "rust_linux_x86_64__wasm32-unknown-unknown__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_x86_64__wasm32-unknown-unknown__stable",
              "toolchain": "@rust_linux_x86_64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_windows_x86_64__x86_64-pc-windows-msvc__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_x86_64__x86_64-pc-windows-msvc__stable_tools",
              "exec_triple": "x86_64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "x86_64-pc-windows-msvc",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_freebsd_x86_64__wasm32-unknown-unknown__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_freebsd_x86_64__wasm32-unknown-unknown__nightly_tools",
              "exec_triple": "x86_64-unknown-freebsd",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rustfmt_nightly-2024-02-08__x86_64-apple-darwin": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rustfmt_nightly-2024-02-08__x86_64-apple-darwin",
              "toolchain": "@rustfmt_nightly-2024-02-08__x86_64-apple-darwin_tools//:rustfmt_toolchain",
              "toolchain_type": "@rules_rust//rust/rustfmt:toolchain_type",
              "target_settings": [],
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": []
            }
          },
          "rust_analyzer_1.76.0_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_analyzer_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_analyzer_1.76.0_tools",
              "version": "1.76.0",
              "iso_date": "",
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_linux_x86_64__wasm32-unknown-unknown__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_x86_64__wasm32-unknown-unknown__nightly",
              "toolchain": "@rust_linux_x86_64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_windows_aarch64__wasm32-wasi__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_aarch64__wasm32-wasi__nightly",
              "toolchain": "@rust_windows_aarch64__wasm32-wasi__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_darwin_aarch64__wasm32-unknown-unknown__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_aarch64__wasm32-unknown-unknown__stable",
              "toolchain": "@rust_darwin_aarch64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_windows_x86_64__wasm32-wasi__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_x86_64__wasm32-wasi__stable",
              "toolchain": "@rust_windows_x86_64__wasm32-wasi__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rustfmt_nightly-2024-02-08__aarch64-apple-darwin_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rustfmt_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rustfmt_nightly-2024-02-08__aarch64-apple-darwin_tools",
              "version": "nightly",
              "iso_date": "2024-02-08",
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "exec_triple": "aarch64-apple-darwin"
            }
          },
          "rust_linux_aarch64__wasm32-wasi__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_aarch64__wasm32-wasi__nightly",
              "toolchain": "@rust_linux_aarch64__wasm32-wasi__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_windows_x86_64__x86_64-pc-windows-msvc__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_x86_64__x86_64-pc-windows-msvc__nightly_tools",
              "exec_triple": "x86_64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "x86_64-pc-windows-msvc",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_windows_aarch64__wasm32-wasi__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_aarch64__wasm32-wasi__stable",
              "toolchain": "@rust_windows_aarch64__wasm32-wasi__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_darwin_x86_64__wasm32-unknown-unknown__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_x86_64__wasm32-unknown-unknown__stable_tools",
              "exec_triple": "x86_64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rustfmt_nightly-2024-02-08__aarch64-apple-darwin": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rustfmt_nightly-2024-02-08__aarch64-apple-darwin",
              "toolchain": "@rustfmt_nightly-2024-02-08__aarch64-apple-darwin_tools//:rustfmt_toolchain",
              "toolchain_type": "@rules_rust//rust/rustfmt:toolchain_type",
              "target_settings": [],
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": []
            }
          },
          "rust_linux_aarch64__wasm32-wasi__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_aarch64__wasm32-wasi__stable",
              "toolchain": "@rust_linux_aarch64__wasm32-wasi__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_darwin_aarch64__aarch64-apple-darwin__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_aarch64__aarch64-apple-darwin__nightly_tools",
              "exec_triple": "aarch64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "aarch64-apple-darwin",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rustfmt_nightly-2024-02-08__x86_64-unknown-freebsd": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rustfmt_nightly-2024-02-08__x86_64-unknown-freebsd",
              "toolchain": "@rustfmt_nightly-2024-02-08__x86_64-unknown-freebsd_tools//:rustfmt_toolchain",
              "toolchain_type": "@rules_rust//rust/rustfmt:toolchain_type",
              "target_settings": [],
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:freebsd"
              ],
              "target_compatible_with": []
            }
          },
          "rust_linux_x86_64__wasm32-unknown-unknown__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_x86_64__wasm32-unknown-unknown__stable_tools",
              "exec_triple": "x86_64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_darwin_x86_64__wasm32-unknown-unknown__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_x86_64__wasm32-unknown-unknown__nightly",
              "toolchain": "@rust_darwin_x86_64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_windows_aarch64__wasm32-wasi__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_aarch64__wasm32-wasi__nightly_tools",
              "exec_triple": "aarch64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_darwin_x86_64__wasm32-wasi__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_x86_64__wasm32-wasi__nightly_tools",
              "exec_triple": "x86_64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_freebsd_x86_64__wasm32-wasi__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_freebsd_x86_64__wasm32-wasi__stable_tools",
              "exec_triple": "x86_64-unknown-freebsd",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_host_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_host_tools",
              "exec_triple": "aarch64-apple-darwin",
              "target_triple": "aarch64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "dev_components": false,
              "edition": "2021",
              "rustfmt_version": "nightly/2024-02-08",
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "version": "1.76.0"
            }
          },
          "rust_freebsd_x86_64__wasm32-unknown-unknown__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_freebsd_x86_64__wasm32-unknown-unknown__stable",
              "toolchain": "@rust_freebsd_x86_64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:freebsd"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_freebsd_x86_64": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_set_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_freebsd_x86_64",
              "toolchains": [
                "@rust_freebsd_x86_64__x86_64-unknown-freebsd__stable//:toolchain",
                "@rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly//:toolchain",
                "@rust_freebsd_x86_64__wasm32-unknown-unknown__stable//:toolchain",
                "@rust_freebsd_x86_64__wasm32-unknown-unknown__nightly//:toolchain",
                "@rust_freebsd_x86_64__wasm32-wasi__stable//:toolchain",
                "@rust_freebsd_x86_64__wasm32-wasi__nightly//:toolchain"
              ]
            }
          },
          "rust_windows_x86_64__wasm32-unknown-unknown__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_x86_64__wasm32-unknown-unknown__stable",
              "toolchain": "@rust_windows_x86_64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rustfmt_nightly-2024-02-08__x86_64-unknown-linux-gnu_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rustfmt_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rustfmt_nightly-2024-02-08__x86_64-unknown-linux-gnu_tools",
              "version": "nightly",
              "iso_date": "2024-02-08",
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "exec_triple": "x86_64-unknown-linux-gnu"
            }
          },
          "rust_darwin_x86_64__wasm32-unknown-unknown__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_x86_64__wasm32-unknown-unknown__nightly_tools",
              "exec_triple": "x86_64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_linux_x86_64__x86_64-unknown-linux-gnu__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_x86_64__x86_64-unknown-linux-gnu__stable",
              "toolchain": "@rust_linux_x86_64__x86_64-unknown-linux-gnu__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:linux"
              ]
            }
          },
          "rust_windows_x86_64__wasm32-wasi__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_x86_64__wasm32-wasi__nightly_tools",
              "exec_triple": "x86_64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_windows_x86_64__x86_64-pc-windows-msvc__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_x86_64__x86_64-pc-windows-msvc__stable",
              "toolchain": "@rust_windows_x86_64__x86_64-pc-windows-msvc__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:windows"
              ]
            }
          },
          "rust_linux_x86_64__wasm32-wasi__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_x86_64__wasm32-wasi__stable",
              "toolchain": "@rust_linux_x86_64__wasm32-wasi__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_darwin_aarch64__wasm32-wasi__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_aarch64__wasm32-wasi__nightly",
              "toolchain": "@rust_darwin_aarch64__wasm32-wasi__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_darwin_x86_64__x86_64-apple-darwin__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_x86_64__x86_64-apple-darwin__nightly_tools",
              "exec_triple": "x86_64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "x86_64-apple-darwin",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_darwin_aarch64__aarch64-apple-darwin__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_aarch64__aarch64-apple-darwin__stable_tools",
              "exec_triple": "aarch64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "aarch64-apple-darwin",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_linux_aarch64__wasm32-wasi__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_aarch64__wasm32-wasi__stable_tools",
              "exec_triple": "aarch64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly_tools",
              "exec_triple": "aarch64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "aarch64-unknown-linux-gnu",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_linux_x86_64__wasm32-wasi__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_x86_64__wasm32-wasi__nightly",
              "toolchain": "@rust_linux_x86_64__wasm32-wasi__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_windows_aarch64__wasm32-unknown-unknown__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_aarch64__wasm32-unknown-unknown__stable",
              "toolchain": "@rust_windows_aarch64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_linux_aarch64": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_set_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_aarch64",
              "toolchains": [
                "@rust_linux_aarch64__aarch64-unknown-linux-gnu__stable//:toolchain",
                "@rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly//:toolchain",
                "@rust_linux_aarch64__wasm32-unknown-unknown__stable//:toolchain",
                "@rust_linux_aarch64__wasm32-unknown-unknown__nightly//:toolchain",
                "@rust_linux_aarch64__wasm32-wasi__stable//:toolchain",
                "@rust_linux_aarch64__wasm32-wasi__nightly//:toolchain"
              ]
            }
          },
          "rust_freebsd_x86_64__wasm32-wasi__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_freebsd_x86_64__wasm32-wasi__nightly",
              "toolchain": "@rust_freebsd_x86_64__wasm32-wasi__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:freebsd"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_darwin_x86_64__wasm32-wasi__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_x86_64__wasm32-wasi__nightly",
              "toolchain": "@rust_darwin_x86_64__wasm32-wasi__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly_tools",
              "exec_triple": "x86_64-unknown-freebsd",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "x86_64-unknown-freebsd",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_darwin_x86_64__x86_64-apple-darwin__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_x86_64__x86_64-apple-darwin__nightly",
              "toolchain": "@rust_darwin_x86_64__x86_64-apple-darwin__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:osx"
              ]
            }
          },
          "rustfmt_nightly-2024-02-08__aarch64-unknown-linux-gnu_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rustfmt_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rustfmt_nightly-2024-02-08__aarch64-unknown-linux-gnu_tools",
              "version": "nightly",
              "iso_date": "2024-02-08",
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "exec_triple": "aarch64-unknown-linux-gnu"
            }
          },
          "rust_windows_aarch64__aarch64-pc-windows-msvc__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_aarch64__aarch64-pc-windows-msvc__stable",
              "toolchain": "@rust_windows_aarch64__aarch64-pc-windows-msvc__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:windows"
              ]
            }
          },
          "rustfmt_nightly-2024-02-08__x86_64-apple-darwin_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rustfmt_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rustfmt_nightly-2024-02-08__x86_64-apple-darwin_tools",
              "version": "nightly",
              "iso_date": "2024-02-08",
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "exec_triple": "x86_64-apple-darwin"
            }
          },
          "rust_darwin_aarch64__aarch64-apple-darwin__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_aarch64__aarch64-apple-darwin__nightly",
              "toolchain": "@rust_darwin_aarch64__aarch64-apple-darwin__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:osx"
              ]
            }
          },
          "rustfmt_nightly-2024-02-08__aarch64-pc-windows-msvc": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rustfmt_nightly-2024-02-08__aarch64-pc-windows-msvc",
              "toolchain": "@rustfmt_nightly-2024-02-08__aarch64-pc-windows-msvc_tools//:rustfmt_toolchain",
              "toolchain_type": "@rules_rust//rust/rustfmt:toolchain_type",
              "target_settings": [],
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": []
            }
          },
          "rust_linux_aarch64__wasm32-unknown-unknown__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_aarch64__wasm32-unknown-unknown__nightly_tools",
              "exec_triple": "aarch64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_analyzer_1.76.0": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_analyzer_1.76.0",
              "toolchain": "@rust_analyzer_1.76.0_tools//:rust_analyzer_toolchain",
              "toolchain_type": "@rules_rust//rust/rust_analyzer:toolchain_type",
              "exec_compatible_with": [],
              "target_compatible_with": []
            }
          },
          "rust_toolchains": {
            "bzlFile": "@@rules_rust~0.40.0//rust/private:repository_utils.bzl",
            "ruleClassName": "toolchain_repository_hub",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_toolchains",
              "toolchain_names": [
                "rust_analyzer_1.76.0",
                "rust_darwin_aarch64__aarch64-apple-darwin__stable",
                "rust_darwin_aarch64__aarch64-apple-darwin__nightly",
                "rust_darwin_aarch64__wasm32-unknown-unknown__stable",
                "rust_darwin_aarch64__wasm32-unknown-unknown__nightly",
                "rust_darwin_aarch64__wasm32-wasi__stable",
                "rust_darwin_aarch64__wasm32-wasi__nightly",
                "rustfmt_nightly-2024-02-08__aarch64-apple-darwin",
                "rust_windows_aarch64__aarch64-pc-windows-msvc__stable",
                "rust_windows_aarch64__aarch64-pc-windows-msvc__nightly",
                "rust_windows_aarch64__wasm32-unknown-unknown__stable",
                "rust_windows_aarch64__wasm32-unknown-unknown__nightly",
                "rust_windows_aarch64__wasm32-wasi__stable",
                "rust_windows_aarch64__wasm32-wasi__nightly",
                "rustfmt_nightly-2024-02-08__aarch64-pc-windows-msvc",
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__stable",
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly",
                "rust_linux_aarch64__wasm32-unknown-unknown__stable",
                "rust_linux_aarch64__wasm32-unknown-unknown__nightly",
                "rust_linux_aarch64__wasm32-wasi__stable",
                "rust_linux_aarch64__wasm32-wasi__nightly",
                "rustfmt_nightly-2024-02-08__aarch64-unknown-linux-gnu",
                "rust_darwin_x86_64__x86_64-apple-darwin__stable",
                "rust_darwin_x86_64__x86_64-apple-darwin__nightly",
                "rust_darwin_x86_64__wasm32-unknown-unknown__stable",
                "rust_darwin_x86_64__wasm32-unknown-unknown__nightly",
                "rust_darwin_x86_64__wasm32-wasi__stable",
                "rust_darwin_x86_64__wasm32-wasi__nightly",
                "rustfmt_nightly-2024-02-08__x86_64-apple-darwin",
                "rust_windows_x86_64__x86_64-pc-windows-msvc__stable",
                "rust_windows_x86_64__x86_64-pc-windows-msvc__nightly",
                "rust_windows_x86_64__wasm32-unknown-unknown__stable",
                "rust_windows_x86_64__wasm32-unknown-unknown__nightly",
                "rust_windows_x86_64__wasm32-wasi__stable",
                "rust_windows_x86_64__wasm32-wasi__nightly",
                "rustfmt_nightly-2024-02-08__x86_64-pc-windows-msvc",
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__stable",
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly",
                "rust_freebsd_x86_64__wasm32-unknown-unknown__stable",
                "rust_freebsd_x86_64__wasm32-unknown-unknown__nightly",
                "rust_freebsd_x86_64__wasm32-wasi__stable",
                "rust_freebsd_x86_64__wasm32-wasi__nightly",
                "rustfmt_nightly-2024-02-08__x86_64-unknown-freebsd",
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__stable",
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly",
                "rust_linux_x86_64__wasm32-unknown-unknown__stable",
                "rust_linux_x86_64__wasm32-unknown-unknown__nightly",
                "rust_linux_x86_64__wasm32-wasi__stable",
                "rust_linux_x86_64__wasm32-wasi__nightly",
                "rustfmt_nightly-2024-02-08__x86_64-unknown-linux-gnu"
              ],
              "toolchain_labels": {
                "rust_analyzer_1.76.0": "@rust_analyzer_1.76.0_tools//:rust_analyzer_toolchain",
                "rust_darwin_aarch64__aarch64-apple-darwin__stable": "@rust_darwin_aarch64__aarch64-apple-darwin__stable_tools//:rust_toolchain",
                "rust_darwin_aarch64__aarch64-apple-darwin__nightly": "@rust_darwin_aarch64__aarch64-apple-darwin__nightly_tools//:rust_toolchain",
                "rust_darwin_aarch64__wasm32-unknown-unknown__stable": "@rust_darwin_aarch64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
                "rust_darwin_aarch64__wasm32-unknown-unknown__nightly": "@rust_darwin_aarch64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
                "rust_darwin_aarch64__wasm32-wasi__stable": "@rust_darwin_aarch64__wasm32-wasi__stable_tools//:rust_toolchain",
                "rust_darwin_aarch64__wasm32-wasi__nightly": "@rust_darwin_aarch64__wasm32-wasi__nightly_tools//:rust_toolchain",
                "rustfmt_nightly-2024-02-08__aarch64-apple-darwin": "@rustfmt_nightly-2024-02-08__aarch64-apple-darwin_tools//:rustfmt_toolchain",
                "rust_windows_aarch64__aarch64-pc-windows-msvc__stable": "@rust_windows_aarch64__aarch64-pc-windows-msvc__stable_tools//:rust_toolchain",
                "rust_windows_aarch64__aarch64-pc-windows-msvc__nightly": "@rust_windows_aarch64__aarch64-pc-windows-msvc__nightly_tools//:rust_toolchain",
                "rust_windows_aarch64__wasm32-unknown-unknown__stable": "@rust_windows_aarch64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
                "rust_windows_aarch64__wasm32-unknown-unknown__nightly": "@rust_windows_aarch64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
                "rust_windows_aarch64__wasm32-wasi__stable": "@rust_windows_aarch64__wasm32-wasi__stable_tools//:rust_toolchain",
                "rust_windows_aarch64__wasm32-wasi__nightly": "@rust_windows_aarch64__wasm32-wasi__nightly_tools//:rust_toolchain",
                "rustfmt_nightly-2024-02-08__aarch64-pc-windows-msvc": "@rustfmt_nightly-2024-02-08__aarch64-pc-windows-msvc_tools//:rustfmt_toolchain",
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__stable": "@rust_linux_aarch64__aarch64-unknown-linux-gnu__stable_tools//:rust_toolchain",
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly": "@rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly_tools//:rust_toolchain",
                "rust_linux_aarch64__wasm32-unknown-unknown__stable": "@rust_linux_aarch64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
                "rust_linux_aarch64__wasm32-unknown-unknown__nightly": "@rust_linux_aarch64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
                "rust_linux_aarch64__wasm32-wasi__stable": "@rust_linux_aarch64__wasm32-wasi__stable_tools//:rust_toolchain",
                "rust_linux_aarch64__wasm32-wasi__nightly": "@rust_linux_aarch64__wasm32-wasi__nightly_tools//:rust_toolchain",
                "rustfmt_nightly-2024-02-08__aarch64-unknown-linux-gnu": "@rustfmt_nightly-2024-02-08__aarch64-unknown-linux-gnu_tools//:rustfmt_toolchain",
                "rust_darwin_x86_64__x86_64-apple-darwin__stable": "@rust_darwin_x86_64__x86_64-apple-darwin__stable_tools//:rust_toolchain",
                "rust_darwin_x86_64__x86_64-apple-darwin__nightly": "@rust_darwin_x86_64__x86_64-apple-darwin__nightly_tools//:rust_toolchain",
                "rust_darwin_x86_64__wasm32-unknown-unknown__stable": "@rust_darwin_x86_64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
                "rust_darwin_x86_64__wasm32-unknown-unknown__nightly": "@rust_darwin_x86_64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
                "rust_darwin_x86_64__wasm32-wasi__stable": "@rust_darwin_x86_64__wasm32-wasi__stable_tools//:rust_toolchain",
                "rust_darwin_x86_64__wasm32-wasi__nightly": "@rust_darwin_x86_64__wasm32-wasi__nightly_tools//:rust_toolchain",
                "rustfmt_nightly-2024-02-08__x86_64-apple-darwin": "@rustfmt_nightly-2024-02-08__x86_64-apple-darwin_tools//:rustfmt_toolchain",
                "rust_windows_x86_64__x86_64-pc-windows-msvc__stable": "@rust_windows_x86_64__x86_64-pc-windows-msvc__stable_tools//:rust_toolchain",
                "rust_windows_x86_64__x86_64-pc-windows-msvc__nightly": "@rust_windows_x86_64__x86_64-pc-windows-msvc__nightly_tools//:rust_toolchain",
                "rust_windows_x86_64__wasm32-unknown-unknown__stable": "@rust_windows_x86_64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
                "rust_windows_x86_64__wasm32-unknown-unknown__nightly": "@rust_windows_x86_64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
                "rust_windows_x86_64__wasm32-wasi__stable": "@rust_windows_x86_64__wasm32-wasi__stable_tools//:rust_toolchain",
                "rust_windows_x86_64__wasm32-wasi__nightly": "@rust_windows_x86_64__wasm32-wasi__nightly_tools//:rust_toolchain",
                "rustfmt_nightly-2024-02-08__x86_64-pc-windows-msvc": "@rustfmt_nightly-2024-02-08__x86_64-pc-windows-msvc_tools//:rustfmt_toolchain",
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__stable": "@rust_freebsd_x86_64__x86_64-unknown-freebsd__stable_tools//:rust_toolchain",
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly": "@rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly_tools//:rust_toolchain",
                "rust_freebsd_x86_64__wasm32-unknown-unknown__stable": "@rust_freebsd_x86_64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
                "rust_freebsd_x86_64__wasm32-unknown-unknown__nightly": "@rust_freebsd_x86_64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
                "rust_freebsd_x86_64__wasm32-wasi__stable": "@rust_freebsd_x86_64__wasm32-wasi__stable_tools//:rust_toolchain",
                "rust_freebsd_x86_64__wasm32-wasi__nightly": "@rust_freebsd_x86_64__wasm32-wasi__nightly_tools//:rust_toolchain",
                "rustfmt_nightly-2024-02-08__x86_64-unknown-freebsd": "@rustfmt_nightly-2024-02-08__x86_64-unknown-freebsd_tools//:rustfmt_toolchain",
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__stable": "@rust_linux_x86_64__x86_64-unknown-linux-gnu__stable_tools//:rust_toolchain",
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly": "@rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly_tools//:rust_toolchain",
                "rust_linux_x86_64__wasm32-unknown-unknown__stable": "@rust_linux_x86_64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
                "rust_linux_x86_64__wasm32-unknown-unknown__nightly": "@rust_linux_x86_64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
                "rust_linux_x86_64__wasm32-wasi__stable": "@rust_linux_x86_64__wasm32-wasi__stable_tools//:rust_toolchain",
                "rust_linux_x86_64__wasm32-wasi__nightly": "@rust_linux_x86_64__wasm32-wasi__nightly_tools//:rust_toolchain",
                "rustfmt_nightly-2024-02-08__x86_64-unknown-linux-gnu": "@rustfmt_nightly-2024-02-08__x86_64-unknown-linux-gnu_tools//:rustfmt_toolchain"
              },
              "toolchain_types": {
                "rust_analyzer_1.76.0": "@rules_rust//rust/rust_analyzer:toolchain_type",
                "rust_darwin_aarch64__aarch64-apple-darwin__stable": "@rules_rust//rust:toolchain",
                "rust_darwin_aarch64__aarch64-apple-darwin__nightly": "@rules_rust//rust:toolchain",
                "rust_darwin_aarch64__wasm32-unknown-unknown__stable": "@rules_rust//rust:toolchain",
                "rust_darwin_aarch64__wasm32-unknown-unknown__nightly": "@rules_rust//rust:toolchain",
                "rust_darwin_aarch64__wasm32-wasi__stable": "@rules_rust//rust:toolchain",
                "rust_darwin_aarch64__wasm32-wasi__nightly": "@rules_rust//rust:toolchain",
                "rustfmt_nightly-2024-02-08__aarch64-apple-darwin": "@rules_rust//rust/rustfmt:toolchain_type",
                "rust_windows_aarch64__aarch64-pc-windows-msvc__stable": "@rules_rust//rust:toolchain",
                "rust_windows_aarch64__aarch64-pc-windows-msvc__nightly": "@rules_rust//rust:toolchain",
                "rust_windows_aarch64__wasm32-unknown-unknown__stable": "@rules_rust//rust:toolchain",
                "rust_windows_aarch64__wasm32-unknown-unknown__nightly": "@rules_rust//rust:toolchain",
                "rust_windows_aarch64__wasm32-wasi__stable": "@rules_rust//rust:toolchain",
                "rust_windows_aarch64__wasm32-wasi__nightly": "@rules_rust//rust:toolchain",
                "rustfmt_nightly-2024-02-08__aarch64-pc-windows-msvc": "@rules_rust//rust/rustfmt:toolchain_type",
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__stable": "@rules_rust//rust:toolchain",
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly": "@rules_rust//rust:toolchain",
                "rust_linux_aarch64__wasm32-unknown-unknown__stable": "@rules_rust//rust:toolchain",
                "rust_linux_aarch64__wasm32-unknown-unknown__nightly": "@rules_rust//rust:toolchain",
                "rust_linux_aarch64__wasm32-wasi__stable": "@rules_rust//rust:toolchain",
                "rust_linux_aarch64__wasm32-wasi__nightly": "@rules_rust//rust:toolchain",
                "rustfmt_nightly-2024-02-08__aarch64-unknown-linux-gnu": "@rules_rust//rust/rustfmt:toolchain_type",
                "rust_darwin_x86_64__x86_64-apple-darwin__stable": "@rules_rust//rust:toolchain",
                "rust_darwin_x86_64__x86_64-apple-darwin__nightly": "@rules_rust//rust:toolchain",
                "rust_darwin_x86_64__wasm32-unknown-unknown__stable": "@rules_rust//rust:toolchain",
                "rust_darwin_x86_64__wasm32-unknown-unknown__nightly": "@rules_rust//rust:toolchain",
                "rust_darwin_x86_64__wasm32-wasi__stable": "@rules_rust//rust:toolchain",
                "rust_darwin_x86_64__wasm32-wasi__nightly": "@rules_rust//rust:toolchain",
                "rustfmt_nightly-2024-02-08__x86_64-apple-darwin": "@rules_rust//rust/rustfmt:toolchain_type",
                "rust_windows_x86_64__x86_64-pc-windows-msvc__stable": "@rules_rust//rust:toolchain",
                "rust_windows_x86_64__x86_64-pc-windows-msvc__nightly": "@rules_rust//rust:toolchain",
                "rust_windows_x86_64__wasm32-unknown-unknown__stable": "@rules_rust//rust:toolchain",
                "rust_windows_x86_64__wasm32-unknown-unknown__nightly": "@rules_rust//rust:toolchain",
                "rust_windows_x86_64__wasm32-wasi__stable": "@rules_rust//rust:toolchain",
                "rust_windows_x86_64__wasm32-wasi__nightly": "@rules_rust//rust:toolchain",
                "rustfmt_nightly-2024-02-08__x86_64-pc-windows-msvc": "@rules_rust//rust/rustfmt:toolchain_type",
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__stable": "@rules_rust//rust:toolchain",
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly": "@rules_rust//rust:toolchain",
                "rust_freebsd_x86_64__wasm32-unknown-unknown__stable": "@rules_rust//rust:toolchain",
                "rust_freebsd_x86_64__wasm32-unknown-unknown__nightly": "@rules_rust//rust:toolchain",
                "rust_freebsd_x86_64__wasm32-wasi__stable": "@rules_rust//rust:toolchain",
                "rust_freebsd_x86_64__wasm32-wasi__nightly": "@rules_rust//rust:toolchain",
                "rustfmt_nightly-2024-02-08__x86_64-unknown-freebsd": "@rules_rust//rust/rustfmt:toolchain_type",
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__stable": "@rules_rust//rust:toolchain",
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly": "@rules_rust//rust:toolchain",
                "rust_linux_x86_64__wasm32-unknown-unknown__stable": "@rules_rust//rust:toolchain",
                "rust_linux_x86_64__wasm32-unknown-unknown__nightly": "@rules_rust//rust:toolchain",
                "rust_linux_x86_64__wasm32-wasi__stable": "@rules_rust//rust:toolchain",
                "rust_linux_x86_64__wasm32-wasi__nightly": "@rules_rust//rust:toolchain",
                "rustfmt_nightly-2024-02-08__x86_64-unknown-linux-gnu": "@rules_rust//rust/rustfmt:toolchain_type"
              },
              "exec_compatible_with": {
                "rust_analyzer_1.76.0": [],
                "rust_darwin_aarch64__aarch64-apple-darwin__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_aarch64__aarch64-apple-darwin__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_aarch64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_aarch64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_aarch64__wasm32-wasi__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_aarch64__wasm32-wasi__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:osx"
                ],
                "rustfmt_nightly-2024-02-08__aarch64-apple-darwin": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:osx"
                ],
                "rust_windows_aarch64__aarch64-pc-windows-msvc__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:windows"
                ],
                "rust_windows_aarch64__aarch64-pc-windows-msvc__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:windows"
                ],
                "rust_windows_aarch64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:windows"
                ],
                "rust_windows_aarch64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:windows"
                ],
                "rust_windows_aarch64__wasm32-wasi__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:windows"
                ],
                "rust_windows_aarch64__wasm32-wasi__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:windows"
                ],
                "rustfmt_nightly-2024-02-08__aarch64-pc-windows-msvc": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:windows"
                ],
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "rust_linux_aarch64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "rust_linux_aarch64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "rust_linux_aarch64__wasm32-wasi__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "rust_linux_aarch64__wasm32-wasi__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "rustfmt_nightly-2024-02-08__aarch64-unknown-linux-gnu": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "rust_darwin_x86_64__x86_64-apple-darwin__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_x86_64__x86_64-apple-darwin__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_x86_64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_x86_64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_x86_64__wasm32-wasi__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_x86_64__wasm32-wasi__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:osx"
                ],
                "rustfmt_nightly-2024-02-08__x86_64-apple-darwin": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:osx"
                ],
                "rust_windows_x86_64__x86_64-pc-windows-msvc__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ],
                "rust_windows_x86_64__x86_64-pc-windows-msvc__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ],
                "rust_windows_x86_64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ],
                "rust_windows_x86_64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ],
                "rust_windows_x86_64__wasm32-wasi__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ],
                "rust_windows_x86_64__wasm32-wasi__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ],
                "rustfmt_nightly-2024-02-08__x86_64-pc-windows-msvc": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ],
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:freebsd"
                ],
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:freebsd"
                ],
                "rust_freebsd_x86_64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:freebsd"
                ],
                "rust_freebsd_x86_64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:freebsd"
                ],
                "rust_freebsd_x86_64__wasm32-wasi__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:freebsd"
                ],
                "rust_freebsd_x86_64__wasm32-wasi__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:freebsd"
                ],
                "rustfmt_nightly-2024-02-08__x86_64-unknown-freebsd": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:freebsd"
                ],
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "rust_linux_x86_64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "rust_linux_x86_64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "rust_linux_x86_64__wasm32-wasi__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "rust_linux_x86_64__wasm32-wasi__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "rustfmt_nightly-2024-02-08__x86_64-unknown-linux-gnu": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ]
              },
              "target_compatible_with": {
                "rust_analyzer_1.76.0": [],
                "rust_darwin_aarch64__aarch64-apple-darwin__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_aarch64__aarch64-apple-darwin__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_aarch64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_darwin_aarch64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_darwin_aarch64__wasm32-wasi__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rust_darwin_aarch64__wasm32-wasi__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rustfmt_nightly-2024-02-08__aarch64-apple-darwin": [],
                "rust_windows_aarch64__aarch64-pc-windows-msvc__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:windows"
                ],
                "rust_windows_aarch64__aarch64-pc-windows-msvc__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:windows"
                ],
                "rust_windows_aarch64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_windows_aarch64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_windows_aarch64__wasm32-wasi__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rust_windows_aarch64__wasm32-wasi__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rustfmt_nightly-2024-02-08__aarch64-pc-windows-msvc": [],
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__stable": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly": [
                  "@platforms//cpu:aarch64",
                  "@platforms//os:linux"
                ],
                "rust_linux_aarch64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_linux_aarch64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_linux_aarch64__wasm32-wasi__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rust_linux_aarch64__wasm32-wasi__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rustfmt_nightly-2024-02-08__aarch64-unknown-linux-gnu": [],
                "rust_darwin_x86_64__x86_64-apple-darwin__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_x86_64__x86_64-apple-darwin__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:osx"
                ],
                "rust_darwin_x86_64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_darwin_x86_64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_darwin_x86_64__wasm32-wasi__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rust_darwin_x86_64__wasm32-wasi__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rustfmt_nightly-2024-02-08__x86_64-apple-darwin": [],
                "rust_windows_x86_64__x86_64-pc-windows-msvc__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ],
                "rust_windows_x86_64__x86_64-pc-windows-msvc__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:windows"
                ],
                "rust_windows_x86_64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_windows_x86_64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_windows_x86_64__wasm32-wasi__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rust_windows_x86_64__wasm32-wasi__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rustfmt_nightly-2024-02-08__x86_64-pc-windows-msvc": [],
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:freebsd"
                ],
                "rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:freebsd"
                ],
                "rust_freebsd_x86_64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_freebsd_x86_64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_freebsd_x86_64__wasm32-wasi__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rust_freebsd_x86_64__wasm32-wasi__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rustfmt_nightly-2024-02-08__x86_64-unknown-freebsd": [],
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__stable": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly": [
                  "@platforms//cpu:x86_64",
                  "@platforms//os:linux"
                ],
                "rust_linux_x86_64__wasm32-unknown-unknown__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_linux_x86_64__wasm32-unknown-unknown__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:none"
                ],
                "rust_linux_x86_64__wasm32-wasi__stable": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rust_linux_x86_64__wasm32-wasi__nightly": [
                  "@platforms//cpu:wasm32",
                  "@platforms//os:wasi"
                ],
                "rustfmt_nightly-2024-02-08__x86_64-unknown-linux-gnu": []
              }
            }
          },
          "rust_linux_aarch64__wasm32-unknown-unknown__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_aarch64__wasm32-unknown-unknown__stable_tools",
              "exec_triple": "aarch64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_darwin_x86_64__x86_64-apple-darwin__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_x86_64__x86_64-apple-darwin__stable_tools",
              "exec_triple": "x86_64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "x86_64-apple-darwin",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_darwin_aarch64__wasm32-unknown-unknown__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_aarch64__wasm32-unknown-unknown__nightly",
              "toolchain": "@rust_darwin_aarch64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_freebsd_x86_64__wasm32-unknown-unknown__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_freebsd_x86_64__wasm32-unknown-unknown__stable_tools",
              "exec_triple": "x86_64-unknown-freebsd",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_freebsd_x86_64__wasm32-wasi__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_freebsd_x86_64__wasm32-wasi__stable",
              "toolchain": "@rust_freebsd_x86_64__wasm32-wasi__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:freebsd"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_darwin_aarch64__wasm32-unknown-unknown__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_aarch64__wasm32-unknown-unknown__nightly_tools",
              "exec_triple": "aarch64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_linux_aarch64__aarch64-unknown-linux-gnu__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_aarch64__aarch64-unknown-linux-gnu__stable",
              "toolchain": "@rust_linux_aarch64__aarch64-unknown-linux-gnu__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:linux"
              ]
            }
          },
          "rustfmt_nightly-2024-02-08__aarch64-unknown-linux-gnu": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rustfmt_nightly-2024-02-08__aarch64-unknown-linux-gnu",
              "toolchain": "@rustfmt_nightly-2024-02-08__aarch64-unknown-linux-gnu_tools//:rustfmt_toolchain",
              "toolchain_type": "@rules_rust//rust/rustfmt:toolchain_type",
              "target_settings": [],
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": []
            }
          },
          "rust_linux_aarch64__wasm32-unknown-unknown__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_aarch64__wasm32-unknown-unknown__stable",
              "toolchain": "@rust_linux_aarch64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_linux_x86_64__x86_64-unknown-linux-gnu__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_x86_64__x86_64-unknown-linux-gnu__stable_tools",
              "exec_triple": "x86_64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "x86_64-unknown-linux-gnu",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_linux_aarch64__wasm32-wasi__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_aarch64__wasm32-wasi__nightly_tools",
              "exec_triple": "aarch64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_freebsd_x86_64__wasm32-wasi__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_freebsd_x86_64__wasm32-wasi__nightly_tools",
              "exec_triple": "x86_64-unknown-freebsd",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_windows_x86_64__x86_64-pc-windows-msvc__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_x86_64__x86_64-pc-windows-msvc__nightly",
              "toolchain": "@rust_windows_x86_64__x86_64-pc-windows-msvc__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:windows"
              ]
            }
          },
          "rust_freebsd_x86_64__x86_64-unknown-freebsd__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_freebsd_x86_64__x86_64-unknown-freebsd__stable_tools",
              "exec_triple": "x86_64-unknown-freebsd",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "x86_64-unknown-freebsd",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_darwin_x86_64__wasm32-unknown-unknown__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_x86_64__wasm32-unknown-unknown__stable",
              "toolchain": "@rust_darwin_x86_64__wasm32-unknown-unknown__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_darwin_aarch64__aarch64-apple-darwin__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_aarch64__aarch64-apple-darwin__stable",
              "toolchain": "@rust_darwin_aarch64__aarch64-apple-darwin__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:osx"
              ]
            }
          },
          "rust_windows_x86_64__wasm32-unknown-unknown__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_x86_64__wasm32-unknown-unknown__nightly_tools",
              "exec_triple": "x86_64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_linux_x86_64__wasm32-wasi__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_x86_64__wasm32-wasi__nightly_tools",
              "exec_triple": "x86_64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_darwin_x86_64": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_set_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_x86_64",
              "toolchains": [
                "@rust_darwin_x86_64__x86_64-apple-darwin__stable//:toolchain",
                "@rust_darwin_x86_64__x86_64-apple-darwin__nightly//:toolchain",
                "@rust_darwin_x86_64__wasm32-unknown-unknown__stable//:toolchain",
                "@rust_darwin_x86_64__wasm32-unknown-unknown__nightly//:toolchain",
                "@rust_darwin_x86_64__wasm32-wasi__stable//:toolchain",
                "@rust_darwin_x86_64__wasm32-wasi__nightly//:toolchain"
              ]
            }
          },
          "rust_windows_aarch64__wasm32-unknown-unknown__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_aarch64__wasm32-unknown-unknown__nightly_tools",
              "exec_triple": "aarch64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_darwin_aarch64__wasm32-unknown-unknown__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_aarch64__wasm32-unknown-unknown__stable_tools",
              "exec_triple": "aarch64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_windows_x86_64__wasm32-unknown-unknown__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_x86_64__wasm32-unknown-unknown__stable_tools",
              "exec_triple": "x86_64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_darwin_aarch64": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_set_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_aarch64",
              "toolchains": [
                "@rust_darwin_aarch64__aarch64-apple-darwin__stable//:toolchain",
                "@rust_darwin_aarch64__aarch64-apple-darwin__nightly//:toolchain",
                "@rust_darwin_aarch64__wasm32-unknown-unknown__stable//:toolchain",
                "@rust_darwin_aarch64__wasm32-unknown-unknown__nightly//:toolchain",
                "@rust_darwin_aarch64__wasm32-wasi__stable//:toolchain",
                "@rust_darwin_aarch64__wasm32-wasi__nightly//:toolchain"
              ]
            }
          },
          "rust_darwin_x86_64__x86_64-apple-darwin__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_x86_64__x86_64-apple-darwin__stable",
              "toolchain": "@rust_darwin_x86_64__x86_64-apple-darwin__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:osx"
              ]
            }
          },
          "rustfmt_nightly-2024-02-08__x86_64-unknown-freebsd_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rustfmt_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rustfmt_nightly-2024-02-08__x86_64-unknown-freebsd_tools",
              "version": "nightly",
              "iso_date": "2024-02-08",
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "exec_triple": "x86_64-unknown-freebsd"
            }
          },
          "rust_darwin_x86_64__wasm32-wasi__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_x86_64__wasm32-wasi__stable",
              "toolchain": "@rust_darwin_x86_64__wasm32-wasi__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_linux_x86_64__wasm32-wasi__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_x86_64__wasm32-wasi__stable_tools",
              "exec_triple": "x86_64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_linux_x86_64": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_set_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_x86_64",
              "toolchains": [
                "@rust_linux_x86_64__x86_64-unknown-linux-gnu__stable//:toolchain",
                "@rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly//:toolchain",
                "@rust_linux_x86_64__wasm32-unknown-unknown__stable//:toolchain",
                "@rust_linux_x86_64__wasm32-unknown-unknown__nightly//:toolchain",
                "@rust_linux_x86_64__wasm32-wasi__stable//:toolchain",
                "@rust_linux_x86_64__wasm32-wasi__nightly//:toolchain"
              ]
            }
          },
          "rust_windows_aarch64__wasm32-unknown-unknown__stable_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_aarch64__wasm32-unknown-unknown__stable_tools",
              "exec_triple": "aarch64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "",
              "version": "1.76.0",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_linux_aarch64__wasm32-unknown-unknown__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_aarch64__wasm32-unknown-unknown__nightly",
              "toolchain": "@rust_linux_aarch64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rustfmt_nightly-2024-02-08__aarch64-pc-windows-msvc_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rustfmt_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rustfmt_nightly-2024-02-08__aarch64-pc-windows-msvc_tools",
              "version": "nightly",
              "iso_date": "2024-02-08",
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "exec_triple": "aarch64-pc-windows-msvc"
            }
          },
          "rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly",
              "toolchain": "@rust_linux_x86_64__x86_64-unknown-linux-gnu__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:linux"
              ]
            }
          },
          "rust_windows_aarch64__wasm32-unknown-unknown__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_aarch64__wasm32-unknown-unknown__nightly",
              "toolchain": "@rust_windows_aarch64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_windows_x86_64__wasm32-unknown-unknown__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_x86_64__wasm32-unknown-unknown__nightly",
              "toolchain": "@rust_windows_x86_64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_windows_x86_64__wasm32-wasi__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_x86_64__wasm32-wasi__nightly",
              "toolchain": "@rust_windows_x86_64__wasm32-wasi__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly",
              "toolchain": "@rust_linux_aarch64__aarch64-unknown-linux-gnu__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:linux"
              ],
              "target_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:linux"
              ]
            }
          },
          "rust_darwin_aarch64__wasm32-wasi__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_aarch64__wasm32-wasi__stable",
              "toolchain": "@rust_darwin_aarch64__wasm32-wasi__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:aarch64",
                "@platforms//os:osx"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:wasi"
              ]
            }
          },
          "rust_freebsd_x86_64__wasm32-unknown-unknown__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_freebsd_x86_64__wasm32-unknown-unknown__nightly",
              "toolchain": "@rust_freebsd_x86_64__wasm32-unknown-unknown__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:freebsd"
              ],
              "target_compatible_with": [
                "@platforms//cpu:wasm32",
                "@platforms//os:none"
              ]
            }
          },
          "rust_windows_aarch64__aarch64-pc-windows-msvc__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_windows_aarch64__aarch64-pc-windows-msvc__nightly_tools",
              "exec_triple": "aarch64-pc-windows-msvc",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "aarch64-pc-windows-msvc",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rustfmt_nightly-2024-02-08__x86_64-pc-windows-msvc_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rustfmt_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rustfmt_nightly-2024-02-08__x86_64-pc-windows-msvc_tools",
              "version": "nightly",
              "iso_date": "2024-02-08",
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {},
              "exec_triple": "x86_64-pc-windows-msvc"
            }
          },
          "rust_darwin_aarch64__wasm32-wasi__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_darwin_aarch64__wasm32-wasi__nightly_tools",
              "exec_triple": "aarch64-apple-darwin",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-wasi",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rust_freebsd_x86_64__x86_64-unknown-freebsd__stable": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_freebsd_x86_64__x86_64-unknown-freebsd__stable",
              "toolchain": "@rust_freebsd_x86_64__x86_64-unknown-freebsd__stable_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:stable"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:freebsd"
              ],
              "target_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:freebsd"
              ]
            }
          },
          "rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly",
              "toolchain": "@rust_freebsd_x86_64__x86_64-unknown-freebsd__nightly_tools//:rust_toolchain",
              "target_settings": [
                "@rules_rust//rust/toolchain/channel:nightly"
              ],
              "toolchain_type": "@rules_rust//rust:toolchain",
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:freebsd"
              ],
              "target_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:freebsd"
              ]
            }
          },
          "rust_linux_x86_64__wasm32-unknown-unknown__nightly_tools": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "rust_toolchain_tools_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rust_linux_x86_64__wasm32-unknown-unknown__nightly_tools",
              "exec_triple": "x86_64-unknown-linux-gnu",
              "allocator_library": "@rules_rust//ffi/cc/allocator_library",
              "global_allocator_library": "@rules_rust//ffi/cc/global_allocator_library",
              "target_triple": "wasm32-unknown-unknown",
              "iso_date": "2024-02-08",
              "version": "nightly",
              "rustfmt_version": "nightly/2024-02-08",
              "edition": "2021",
              "dev_components": false,
              "extra_rustc_flags": [],
              "extra_exec_rustc_flags": [],
              "opt_level": {},
              "sha256s": {},
              "urls": [
                "https://static.rust-lang.org/dist/{}.tar.xz"
              ],
              "auth": {}
            }
          },
          "rustfmt_nightly-2024-02-08__x86_64-pc-windows-msvc": {
            "bzlFile": "@@rules_rust~0.40.0//rust:repositories.bzl",
            "ruleClassName": "toolchain_repository_proxy",
            "attributes": {
              "name": "rules_rust~0.40.0~rust~rustfmt_nightly-2024-02-08__x86_64-pc-windows-msvc",
              "toolchain": "@rustfmt_nightly-2024-02-08__x86_64-pc-windows-msvc_tools//:rustfmt_toolchain",
              "toolchain_type": "@rules_rust//rust/rustfmt:toolchain_type",
              "target_settings": [],
              "exec_compatible_with": [
                "@platforms//cpu:x86_64",
                "@platforms//os:windows"
              ],
              "target_compatible_with": []
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "rules_rust~0.40.0",
            "bazel_skylib",
            "bazel_skylib~1.5.0"
          ],
          [
            "rules_rust~0.40.0",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust",
            "rules_rust~0.40.0"
          ]
        ]
      }
    },
    "@@rules_rust~0.40.0//rust/private:extensions.bzl%i": {
      "general": {
        "bzlTransitiveDigest": "OrqzGpSU+8nCCqWqjht8BAZsz9Rc+39MPdlnI111+f0=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "rules_rust_prost__tracing-0.1.37": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__tracing-0.1.37",
              "sha256": "8ce8c33a8d48bd45d624a6e523445fd21ec13d3653cd51f681abf67418f54eb8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tracing/0.1.37/download"
              ],
              "strip_prefix": "tracing-0.1.37",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.tracing-0.1.37.bazel"
            }
          },
          "rules_rust_tinyjson": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_tinyjson",
              "sha256": "9ab95735ea2c8fd51154d01e39cf13912a78071c2d89abc49a7ef102a7dd725a",
              "url": "https://crates.io/api/v1/crates/tinyjson/2.5.1/download",
              "strip_prefix": "tinyjson-2.5.1",
              "type": "tar.gz",
              "build_file": "@@rules_rust~0.40.0//util/process_wrapper:BUILD.tinyjson.bazel"
            }
          },
          "rules_rust_wasm_bindgen__bumpalo-3.13.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__bumpalo-3.13.0",
              "sha256": "a3e2c3daef883ecc1b5d58c15adae93470a91d425f3532ba1695849656af3fc1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bumpalo/3.13.0/download"
              ],
              "strip_prefix": "bumpalo-3.13.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.bumpalo-3.13.0.bazel"
            }
          },
          "cui__pin-project-lite-0.2.13": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__pin-project-lite-0.2.13",
              "sha256": "8afb450f006bf6385ca15ef45d71d2288452bc3683ce2e2cacc0d18e4be60b58",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/pin-project-lite/0.2.13/download"
              ],
              "strip_prefix": "pin-project-lite-0.2.13",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.pin-project-lite-0.2.13.bazel"
            }
          },
          "rules_rust_wasm_bindgen__walrus-0.20.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__walrus-0.20.3",
              "sha256": "2c03529cd0c4400a2449f640d2f27cd1b48c3065226d15e26d98e4429ab0adb7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/walrus/0.20.3/download"
              ],
              "strip_prefix": "walrus-0.20.3",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.walrus-0.20.3.bazel"
            }
          },
          "rules_rust_wasm_bindgen__unicode-bidi-0.3.13": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__unicode-bidi-0.3.13",
              "sha256": "92888ba5573ff080736b3648696b70cafad7d250551175acbaa4e0385b3e1460",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicode-bidi/0.3.13/download"
              ],
              "strip_prefix": "unicode-bidi-0.3.13",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.unicode-bidi-0.3.13.bazel"
            }
          },
          "cui__generic-array-0.14.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__generic-array-0.14.7",
              "sha256": "85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/generic-array/0.14.7/download"
              ],
              "strip_prefix": "generic-array-0.14.7",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.generic-array-0.14.7.bazel"
            }
          },
          "cross_x86_64-unknown-linux-gnu": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cross_x86_64-unknown-linux-gnu",
              "urls": [
                "https://github.com/rust-embedded/cross/releases/download/v0.2.1/cross-v0.2.1-x86_64-unknown-linux-gnu.tar.gz"
              ],
              "sha256": "06dcce3248488e95fbb368d14bef17fa8e77461d5055fbd5193538574820f413",
              "build_file_content": "exports_files(glob([\"**\"]), visibility = [\"//visibility:public\"])"
            }
          },
          "rules_rust_wasm_bindgen__windows_x86_64_gnu-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__windows_x86_64_gnu-0.48.0",
              "sha256": "ca2b8a661f7628cbd23440e50b05d705db3686f894fc9580820623656af974b1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_gnu/0.48.0/download"
              ],
              "strip_prefix": "windows_x86_64_gnu-0.48.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.windows_x86_64_gnu-0.48.0.bazel"
            }
          },
          "cui__rustix-0.37.23": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__rustix-0.37.23",
              "sha256": "4d69718bf81c6127a49dc64e44a742e8bb9213c0ff8869a22c308f84c1d4ab06",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustix/0.37.23/download"
              ],
              "strip_prefix": "rustix-0.37.23",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.rustix-0.37.23.bazel"
            }
          },
          "rules_rust_wasm_bindgen__ureq-2.8.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__ureq-2.8.0",
              "sha256": "f5ccd538d4a604753ebc2f17cd9946e89b77bf87f6a8e2309667c6f2e87855e3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ureq/2.8.0/download"
              ],
              "strip_prefix": "ureq-2.8.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.ureq-2.8.0.bazel"
            }
          },
          "cui__parking_lot_core-0.9.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__parking_lot_core-0.9.9",
              "sha256": "4c42a9226546d68acdd9c0a280d17ce19bfe27a46bf68784e4066115788d008e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/parking_lot_core/0.9.9/download"
              ],
              "strip_prefix": "parking_lot_core-0.9.9",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.parking_lot_core-0.9.9.bazel"
            }
          },
          "cui__core-foundation-sys-0.8.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__core-foundation-sys-0.8.4",
              "sha256": "e496a50fda8aacccc86d7529e2c1e0892dbd0f898a6b5645b5561b89c3210efa",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/core-foundation-sys/0.8.4/download"
              ],
              "strip_prefix": "core-foundation-sys-0.8.4",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.core-foundation-sys-0.8.4.bazel"
            }
          },
          "cui__fuchsia-cprng-0.1.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__fuchsia-cprng-0.1.1",
              "sha256": "a06f77d526c1a601b7c4cdd98f54b5eaabffc14d5f2f0296febdc7f357c6d3ba",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/fuchsia-cprng/0.1.1/download"
              ],
              "strip_prefix": "fuchsia-cprng-0.1.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.fuchsia-cprng-0.1.1.bazel"
            }
          },
          "cui__url-2.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__url-2.4.0",
              "sha256": "50bff7831e19200a85b17131d085c25d7811bc4e186efdaf54bbd132994a88cb",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/url/2.4.0/download"
              ],
              "strip_prefix": "url-2.4.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.url-2.4.0.bazel"
            }
          },
          "rrra__quote-1.0.29": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__quote-1.0.29",
              "sha256": "573015e8ab27661678357f27dc26460738fd2b6c86e46f386fde94cb5d913105",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/quote/1.0.29/download"
              ],
              "strip_prefix": "quote-1.0.29",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.quote-1.0.29.bazel"
            }
          },
          "rules_rust_wasm_bindgen__wasm-bindgen-shared-0.2.91": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasm-bindgen-shared-0.2.91",
              "sha256": "4f186bd2dcf04330886ce82d6f33dd75a7bfcf69ecf5763b89fcde53b6ac9838",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-shared/0.2.91/download"
              ],
              "strip_prefix": "wasm-bindgen-shared-0.2.91",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.wasm-bindgen-shared-0.2.91.bazel"
            }
          },
          "rules_rust_wasm_bindgen__httpdate-1.0.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__httpdate-1.0.2",
              "sha256": "c4a1e36c821dbe04574f602848a19f742f4fb3c98d40449f11bcad18d6b17421",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/httpdate/1.0.2/download"
              ],
              "strip_prefix": "httpdate-1.0.2",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.httpdate-1.0.2.bazel"
            }
          },
          "cui__gix-object-0.37.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-object-0.37.0",
              "sha256": "1e7e19616c67967374137bae83e950e9b518a9ea8a605069bd6716ada357fd6f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-object/0.37.0/download"
              ],
              "strip_prefix": "gix-object-0.37.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-object-0.37.0.bazel"
            }
          },
          "cui__crossbeam-queue-0.3.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__crossbeam-queue-0.3.8",
              "sha256": "d1cfb3ea8a53f37c40dea2c7bedcbd88bdfae54f5e2175d6ecaff1c988353add",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crossbeam-queue/0.3.8/download"
              ],
              "strip_prefix": "crossbeam-queue-0.3.8",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.crossbeam-queue-0.3.8.bazel"
            }
          },
          "rules_rust_wasm_bindgen__iana-time-zone-0.1.57": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__iana-time-zone-0.1.57",
              "sha256": "2fad5b825842d2b38bd206f3e81d6957625fd7f0a361e345c30e01a0ae2dd613",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/iana-time-zone/0.1.57/download"
              ],
              "strip_prefix": "iana-time-zone-0.1.57",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.iana-time-zone-0.1.57.bazel"
            }
          },
          "cui__ryu-1.0.14": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__ryu-1.0.14",
              "sha256": "fe232bdf6be8c8de797b22184ee71118d63780ea42ac85b61d1baa6d3b782ae9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ryu/1.0.14/download"
              ],
              "strip_prefix": "ryu-1.0.14",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.ryu-1.0.14.bazel"
            }
          },
          "rules_rust_prost__protoc-gen-prost-0.2.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__protoc-gen-prost-0.2.2",
              "patch_args": [
                "-p1"
              ],
              "patches": [
                "@@rules_rust~0.40.0//proto/prost/private/3rdparty/patches:protoc-gen-prost.patch"
              ],
              "sha256": "a81e3a9bb429fec47008b209896f0b9ab99fbcbc1c3733b385d43fbfd64dd2ca",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/protoc-gen-prost/0.2.2/download"
              ],
              "strip_prefix": "protoc-gen-prost-0.2.2",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.protoc-gen-prost-0.2.2.bazel"
            }
          },
          "rules_rust_bindgen__winapi-x86_64-pc-windows-gnu-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__winapi-x86_64-pc-windows-gnu-0.4.0",
              "sha256": "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi-x86_64-pc-windows-gnu/0.4.0/download"
              ],
              "strip_prefix": "winapi-x86_64-pc-windows-gnu-0.4.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.winapi-x86_64-pc-windows-gnu-0.4.0.bazel"
            }
          },
          "cui__deunicode-0.4.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__deunicode-0.4.3",
              "sha256": "850878694b7933ca4c9569d30a34b55031b9b139ee1fc7b94a527c4ef960d690",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/deunicode/0.4.3/download"
              ],
              "strip_prefix": "deunicode-0.4.3",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.deunicode-0.4.3.bazel"
            }
          },
          "rules_rust_bindgen__cfg-if-1.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__cfg-if-1.0.0",
              "sha256": "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cfg-if/1.0.0/download"
              ],
              "strip_prefix": "cfg-if-1.0.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.cfg-if-1.0.0.bazel"
            }
          },
          "rules_rust_prost__protoc-gen-tonic-0.2.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__protoc-gen-tonic-0.2.2",
              "sha256": "725a07a704f9cf7a956b302c21d81b5516ed5ee6cfbbf827edb69beeaae6cc30",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/protoc-gen-tonic/0.2.2/download"
              ],
              "strip_prefix": "protoc-gen-tonic-0.2.2",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.protoc-gen-tonic-0.2.2.bazel"
            }
          },
          "cui__iana-time-zone-haiku-0.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__iana-time-zone-haiku-0.1.2",
              "sha256": "f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/iana-time-zone-haiku/0.1.2/download"
              ],
              "strip_prefix": "iana-time-zone-haiku-0.1.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.iana-time-zone-haiku-0.1.2.bazel"
            }
          },
          "cui__windows_x86_64_gnullvm-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__windows_x86_64_gnullvm-0.48.0",
              "sha256": "7896dbc1f41e08872e9d5e8f8baa8fdd2677f29468c4e156210174edc7f7b953",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_gnullvm/0.48.0/download"
              ],
              "strip_prefix": "windows_x86_64_gnullvm-0.48.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.windows_x86_64_gnullvm-0.48.0.bazel"
            }
          },
          "rules_rust_prost__percent-encoding-2.3.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__percent-encoding-2.3.0",
              "sha256": "9b2a4787296e9989611394c33f193f676704af1686e70b8f8033ab5ba9a35a94",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/percent-encoding/2.3.0/download"
              ],
              "strip_prefix": "percent-encoding-2.3.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.percent-encoding-2.3.0.bazel"
            }
          },
          "cui__fastrand-2.0.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__fastrand-2.0.1",
              "sha256": "25cbce373ec4653f1a01a31e8a5e5ec0c622dc27ff9c4e6606eefef5cbbed4a5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/fastrand/2.0.1/download"
              ],
              "strip_prefix": "fastrand-2.0.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.fastrand-2.0.1.bazel"
            }
          },
          "cui__wasm-bindgen-macro-0.2.87": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__wasm-bindgen-macro-0.2.87",
              "sha256": "dee495e55982a3bd48105a7b947fd2a9b4a8ae3010041b9e0faab3f9cd028f1d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-macro/0.2.87/download"
              ],
              "strip_prefix": "wasm-bindgen-macro-0.2.87",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.wasm-bindgen-macro-0.2.87.bazel"
            }
          },
          "cui__flate2-1.0.28": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__flate2-1.0.28",
              "sha256": "46303f565772937ffe1d394a4fac6f411c6013172fadde9dcdb1e147a086940e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/flate2/1.0.28/download"
              ],
              "strip_prefix": "flate2-1.0.28",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.flate2-1.0.28.bazel"
            }
          },
          "rules_rust_prost__pin-utils-0.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__pin-utils-0.1.0",
              "sha256": "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/pin-utils/0.1.0/download"
              ],
              "strip_prefix": "pin-utils-0.1.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.pin-utils-0.1.0.bazel"
            }
          },
          "rules_rust_prost__cc-1.0.79": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__cc-1.0.79",
              "sha256": "50d30906286121d95be3d479533b458f87493b30a4b5f79a607db8f5d11aa91f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cc/1.0.79/download"
              ],
              "strip_prefix": "cc-1.0.79",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.cc-1.0.79.bazel"
            }
          },
          "rrra__winapi-0.3.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__winapi-0.3.9",
              "sha256": "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi/0.3.9/download"
              ],
              "strip_prefix": "winapi-0.3.9",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.winapi-0.3.9.bazel"
            }
          },
          "cui__gix-hashtable-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-hashtable-0.4.0",
              "sha256": "409268480841ad008e81c17ca5a293393fbf9f2b6c2f85b8ab9de1f0c5176a16",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-hashtable/0.4.0/download"
              ],
              "strip_prefix": "gix-hashtable-0.4.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-hashtable-0.4.0.bazel"
            }
          },
          "rules_rust_bindgen__errno-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__errno-0.3.1",
              "sha256": "4bcfec3a70f97c962c307b2d2c56e358cf1d00b558d74262b5f929ee8cc7e73a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/errno/0.3.1/download"
              ],
              "strip_prefix": "errno-0.3.1",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.errno-0.3.1.bazel"
            }
          },
          "cui__fnv-1.0.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__fnv-1.0.7",
              "sha256": "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/fnv/1.0.7/download"
              ],
              "strip_prefix": "fnv-1.0.7",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.fnv-1.0.7.bazel"
            }
          },
          "cui__windows-targets-0.48.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__windows-targets-0.48.1",
              "sha256": "05d4b17490f70499f20b9e791dcf6a299785ce8af4d709018206dc5b4953e95f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows-targets/0.48.1/download"
              ],
              "strip_prefix": "windows-targets-0.48.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.windows-targets-0.48.1.bazel"
            }
          },
          "cui__js-sys-0.3.64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__js-sys-0.3.64",
              "sha256": "c5f195fe497f702db0f318b07fdd68edb16955aed830df8363d837542f8f935a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/js-sys/0.3.64/download"
              ],
              "strip_prefix": "js-sys-0.3.64",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.js-sys-0.3.64.bazel"
            }
          },
          "rules_rust_toolchain_test_target_json": {
            "bzlFile": "@@rules_rust~0.40.0//test/unit/toolchain:toolchain_test_utils.bzl",
            "ruleClassName": "rules_rust_toolchain_test_target_json_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_toolchain_test_target_json",
              "target_json": "@@rules_rust~0.40.0//test/unit/toolchain:toolchain-test-triple.json"
            }
          },
          "rules_rust_wasm_bindgen__ppv-lite86-0.2.17": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__ppv-lite86-0.2.17",
              "sha256": "5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ppv-lite86/0.2.17/download"
              ],
              "strip_prefix": "ppv-lite86-0.2.17",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.ppv-lite86-0.2.17.bazel"
            }
          },
          "cui__smawk-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__smawk-0.3.1",
              "sha256": "f67ad224767faa3c7d8b6d91985b78e70a1324408abcb1cfcc2be4c06bc06043",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/smawk/0.3.1/download"
              ],
              "strip_prefix": "smawk-0.3.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.smawk-0.3.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__heck-0.3.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__heck-0.3.3",
              "sha256": "6d621efb26863f0e9924c6ac577e8275e5e6b77455db64ffa6c65c904e9e132c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/heck/0.3.3/download"
              ],
              "strip_prefix": "heck-0.3.3",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.heck-0.3.3.bazel"
            }
          },
          "rules_rust_wasm_bindgen__unicode-ident-1.0.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__unicode-ident-1.0.10",
              "sha256": "22049a19f4a68748a168c0fc439f9516686aa045927ff767eca0a85101fb6e73",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicode-ident/1.0.10/download"
              ],
              "strip_prefix": "unicode-ident-1.0.10",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.unicode-ident-1.0.10.bazel"
            }
          },
          "cui__clap_derive-4.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__clap_derive-4.3.2",
              "sha256": "b8cd2b2a819ad6eec39e8f1d6b53001af1e5469f8c177579cdaeb313115b825f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/clap_derive/4.3.2/download"
              ],
              "strip_prefix": "clap_derive-4.3.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.clap_derive-4.3.2.bazel"
            }
          },
          "cui__libm-0.2.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__libm-0.2.7",
              "sha256": "f7012b1bbb0719e1097c47611d3898568c546d597c2e74d66f6087edd5233ff4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/libm/0.2.7/download"
              ],
              "strip_prefix": "libm-0.2.7",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.libm-0.2.7.bazel"
            }
          },
          "rules_rust_bindgen__once_cell-1.18.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__once_cell-1.18.0",
              "sha256": "dd8b5dd2ae5ed71462c540258bedcb51965123ad7e7ccf4b9a8cafaa4a63576d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/once_cell/1.18.0/download"
              ],
              "strip_prefix": "once_cell-1.18.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.once_cell-1.18.0.bazel"
            }
          },
          "rules_rust_prost__prost-0.11.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__prost-0.11.9",
              "sha256": "0b82eaa1d779e9a4bc1c3217db8ffbeabaae1dca241bf70183242128d48681cd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/prost/0.11.9/download"
              ],
              "strip_prefix": "prost-0.11.9",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.prost-0.11.9.bazel"
            }
          },
          "cui__deranged-0.3.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__deranged-0.3.9",
              "sha256": "0f32d04922c60427da6f9fef14d042d9edddef64cb9d4ce0d64d0685fbeb1fd3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/deranged/0.3.9/download"
              ],
              "strip_prefix": "deranged-0.3.9",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.deranged-0.3.9.bazel"
            }
          },
          "rules_rust_prost__rand_core-0.6.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__rand_core-0.6.4",
              "sha256": "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rand_core/0.6.4/download"
              ],
              "strip_prefix": "rand_core-0.6.4",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.rand_core-0.6.4.bazel"
            }
          },
          "cui__gix-negotiate-0.8.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-negotiate-0.8.0",
              "sha256": "6f1697bf9911c6d1b8d709b9e6ef718cb5ea5821a1b7991520125a8134448004",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-negotiate/0.8.0/download"
              ],
              "strip_prefix": "gix-negotiate-0.8.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-negotiate-0.8.0.bazel"
            }
          },
          "rules_rust_bindgen__bitflags-1.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__bitflags-1.3.2",
              "sha256": "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bitflags/1.3.2/download"
              ],
              "strip_prefix": "bitflags-1.3.2",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.bitflags-1.3.2.bazel"
            }
          },
          "cui__wasi-0.11.0-wasi-snapshot-preview1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__wasi-0.11.0-wasi-snapshot-preview1",
              "sha256": "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasi/0.11.0+wasi-snapshot-preview1/download"
              ],
              "strip_prefix": "wasi-0.11.0+wasi-snapshot-preview1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.wasi-0.11.0+wasi-snapshot-preview1.bazel"
            }
          },
          "rules_rust_bindgen__windows_i686_gnu-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__windows_i686_gnu-0.48.0",
              "sha256": "622a1962a7db830d6fd0a69683c80a18fda201879f0f447f065a3b7467daa241",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_i686_gnu/0.48.0/download"
              ],
              "strip_prefix": "windows_i686_gnu-0.48.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.windows_i686_gnu-0.48.0.bazel"
            }
          },
          "cui__io-lifetimes-1.0.11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__io-lifetimes-1.0.11",
              "sha256": "eae7b9aee968036d54dce06cebaefd919e4472e753296daccd6d344e3e2df0c2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/io-lifetimes/1.0.11/download"
              ],
              "strip_prefix": "io-lifetimes-1.0.11",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.io-lifetimes-1.0.11.bazel"
            }
          },
          "cui__cargo_toml-0.17.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__cargo_toml-0.17.1",
              "sha256": "4d1ece59890e746567b467253aea0adbe8a21784d0b025d8a306f66c391c2957",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cargo_toml/0.17.1/download"
              ],
              "strip_prefix": "cargo_toml-0.17.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.cargo_toml-0.17.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__alloc-no-stdlib-2.0.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__alloc-no-stdlib-2.0.4",
              "sha256": "cc7bb162ec39d46ab1ca8c77bf72e890535becd1751bb45f64c597edb4c8c6b3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/alloc-no-stdlib/2.0.4/download"
              ],
              "strip_prefix": "alloc-no-stdlib-2.0.4",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.alloc-no-stdlib-2.0.4.bazel"
            }
          },
          "rules_rust_wasm_bindgen__env_logger-0.8.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__env_logger-0.8.4",
              "sha256": "a19187fea3ac7e84da7dacf48de0c45d63c6a76f9490dae389aead16c243fce3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/env_logger/0.8.4/download"
              ],
              "strip_prefix": "env_logger-0.8.4",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.env_logger-0.8.4.bazel"
            }
          },
          "cui__smol_str-0.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__smol_str-0.2.0",
              "sha256": "74212e6bbe9a4352329b2f68ba3130c15a3f26fe88ff22dbdc6cdd58fa85e99c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/smol_str/0.2.0/download"
              ],
              "strip_prefix": "smol_str-0.2.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.smol_str-0.2.0.bazel"
            }
          },
          "rules_rust_prost__proc-macro2-1.0.60": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__proc-macro2-1.0.60",
              "sha256": "dec2b086b7a862cf4de201096214fa870344cf922b2b30c167badb3af3195406",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/proc-macro2/1.0.60/download"
              ],
              "strip_prefix": "proc-macro2-1.0.60",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.proc-macro2-1.0.60.bazel"
            }
          },
          "cui__memoffset-0.9.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__memoffset-0.9.0",
              "sha256": "5a634b1c61a95585bd15607c6ab0c4e5b226e695ff2800ba0cdccddf208c406c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/memoffset/0.9.0/download"
              ],
              "strip_prefix": "memoffset-0.9.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.memoffset-0.9.0.bazel"
            }
          },
          "rules_rust_bindgen__clap_complete-4.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__clap_complete-4.3.1",
              "sha256": "7f6b5c519bab3ea61843a7923d074b04245624bb84a64a8c150f5deb014e388b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/clap_complete/4.3.1/download"
              ],
              "strip_prefix": "clap_complete-4.3.1",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.clap_complete-4.3.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__time-core-0.1.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__time-core-0.1.1",
              "sha256": "7300fbefb4dadc1af235a9cef3737cea692a9d97e1b9cbcd4ebdae6f8868e6fb",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/time-core/0.1.1/download"
              ],
              "strip_prefix": "time-core-0.1.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.time-core-0.1.1.bazel"
            }
          },
          "cui__log-0.4.19": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__log-0.4.19",
              "sha256": "b06a4cde4c0f271a446782e3eff8de789548ce57dbc8eca9292c27f4a42004b4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/log/0.4.19/download"
              ],
              "strip_prefix": "log-0.4.19",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.log-0.4.19.bazel"
            }
          },
          "cui__num-0.1.42": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__num-0.1.42",
              "sha256": "4703ad64153382334aa8db57c637364c322d3372e097840c72000dabdcf6156e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num/0.1.42/download"
              ],
              "strip_prefix": "num-0.1.42",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.num-0.1.42.bazel"
            }
          },
          "rules_rust_wasm_bindgen__tiny_http-0.12.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__tiny_http-0.12.0",
              "sha256": "389915df6413a2e74fb181895f933386023c71110878cd0825588928e64cdc82",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tiny_http/0.12.0/download"
              ],
              "strip_prefix": "tiny_http-0.12.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.tiny_http-0.12.0.bazel"
            }
          },
          "rules_rust_bindgen__windows-sys-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__windows-sys-0.48.0",
              "sha256": "677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows-sys/0.48.0/download"
              ],
              "strip_prefix": "windows-sys-0.48.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.windows-sys-0.48.0.bazel"
            }
          },
          "cui__wasm-bindgen-backend-0.2.87": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__wasm-bindgen-backend-0.2.87",
              "sha256": "5ef2b6d3c510e9625e5fe6f509ab07d66a760f0885d858736483c32ed7809abd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-backend/0.2.87/download"
              ],
              "strip_prefix": "wasm-bindgen-backend-0.2.87",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.wasm-bindgen-backend-0.2.87.bazel"
            }
          },
          "cui__pest-2.7.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__pest-2.7.0",
              "sha256": "f73935e4d55e2abf7f130186537b19e7a4abc886a0252380b59248af473a3fc9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/pest/2.7.0/download"
              ],
              "strip_prefix": "pest-2.7.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.pest-2.7.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__docopt-1.1.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__docopt-1.1.1",
              "sha256": "7f3f119846c823f9eafcf953a8f6ffb6ed69bf6240883261a7f13b634579a51f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/docopt/1.1.1/download"
              ],
              "strip_prefix": "docopt-1.1.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.docopt-1.1.1.bazel"
            }
          },
          "rules_rust_bindgen__libc-0.2.146": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__libc-0.2.146",
              "sha256": "f92be4933c13fd498862a9e02a3055f8a8d9c039ce33db97306fd5a6caa7f29b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/libc/0.2.146/download"
              ],
              "strip_prefix": "libc-0.2.146",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.libc-0.2.146.bazel"
            }
          },
          "rules_rust_wasm_bindgen__rustc-demangle-0.1.23": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__rustc-demangle-0.1.23",
              "sha256": "d626bb9dae77e28219937af045c257c28bfd3f69333c512553507f5f9798cb76",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustc-demangle/0.1.23/download"
              ],
              "strip_prefix": "rustc-demangle-0.1.23",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.rustc-demangle-0.1.23.bazel"
            }
          },
          "rules_rust_prost__rand_chacha-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__rand_chacha-0.3.1",
              "sha256": "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rand_chacha/0.3.1/download"
              ],
              "strip_prefix": "rand_chacha-0.3.1",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.rand_chacha-0.3.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__iana-time-zone-haiku-0.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__iana-time-zone-haiku-0.1.2",
              "sha256": "f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/iana-time-zone-haiku/0.1.2/download"
              ],
              "strip_prefix": "iana-time-zone-haiku-0.1.2",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.iana-time-zone-haiku-0.1.2.bazel"
            }
          },
          "cui__syn-1.0.109": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__syn-1.0.109",
              "sha256": "72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/syn/1.0.109/download"
              ],
              "strip_prefix": "syn-1.0.109",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.syn-1.0.109.bazel"
            }
          },
          "rrra__memchr-2.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__memchr-2.5.0",
              "sha256": "2dffe52ecf27772e601905b7522cb4ef790d2cc203488bbd0e2fe85fcb74566d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/memchr/2.5.0/download"
              ],
              "strip_prefix": "memchr-2.5.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.memchr-2.5.0.bazel"
            }
          },
          "cui__getrandom-0.2.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__getrandom-0.2.10",
              "sha256": "be4136b2a15dd319360be1c07d9933517ccf0be8f16bf62a3bee4f0d618df427",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/getrandom/0.2.10/download"
              ],
              "strip_prefix": "getrandom-0.2.10",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.getrandom-0.2.10.bazel"
            }
          },
          "cui__pathdiff-0.2.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__pathdiff-0.2.1",
              "sha256": "8835116a5c179084a830efb3adc117ab007512b535bc1a21c991d3b32a6b44dd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/pathdiff/0.2.1/download"
              ],
              "strip_prefix": "pathdiff-0.2.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.pathdiff-0.2.1.bazel"
            }
          },
          "rules_rust_prost__bitflags-1.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__bitflags-1.3.2",
              "sha256": "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bitflags/1.3.2/download"
              ],
              "strip_prefix": "bitflags-1.3.2",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.bitflags-1.3.2.bazel"
            }
          },
          "cargo_bazel.buildifier-linux-amd64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cargo_bazel.buildifier-linux-amd64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/5.0.1/buildifier-linux-amd64"
              ],
              "sha256": "3ed7358c7c6a1ca216dc566e9054fd0b97a1482cb0b7e61092be887d42615c5d",
              "downloaded_file_path": "buildifier.exe",
              "executable": true
            }
          },
          "rules_rust_wasm_bindgen__either-1.8.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__either-1.8.1",
              "sha256": "7fcaabb2fef8c910e7f4c7ce9f67a1283a1715879a7c230ca9d6d1ae31f16d91",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/either/1.8.1/download"
              ],
              "strip_prefix": "either-1.8.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.either-1.8.1.bazel"
            }
          },
          "cui__sha1_smol-1.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__sha1_smol-1.0.0",
              "sha256": "ae1a47186c03a32177042e55dbc5fd5aee900b8e0069a8d70fba96a9375cd012",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/sha1_smol/1.0.0/download"
              ],
              "strip_prefix": "sha1_smol-1.0.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.sha1_smol-1.0.0.bazel"
            }
          },
          "rules_rust_prost__windows_aarch64_msvc-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__windows_aarch64_msvc-0.48.0",
              "sha256": "b2ef27e0d7bdfcfc7b868b317c1d32c641a6fe4629c171b8928c7b08d98d7cf3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_aarch64_msvc/0.48.0/download"
              ],
              "strip_prefix": "windows_aarch64_msvc-0.48.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.windows_aarch64_msvc-0.48.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__crc32fast-1.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__crc32fast-1.3.2",
              "sha256": "b540bd8bc810d3885c6ea91e2018302f68baba2129ab3e88f32389ee9370880d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crc32fast/1.3.2/download"
              ],
              "strip_prefix": "crc32fast-1.3.2",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.crc32fast-1.3.2.bazel"
            }
          },
          "cargo_bazel.buildifier-darwin-amd64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cargo_bazel.buildifier-darwin-amd64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/5.0.1/buildifier-darwin-amd64"
              ],
              "sha256": "2cb0a54683633ef6de4e0491072e22e66ac9c6389051432b76200deeeeaf93fb",
              "downloaded_file_path": "buildifier.exe",
              "executable": true
            }
          },
          "rules_rust_wasm_bindgen__wasm-bindgen-backend-0.2.91": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasm-bindgen-backend-0.2.91",
              "sha256": "c9e7e1900c352b609c8488ad12639a311045f40a35491fb69ba8c12f758af70b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-backend/0.2.91/download"
              ],
              "strip_prefix": "wasm-bindgen-backend-0.2.91",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.wasm-bindgen-backend-0.2.91.bazel"
            }
          },
          "cui__chrono-0.4.26": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__chrono-0.4.26",
              "sha256": "ec837a71355b28f6556dbd569b37b3f363091c0bd4b2e735674521b4c5fd9bc5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/chrono/0.4.26/download"
              ],
              "strip_prefix": "chrono-0.4.26",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.chrono-0.4.26.bazel"
            }
          },
          "rules_rust_bindgen__proc-macro2-1.0.60": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__proc-macro2-1.0.60",
              "sha256": "dec2b086b7a862cf4de201096214fa870344cf922b2b30c167badb3af3195406",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/proc-macro2/1.0.60/download"
              ],
              "strip_prefix": "proc-macro2-1.0.60",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.proc-macro2-1.0.60.bazel"
            }
          },
          "rrra__windows_i686_msvc-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__windows_i686_msvc-0.48.0",
              "sha256": "4542c6e364ce21bf45d69fdd2a8e455fa38d316158cfd43b3ac1c5b1b19f8e00",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_i686_msvc/0.48.0/download"
              ],
              "strip_prefix": "windows_i686_msvc-0.48.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.windows_i686_msvc-0.48.0.bazel"
            }
          },
          "cui__encoding_rs-0.8.33": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__encoding_rs-0.8.33",
              "sha256": "7268b386296a025e474d5140678f75d6de9493ae55a5d709eeb9dd08149945e1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/encoding_rs/0.8.33/download"
              ],
              "strip_prefix": "encoding_rs-0.8.33",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.encoding_rs-0.8.33.bazel"
            }
          },
          "rules_rust_prost__windows_i686_msvc-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__windows_i686_msvc-0.48.0",
              "sha256": "4542c6e364ce21bf45d69fdd2a8e455fa38d316158cfd43b3ac1c5b1b19f8e00",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_i686_msvc/0.48.0/download"
              ],
              "strip_prefix": "windows_i686_msvc-0.48.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.windows_i686_msvc-0.48.0.bazel"
            }
          },
          "cui__overload-0.1.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__overload-0.1.1",
              "sha256": "b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/overload/0.1.1/download"
              ],
              "strip_prefix": "overload-0.1.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.overload-0.1.1.bazel"
            }
          },
          "rules_rust_prost__want-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__want-0.3.1",
              "sha256": "bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/want/0.3.1/download"
              ],
              "strip_prefix": "want-0.3.1",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.want-0.3.1.bazel"
            }
          },
          "rules_rust_bindgen__clap_derive-4.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__clap_derive-4.3.2",
              "sha256": "b8cd2b2a819ad6eec39e8f1d6b53001af1e5469f8c177579cdaeb313115b825f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/clap_derive/4.3.2/download"
              ],
              "strip_prefix": "clap_derive-4.3.2",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.clap_derive-4.3.2.bazel"
            }
          },
          "cui__anstream-0.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__anstream-0.3.2",
              "sha256": "0ca84f3628370c59db74ee214b3263d58f9aadd9b4fe7e711fd87dc452b7f163",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anstream/0.3.2/download"
              ],
              "strip_prefix": "anstream-0.3.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.anstream-0.3.2.bazel"
            }
          },
          "cui__bitflags-1.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__bitflags-1.3.2",
              "sha256": "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bitflags/1.3.2/download"
              ],
              "strip_prefix": "bitflags-1.3.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.bitflags-1.3.2.bazel"
            }
          },
          "rules_rust_prost__smallvec-1.10.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__smallvec-1.10.0",
              "sha256": "a507befe795404456341dfab10cef66ead4c041f62b8b11bbb92bffe5d0953e0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/smallvec/1.10.0/download"
              ],
              "strip_prefix": "smallvec-1.10.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.smallvec-1.10.0.bazel"
            }
          },
          "cui__gix-glob-0.13.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-glob-0.13.0",
              "sha256": "a9d76e85f11251dcf751d2c5e918a14f562db5be6f727fd24775245653e9b19d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-glob/0.13.0/download"
              ],
              "strip_prefix": "gix-glob-0.13.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-glob-0.13.0.bazel"
            }
          },
          "cui__itoa-1.0.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__itoa-1.0.8",
              "sha256": "62b02a5381cc465bd3041d84623d0fa3b66738b52b8e2fc3bab8ad63ab032f4a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/itoa/1.0.8/download"
              ],
              "strip_prefix": "itoa-1.0.8",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.itoa-1.0.8.bazel"
            }
          },
          "rules_rust_prost__windows_x86_64_gnu-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__windows_x86_64_gnu-0.48.0",
              "sha256": "ca2b8a661f7628cbd23440e50b05d705db3686f894fc9580820623656af974b1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_gnu/0.48.0/download"
              ],
              "strip_prefix": "windows_x86_64_gnu-0.48.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.windows_x86_64_gnu-0.48.0.bazel"
            }
          },
          "cui__serde_json-1.0.108": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__serde_json-1.0.108",
              "sha256": "3d1c7e3eac408d115102c4c24ad393e0821bb3a5df4d506a80f85f7a742a526b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/serde_json/1.0.108/download"
              ],
              "strip_prefix": "serde_json-1.0.108",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.serde_json-1.0.108.bazel"
            }
          },
          "rules_rust_wasm_bindgen__atty-0.2.14": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__atty-0.2.14",
              "sha256": "d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/atty/0.2.14/download"
              ],
              "strip_prefix": "atty-0.2.14",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.atty-0.2.14.bazel"
            }
          },
          "rules_rust_bindgen__log-0.4.19": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__log-0.4.19",
              "sha256": "b06a4cde4c0f271a446782e3eff8de789548ce57dbc8eca9292c27f4a42004b4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/log/0.4.19/download"
              ],
              "strip_prefix": "log-0.4.19",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.log-0.4.19.bazel"
            }
          },
          "cui__walkdir-2.3.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__walkdir-2.3.3",
              "sha256": "36df944cda56c7d8d8b7496af378e6b16de9284591917d307c9b4d313c44e698",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/walkdir/2.3.3/download"
              ],
              "strip_prefix": "walkdir-2.3.3",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.walkdir-2.3.3.bazel"
            }
          },
          "rrra__aho-corasick-1.0.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__aho-corasick-1.0.2",
              "sha256": "43f6cb1bf222025340178f382c426f13757b2960e89779dfcb319c32542a5a41",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/aho-corasick/1.0.2/download"
              ],
              "strip_prefix": "aho-corasick-1.0.2",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.aho-corasick-1.0.2.bazel"
            }
          },
          "rules_rust_wasm_bindgen__rustls-0.21.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__rustls-0.21.8",
              "sha256": "446e14c5cda4f3f30fe71863c34ec70f5ac79d6087097ad0bb433e1be5edf04c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustls/0.21.8/download"
              ],
              "strip_prefix": "rustls-0.21.8",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.rustls-0.21.8.bazel"
            }
          },
          "cui__gix-refspec-0.18.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-refspec-0.18.0",
              "sha256": "0895cb7b1e70f3c3bd4550c329e9f5caf2975f97fcd4238e05754e72208ef61e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-refspec/0.18.0/download"
              ],
              "strip_prefix": "gix-refspec-0.18.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-refspec-0.18.0.bazel"
            }
          },
          "cui__semver-1.0.20": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__semver-1.0.20",
              "sha256": "836fa6a3e1e547f9a2c4040802ec865b5d85f4014efe00555d7090a3dcaa1090",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/semver/1.0.20/download"
              ],
              "strip_prefix": "semver-1.0.20",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.semver-1.0.20.bazel"
            }
          },
          "rules_rust_bindgen__humantime-2.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__humantime-2.1.0",
              "sha256": "9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/humantime/2.1.0/download"
              ],
              "strip_prefix": "humantime-2.1.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.humantime-2.1.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__termcolor-1.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__termcolor-1.2.0",
              "sha256": "be55cf8942feac5c765c2c993422806843c9a9a45d4d5c407ad6dd2ea95eb9b6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/termcolor/1.2.0/download"
              ],
              "strip_prefix": "termcolor-1.2.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.termcolor-1.2.0.bazel"
            }
          },
          "rules_rust_bindgen__bitflags-2.4.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__bitflags-2.4.1",
              "sha256": "327762f6e5a765692301e5bb513e0d9fef63be86bbc14528052b1cd3e6f03e07",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bitflags/2.4.1/download"
              ],
              "strip_prefix": "bitflags-2.4.1",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.bitflags-2.4.1.bazel"
            }
          },
          "rrra__regex-syntax-0.7.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__regex-syntax-0.7.4",
              "sha256": "e5ea92a5b6195c6ef2a0295ea818b312502c6fc94dde986c5553242e18fd4ce2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex-syntax/0.7.4/download"
              ],
              "strip_prefix": "regex-syntax-0.7.4",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.regex-syntax-0.7.4.bazel"
            }
          },
          "rules_rust_wasm_bindgen__hermit-abi-0.1.19": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__hermit-abi-0.1.19",
              "sha256": "62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hermit-abi/0.1.19/download"
              ],
              "strip_prefix": "hermit-abi-0.1.19",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.hermit-abi-0.1.19.bazel"
            }
          },
          "rules_rust_prost__autocfg-1.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__autocfg-1.1.0",
              "sha256": "d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/autocfg/1.1.0/download"
              ],
              "strip_prefix": "autocfg-1.1.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.autocfg-1.1.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__sct-0.7.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__sct-0.7.1",
              "sha256": "da046153aa2352493d6cb7da4b6e5c0c057d8a1d0a9aa8560baffdd945acd414",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/sct/0.7.1/download"
              ],
              "strip_prefix": "sct-0.7.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.sct-0.7.1.bazel"
            }
          },
          "rrra__winapi-util-0.1.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__winapi-util-0.1.5",
              "sha256": "70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi-util/0.1.5/download"
              ],
              "strip_prefix": "winapi-util-0.1.5",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.winapi-util-0.1.5.bazel"
            }
          },
          "cui__bstr-1.6.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__bstr-1.6.0",
              "sha256": "6798148dccfbff0fae41c7574d2fa8f1ef3492fba0face179de5d8d447d67b05",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bstr/1.6.0/download"
              ],
              "strip_prefix": "bstr-1.6.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.bstr-1.6.0.bazel"
            }
          },
          "cui__gix-diff-0.36.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-diff-0.36.0",
              "sha256": "788ddb152c388206e81f36bcbb574e7ed7827c27d8fa62227b34edc333d8928c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-diff/0.36.0/download"
              ],
              "strip_prefix": "gix-diff-0.36.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-diff-0.36.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__strsim-0.10.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__strsim-0.10.0",
              "sha256": "73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/strsim/0.10.0/download"
              ],
              "strip_prefix": "strsim-0.10.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.strsim-0.10.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__untrusted-0.9.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__untrusted-0.9.0",
              "sha256": "8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/untrusted/0.9.0/download"
              ],
              "strip_prefix": "untrusted-0.9.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.untrusted-0.9.0.bazel"
            }
          },
          "cui__gix-index-0.25.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-index-0.25.0",
              "sha256": "f54d63a9d13c13088f41f5a3accbec284e492ac8f4f707fcc307c139622e17b7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-index/0.25.0/download"
              ],
              "strip_prefix": "gix-index-0.25.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-index-0.25.0.bazel"
            }
          },
          "rules_rust_prost__windows_i686_gnu-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__windows_i686_gnu-0.48.0",
              "sha256": "622a1962a7db830d6fd0a69683c80a18fda201879f0f447f065a3b7467daa241",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_i686_gnu/0.48.0/download"
              ],
              "strip_prefix": "windows_i686_gnu-0.48.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.windows_i686_gnu-0.48.0.bazel"
            }
          },
          "cui__filetime-0.2.22": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__filetime-0.2.22",
              "sha256": "d4029edd3e734da6fe05b6cd7bd2960760a616bd2ddd0d59a0124746d6272af0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/filetime/0.2.22/download"
              ],
              "strip_prefix": "filetime-0.2.22",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.filetime-0.2.22.bazel"
            }
          },
          "cui__tracing-log-0.1.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__tracing-log-0.1.4",
              "sha256": "f751112709b4e791d8ce53e32c4ed2d353565a795ce84da2285393f41557bdf2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tracing-log/0.1.4/download"
              ],
              "strip_prefix": "tracing-log-0.1.4",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.tracing-log-0.1.4.bazel"
            }
          },
          "rules_rust_wasm_bindgen__crossbeam-epoch-0.9.15": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__crossbeam-epoch-0.9.15",
              "sha256": "ae211234986c545741a7dc064309f67ee1e5ad243d0e48335adc0484d960bcc7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crossbeam-epoch/0.9.15/download"
              ],
              "strip_prefix": "crossbeam-epoch-0.9.15",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.crossbeam-epoch-0.9.15.bazel"
            }
          },
          "rrra__termcolor-1.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__termcolor-1.2.0",
              "sha256": "be55cf8942feac5c765c2c993422806843c9a9a45d4d5c407ad6dd2ea95eb9b6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/termcolor/1.2.0/download"
              ],
              "strip_prefix": "termcolor-1.2.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.termcolor-1.2.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__errno-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__errno-0.3.1",
              "sha256": "4bcfec3a70f97c962c307b2d2c56e358cf1d00b558d74262b5f929ee8cc7e73a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/errno/0.3.1/download"
              ],
              "strip_prefix": "errno-0.3.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.errno-0.3.1.bazel"
            }
          },
          "cui__rustix-0.38.21": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__rustix-0.38.21",
              "sha256": "2b426b0506e5d50a7d8dafcf2e81471400deb602392c7dd110815afb4eaf02a3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustix/0.38.21/download"
              ],
              "strip_prefix": "rustix-0.38.21",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.rustix-0.38.21.bazel"
            }
          },
          "rules_rust_bindgen__unicode-width-0.1.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__unicode-width-0.1.10",
              "sha256": "c0edd1e5b14653f783770bce4a4dabb4a5108a5370a5f5d8cfe8710c361f6c8b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicode-width/0.1.10/download"
              ],
              "strip_prefix": "unicode-width-0.1.10",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.unicode-width-0.1.10.bazel"
            }
          },
          "cui__indoc-2.0.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__indoc-2.0.4",
              "sha256": "1e186cfbae8084e513daff4240b4797e342f988cecda4fb6c939150f96315fd8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/indoc/2.0.4/download"
              ],
              "strip_prefix": "indoc-2.0.4",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.indoc-2.0.4.bazel"
            }
          },
          "cui__unicode-bom-2.0.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__unicode-bom-2.0.2",
              "sha256": "98e90c70c9f0d4d1ee6d0a7d04aa06cb9bbd53d8cfbdd62a0269a7c2eb640552",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicode-bom/2.0.2/download"
              ],
              "strip_prefix": "unicode-bom-2.0.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.unicode-bom-2.0.2.bazel"
            }
          },
          "rules_rust_wasm_bindgen__crossbeam-deque-0.8.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__crossbeam-deque-0.8.3",
              "sha256": "ce6fd6f855243022dcecf8702fef0c297d4338e226845fe067f6341ad9fa0cef",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crossbeam-deque/0.8.3/download"
              ],
              "strip_prefix": "crossbeam-deque-0.8.3",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.crossbeam-deque-0.8.3.bazel"
            }
          },
          "cui__smallvec-1.11.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__smallvec-1.11.0",
              "sha256": "62bb4feee49fdd9f707ef802e22365a35de4b7b299de4763d44bfea899442ff9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/smallvec/1.11.0/download"
              ],
              "strip_prefix": "smallvec-1.11.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.smallvec-1.11.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__redox_syscall-0.3.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__redox_syscall-0.3.5",
              "sha256": "567664f262709473930a4bf9e51bf2ebf3348f2e748ccc50dea20646858f8f29",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/redox_syscall/0.3.5/download"
              ],
              "strip_prefix": "redox_syscall-0.3.5",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.redox_syscall-0.3.5.bazel"
            }
          },
          "cui__ignore-0.4.18": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__ignore-0.4.18",
              "sha256": "713f1b139373f96a2e0ce3ac931cd01ee973c3c5dd7c40c0c2efe96ad2b6751d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ignore/0.4.18/download"
              ],
              "strip_prefix": "ignore-0.4.18",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.ignore-0.4.18.bazel"
            }
          },
          "rules_rust_wasm_bindgen__wasi-0.11.0-wasi-snapshot-preview1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasi-0.11.0-wasi-snapshot-preview1",
              "sha256": "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasi/0.11.0+wasi-snapshot-preview1/download"
              ],
              "strip_prefix": "wasi-0.11.0+wasi-snapshot-preview1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.wasi-0.11.0+wasi-snapshot-preview1.bazel"
            }
          },
          "cui__textwrap-0.16.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__textwrap-0.16.0",
              "sha256": "222a222a5bfe1bba4a77b45ec488a741b3cb8872e5e499451fd7d0129c9c7c3d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/textwrap/0.16.0/download"
              ],
              "strip_prefix": "textwrap-0.16.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.textwrap-0.16.0.bazel"
            }
          },
          "rules_rust_bindgen__winapi-i686-pc-windows-gnu-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__winapi-i686-pc-windows-gnu-0.4.0",
              "sha256": "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi-i686-pc-windows-gnu/0.4.0/download"
              ],
              "strip_prefix": "winapi-i686-pc-windows-gnu-0.4.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.winapi-i686-pc-windows-gnu-0.4.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__wasm-bindgen-wasm-conventions-0.2.91": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasm-bindgen-wasm-conventions-0.2.91",
              "sha256": "4e6b653f6820409609bda0f176e6949302307af7a7b9479cd4d4b1bdc31eb9cd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-wasm-conventions/0.2.91/download"
              ],
              "strip_prefix": "wasm-bindgen-wasm-conventions-0.2.91",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.wasm-bindgen-wasm-conventions-0.2.91.bazel"
            }
          },
          "rrra__colorchoice-1.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__colorchoice-1.0.0",
              "sha256": "acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/colorchoice/1.0.0/download"
              ],
              "strip_prefix": "colorchoice-1.0.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.colorchoice-1.0.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__regex-1.9.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__regex-1.9.1",
              "sha256": "b2eae68fc220f7cf2532e4494aded17545fce192d59cd996e0fe7887f4ceb575",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex/1.9.1/download"
              ],
              "strip_prefix": "regex-1.9.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.regex-1.9.1.bazel"
            }
          },
          "rrra__windows_x86_64_gnullvm-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__windows_x86_64_gnullvm-0.48.0",
              "sha256": "7896dbc1f41e08872e9d5e8f8baa8fdd2677f29468c4e156210174edc7f7b953",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_gnullvm/0.48.0/download"
              ],
              "strip_prefix": "windows_x86_64_gnullvm-0.48.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.windows_x86_64_gnullvm-0.48.0.bazel"
            }
          },
          "rules_rust_prost__slab-0.4.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__slab-0.4.8",
              "sha256": "6528351c9bc8ab22353f9d776db39a20288e8d6c37ef8cfe3317cf875eecfc2d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/slab/0.4.8/download"
              ],
              "strip_prefix": "slab-0.4.8",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.slab-0.4.8.bazel"
            }
          },
          "rrra__clap-4.3.11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__clap-4.3.11",
              "sha256": "1640e5cc7fb47dbb8338fd471b105e7ed6c3cb2aeb00c2e067127ffd3764a05d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/clap/4.3.11/download"
              ],
              "strip_prefix": "clap-4.3.11",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.clap-4.3.11.bazel"
            }
          },
          "cui__valuable-0.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__valuable-0.1.0",
              "sha256": "830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/valuable/0.1.0/download"
              ],
              "strip_prefix": "valuable-0.1.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.valuable-0.1.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__form_urlencoded-1.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__form_urlencoded-1.2.0",
              "sha256": "a62bc1cf6f830c2ec14a513a9fb124d0a213a629668a4186f329db21fe045652",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/form_urlencoded/1.2.0/download"
              ],
              "strip_prefix": "form_urlencoded-1.2.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.form_urlencoded-1.2.0.bazel"
            }
          },
          "rules_rust_prost__prost-derive-0.11.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__prost-derive-0.11.9",
              "sha256": "e5d2d8d10f3c6ded6da8b05b5fb3b8a5082514344d56c9f871412d29b4e075b4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/prost-derive/0.11.9/download"
              ],
              "strip_prefix": "prost-derive-0.11.9",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.prost-derive-0.11.9.bazel"
            }
          },
          "cui__adler-1.0.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__adler-1.0.2",
              "sha256": "f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/adler/1.0.2/download"
              ],
              "strip_prefix": "adler-1.0.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.adler-1.0.2.bazel"
            }
          },
          "cui__wasm-bindgen-shared-0.2.87": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__wasm-bindgen-shared-0.2.87",
              "sha256": "ca6ad05a4870b2bf5fe995117d3728437bd27d7cd5f06f13c17443ef369775a1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-shared/0.2.87/download"
              ],
              "strip_prefix": "wasm-bindgen-shared-0.2.87",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.wasm-bindgen-shared-0.2.87.bazel"
            }
          },
          "cross_x86_64-apple-darwin": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cross_x86_64-apple-darwin",
              "urls": [
                "https://github.com/rust-embedded/cross/releases/download/v0.2.1/cross-v0.2.1-x86_64-apple-darwin.tar.gz"
              ],
              "sha256": "589da89453291dc26f0b10b521cdadb98376d495645b210574bd9ca4ec8cfa2c",
              "build_file_content": "exports_files(glob([\"**\"]), visibility = [\"//visibility:public\"])"
            }
          },
          "rules_rust_prost__rustix-0.37.20": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__rustix-0.37.20",
              "sha256": "b96e891d04aa506a6d1f318d2771bcb1c7dfda84e126660ace067c9b474bb2c0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustix/0.37.20/download"
              ],
              "strip_prefix": "rustix-0.37.20",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.rustix-0.37.20.bazel"
            }
          },
          "rules_rust_wasm_bindgen__wasm-bindgen-macro-support-0.2.91": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasm-bindgen-macro-support-0.2.91",
              "sha256": "642f325be6301eb8107a83d12a8ac6c1e1c54345a7ef1a9261962dfefda09e66",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-macro-support/0.2.91/download"
              ],
              "strip_prefix": "wasm-bindgen-macro-support-0.2.91",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.wasm-bindgen-macro-support-0.2.91.bazel"
            }
          },
          "rules_rust_prost__fnv-1.0.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__fnv-1.0.7",
              "sha256": "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/fnv/1.0.7/download"
              ],
              "strip_prefix": "fnv-1.0.7",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.fnv-1.0.7.bazel"
            }
          },
          "cui__spectral-0.6.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__spectral-0.6.0",
              "sha256": "ae3c15181f4b14e52eeaac3efaeec4d2764716ce9c86da0c934c3e318649c5ba",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/spectral/0.6.0/download"
              ],
              "strip_prefix": "spectral-0.6.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.spectral-0.6.0.bazel"
            }
          },
          "cui__windows_i686_msvc-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__windows_i686_msvc-0.48.0",
              "sha256": "4542c6e364ce21bf45d69fdd2a8e455fa38d316158cfd43b3ac1c5b1b19f8e00",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_i686_msvc/0.48.0/download"
              ],
              "strip_prefix": "windows_i686_msvc-0.48.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.windows_i686_msvc-0.48.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__float-cmp-0.8.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__float-cmp-0.8.0",
              "sha256": "e1267f4ac4f343772758f7b1bdcbe767c218bbab93bb432acbf5162bbf85a6c4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/float-cmp/0.8.0/download"
              ],
              "strip_prefix": "float-cmp-0.8.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.float-cmp-0.8.0.bazel"
            }
          },
          "cui__gix-tempfile-10.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-tempfile-10.0.0",
              "sha256": "5ae0978f3e11dc57290ee75ac2477c815bca1ce2fa7ed5dc5f16db067410ac4d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-tempfile/10.0.0/download"
              ],
              "strip_prefix": "gix-tempfile-10.0.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-tempfile-10.0.0.bazel"
            }
          },
          "cui__jwalk-0.8.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__jwalk-0.8.1",
              "sha256": "2735847566356cd2179a2a38264839308f7079fa96e6bd5a42d740460e003c56",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/jwalk/0.8.1/download"
              ],
              "strip_prefix": "jwalk-0.8.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.jwalk-0.8.1.bazel"
            }
          },
          "rules_rust_prost__getrandom-0.2.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__getrandom-0.2.10",
              "sha256": "be4136b2a15dd319360be1c07d9933517ccf0be8f16bf62a3bee4f0d618df427",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/getrandom/0.2.10/download"
              ],
              "strip_prefix": "getrandom-0.2.10",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.getrandom-0.2.10.bazel"
            }
          },
          "rules_rust_wasm_bindgen__redox_syscall-0.2.16": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__redox_syscall-0.2.16",
              "sha256": "fb5a58c1855b4b6819d59012155603f0b22ad30cad752600aadfcb695265519a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/redox_syscall/0.2.16/download"
              ],
              "strip_prefix": "redox_syscall-0.2.16",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.redox_syscall-0.2.16.bazel"
            }
          },
          "rules_rust_prost__httpdate-1.0.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__httpdate-1.0.2",
              "sha256": "c4a1e36c821dbe04574f602848a19f742f4fb3c98d40449f11bcad18d6b17421",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/httpdate/1.0.2/download"
              ],
              "strip_prefix": "httpdate-1.0.2",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.httpdate-1.0.2.bazel"
            }
          },
          "rules_rust_prost__tower-layer-0.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__tower-layer-0.3.2",
              "sha256": "c20c8dbed6283a09604c3e69b4b7eeb54e298b8a600d4d5ecb5ad39de609f1d0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tower-layer/0.3.2/download"
              ],
              "strip_prefix": "tower-layer-0.3.2",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.tower-layer-0.3.2.bazel"
            }
          },
          "cui__cfg-expr-0.15.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__cfg-expr-0.15.5",
              "sha256": "03915af431787e6ffdcc74c645077518c6b6e01f80b761e0fbbfa288536311b3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cfg-expr/0.15.5/download"
              ],
              "strip_prefix": "cfg-expr-0.15.5",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.cfg-expr-0.15.5.bazel"
            }
          },
          "cargo_bazel.buildifier-darwin-arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cargo_bazel.buildifier-darwin-arm64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/5.0.1/buildifier-darwin-arm64"
              ],
              "sha256": "4da23315f0dccabf878c8227fddbccf35545b23b3cb6225bfcf3107689cc4364",
              "downloaded_file_path": "buildifier.exe",
              "executable": true
            }
          },
          "cui__prodash-26.2.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__prodash-26.2.2",
              "sha256": "794b5bf8e2d19b53dcdcec3e4bba628e20f5b6062503ba89281fa7037dd7bbcf",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/prodash/26.2.2/download"
              ],
              "strip_prefix": "prodash-26.2.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.prodash-26.2.2.bazel"
            }
          },
          "cui__winapi-i686-pc-windows-gnu-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__winapi-i686-pc-windows-gnu-0.4.0",
              "sha256": "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi-i686-pc-windows-gnu/0.4.0/download"
              ],
              "strip_prefix": "winapi-i686-pc-windows-gnu-0.4.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.winapi-i686-pc-windows-gnu-0.4.0.bazel"
            }
          },
          "rules_rust_prost__num_cpus-1.15.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__num_cpus-1.15.0",
              "sha256": "0fac9e2da13b5eb447a6ce3d392f23a29d8694bff781bf03a16cd9ac8697593b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num_cpus/1.15.0/download"
              ],
              "strip_prefix": "num_cpus-1.15.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.num_cpus-1.15.0.bazel"
            }
          },
          "rules_rust_bindgen__lazycell-1.3.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__lazycell-1.3.0",
              "sha256": "830d08ce1d1d941e6b30645f1a0eb5643013d835ce3779a5fc208261dbe10f55",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/lazycell/1.3.0/download"
              ],
              "strip_prefix": "lazycell-1.3.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.lazycell-1.3.0.bazel"
            }
          },
          "cui__tracing-subscriber-0.3.17": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__tracing-subscriber-0.3.17",
              "sha256": "30a651bc37f915e81f087d86e62a18eec5f79550c7faff886f7090b4ea757c77",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tracing-subscriber/0.3.17/download"
              ],
              "strip_prefix": "tracing-subscriber-0.3.17",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.tracing-subscriber-0.3.17.bazel"
            }
          },
          "cui__gix-0.54.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-0.54.1",
              "sha256": "ad6d32e74454459690d57d18ea4ebec1629936e6b130b51d12cb4a81630ac953",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix/0.54.1/download"
              ],
              "strip_prefix": "gix-0.54.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-0.54.1.bazel"
            }
          },
          "cui__gix-command-0.2.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-command-0.2.10",
              "sha256": "3c576cfbf577f72c097b5f88aedea502cd62952bdc1fb3adcab4531d5525a4c7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-command/0.2.10/download"
              ],
              "strip_prefix": "gix-command-0.2.10",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-command-0.2.10.bazel"
            }
          },
          "rules_rust_prost__bytes-1.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__bytes-1.4.0",
              "sha256": "89b2fd2a0dcf38d7971e2194b6b6eebab45ae01067456a7fd93d5547a61b70be",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bytes/1.4.0/download"
              ],
              "strip_prefix": "bytes-1.4.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.bytes-1.4.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__mime_guess-2.0.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__mime_guess-2.0.4",
              "sha256": "4192263c238a5f0d0c6bfd21f336a313a4ce1c450542449ca191bb657b4642ef",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/mime_guess/2.0.4/download"
              ],
              "strip_prefix": "mime_guess-2.0.4",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.mime_guess-2.0.4.bazel"
            }
          },
          "rules_rust_wasm_bindgen__tinyvec_macros-0.1.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__tinyvec_macros-0.1.1",
              "sha256": "1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tinyvec_macros/0.1.1/download"
              ],
              "strip_prefix": "tinyvec_macros-0.1.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.tinyvec_macros-0.1.1.bazel"
            }
          },
          "cui__gix-odb-0.53.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-odb-0.53.0",
              "sha256": "8d6a392c6ba3a2f133cdc63120e9bc7aec81eef763db372c817de31febfe64bf",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-odb/0.53.0/download"
              ],
              "strip_prefix": "gix-odb-0.53.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-odb-0.53.0.bazel"
            }
          },
          "rules_rust_bindgen__rustix-0.37.20": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__rustix-0.37.20",
              "sha256": "b96e891d04aa506a6d1f318d2771bcb1c7dfda84e126660ace067c9b474bb2c0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustix/0.37.20/download"
              ],
              "strip_prefix": "rustix-0.37.20",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.rustix-0.37.20.bazel"
            }
          },
          "rules_rust_bindgen__windows_i686_msvc-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__windows_i686_msvc-0.48.0",
              "sha256": "4542c6e364ce21bf45d69fdd2a8e455fa38d316158cfd43b3ac1c5b1b19f8e00",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_i686_msvc/0.48.0/download"
              ],
              "strip_prefix": "windows_i686_msvc-0.48.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.windows_i686_msvc-0.48.0.bazel"
            }
          },
          "rules_rust_bindgen__clap_builder-4.3.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__clap_builder-4.3.3",
              "sha256": "acd4f3c17c83b0ba34ffbc4f8bbd74f079413f747f84a6f89292f138057e36ab",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/clap_builder/4.3.3/download"
              ],
              "strip_prefix": "clap_builder-4.3.3",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.clap_builder-4.3.3.bazel"
            }
          },
          "rules_rust_wasm_bindgen_cli": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen_cli",
              "sha256": "80b674e1bda34888e132276ba600676cea158bdcd289bb7da5c25885f1a3a535",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-cli/0.2.91/download"
              ],
              "type": "tar.gz",
              "strip_prefix": "wasm-bindgen-cli-0.2.91",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty:BUILD.wasm-bindgen-cli.bazel",
              "patch_args": [
                "-p1"
              ],
              "patches": [
                "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/patches:resolver.patch"
              ]
            }
          },
          "rules_rust_wasm_bindgen__wasm-encoder-0.29.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasm-encoder-0.29.0",
              "sha256": "18c41dbd92eaebf3612a39be316540b8377c871cb9bde6b064af962984912881",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-encoder/0.29.0/download"
              ],
              "strip_prefix": "wasm-encoder-0.29.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.wasm-encoder-0.29.0.bazel"
            }
          },
          "cui__regex-syntax-0.8.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__regex-syntax-0.8.2",
              "sha256": "c08c74e62047bb2de4ff487b251e4a92e24f48745648451635cec7d591162d9f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex-syntax/0.8.2/download"
              ],
              "strip_prefix": "regex-syntax-0.8.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.regex-syntax-0.8.2.bazel"
            }
          },
          "rules_rust_bindgen__clap_lex-0.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__clap_lex-0.5.0",
              "sha256": "2da6da31387c7e4ef160ffab6d5e7f00c42626fe39aea70a7b0f1773f7dd6c1b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/clap_lex/0.5.0/download"
              ],
              "strip_prefix": "clap_lex-0.5.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.clap_lex-0.5.0.bazel"
            }
          },
          "rules_rust_prost__http-body-0.4.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__http-body-0.4.5",
              "sha256": "d5f38f16d184e36f2408a55281cd658ecbd3ca05cce6d6510a176eca393e26d1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/http-body/0.4.5/download"
              ],
              "strip_prefix": "http-body-0.4.5",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.http-body-0.4.5.bazel"
            }
          },
          "rules_rust_bindgen__utf8parse-0.2.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__utf8parse-0.2.1",
              "sha256": "711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/utf8parse/0.2.1/download"
              ],
              "strip_prefix": "utf8parse-0.2.1",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.utf8parse-0.2.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__windows_x86_64_gnullvm-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__windows_x86_64_gnullvm-0.48.0",
              "sha256": "7896dbc1f41e08872e9d5e8f8baa8fdd2677f29468c4e156210174edc7f7b953",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_gnullvm/0.48.0/download"
              ],
              "strip_prefix": "windows_x86_64_gnullvm-0.48.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.windows_x86_64_gnullvm-0.48.0.bazel"
            }
          },
          "rules_rust_prost__fixedbitset-0.4.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__fixedbitset-0.4.2",
              "sha256": "0ce7134b9999ecaf8bcd65542e436736ef32ddca1b3e06094cb6ec5755203b80",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/fixedbitset/0.4.2/download"
              ],
              "strip_prefix": "fixedbitset-0.4.2",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.fixedbitset-0.4.2.bazel"
            }
          },
          "rules_rust_bindgen__annotate-snippets-0.9.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__annotate-snippets-0.9.1",
              "sha256": "c3b9d411ecbaf79885c6df4d75fff75858d5995ff25385657a28af47e82f9c36",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/annotate-snippets/0.9.1/download"
              ],
              "strip_prefix": "annotate-snippets-0.9.1",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.annotate-snippets-0.9.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__httparse-1.8.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__httparse-1.8.0",
              "sha256": "d897f394bad6a705d5f4104762e116a75639e470d80901eed05a860a95cb1904",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/httparse/1.8.0/download"
              ],
              "strip_prefix": "httparse-1.8.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.httparse-1.8.0.bazel"
            }
          },
          "cui__powerfmt-0.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__powerfmt-0.2.0",
              "sha256": "439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/powerfmt/0.2.0/download"
              ],
              "strip_prefix": "powerfmt-0.2.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.powerfmt-0.2.0.bazel"
            }
          },
          "rrra__strsim-0.10.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__strsim-0.10.0",
              "sha256": "73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/strsim/0.10.0/download"
              ],
              "strip_prefix": "strsim-0.10.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.strsim-0.10.0.bazel"
            }
          },
          "rrra__winapi-i686-pc-windows-gnu-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__winapi-i686-pc-windows-gnu-0.4.0",
              "sha256": "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi-i686-pc-windows-gnu/0.4.0/download"
              ],
              "strip_prefix": "winapi-i686-pc-windows-gnu-0.4.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.winapi-i686-pc-windows-gnu-0.4.0.bazel"
            }
          },
          "rules_rust_prost__tonic-0.9.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__tonic-0.9.2",
              "sha256": "3082666a3a6433f7f511c7192923fa1fe07c69332d3c6a2e6bb040b569199d5a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tonic/0.9.2/download"
              ],
              "strip_prefix": "tonic-0.9.2",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.tonic-0.9.2.bazel"
            }
          },
          "rules_rust_prost__regex-1.8.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__regex-1.8.4",
              "sha256": "d0ab3ca65655bb1e41f2a8c8cd662eb4fb035e67c3f78da1d61dffe89d07300f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex/1.8.4/download"
              ],
              "strip_prefix": "regex-1.8.4",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.regex-1.8.4.bazel"
            }
          },
          "rules_rust_prost__async-trait-0.1.68": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__async-trait-0.1.68",
              "sha256": "b9ccdd8f2a161be9bd5c023df56f1b2a0bd1d83872ae53b71a84a12c9bf6e842",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/async-trait/0.1.68/download"
              ],
              "strip_prefix": "async-trait-0.1.68",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.async-trait-0.1.68.bazel"
            }
          },
          "rules_rust_wasm_bindgen__brotli-decompressor-2.5.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__brotli-decompressor-2.5.1",
              "sha256": "4e2e4afe60d7dd600fdd3de8d0f08c2b7ec039712e3b6137ff98b7004e82de4f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/brotli-decompressor/2.5.1/download"
              ],
              "strip_prefix": "brotli-decompressor-2.5.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.brotli-decompressor-2.5.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__windows_x86_64_msvc-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__windows_x86_64_msvc-0.48.0",
              "sha256": "1a515f5799fe4961cb532f983ce2b23082366b898e52ffbce459c86f67c8378a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_msvc/0.48.0/download"
              ],
              "strip_prefix": "windows_x86_64_msvc-0.48.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.windows_x86_64_msvc-0.48.0.bazel"
            }
          },
          "cui__unicode-normalization-0.1.22": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__unicode-normalization-0.1.22",
              "sha256": "5c5713f0fc4b5db668a2ac63cdb7bb4469d8c9fed047b1d0292cc7b0ce2ba921",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicode-normalization/0.1.22/download"
              ],
              "strip_prefix": "unicode-normalization-0.1.22",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.unicode-normalization-0.1.22.bazel"
            }
          },
          "rules_rust_prost__windows_x86_64_msvc-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__windows_x86_64_msvc-0.48.0",
              "sha256": "1a515f5799fe4961cb532f983ce2b23082366b898e52ffbce459c86f67c8378a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_msvc/0.48.0/download"
              ],
              "strip_prefix": "windows_x86_64_msvc-0.48.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.windows_x86_64_msvc-0.48.0.bazel"
            }
          },
          "cui__winapi-0.3.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__winapi-0.3.9",
              "sha256": "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi/0.3.9/download"
              ],
              "strip_prefix": "winapi-0.3.9",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.winapi-0.3.9.bazel"
            }
          },
          "cui__syn-2.0.32": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__syn-2.0.32",
              "sha256": "239814284fd6f1a4ffe4ca893952cdd93c224b6a1571c9a9eadd670295c0c9e2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/syn/2.0.32/download"
              ],
              "strip_prefix": "syn-2.0.32",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.syn-2.0.32.bazel"
            }
          },
          "rules_rust_wasm_bindgen__wasm-bindgen-externref-xform-0.2.91": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasm-bindgen-externref-xform-0.2.91",
              "sha256": "12b6ac5fca1d0992d2328147488169ea166bfe899c88f8ad06cf583f4c492fcf",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-externref-xform/0.2.91/download"
              ],
              "strip_prefix": "wasm-bindgen-externref-xform-0.2.91",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.wasm-bindgen-externref-xform-0.2.91.bazel"
            }
          },
          "rules_rust_wasm_bindgen__idna-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__idna-0.4.0",
              "sha256": "7d20d6b07bfbc108882d88ed8e37d39636dcc260e15e30c45e6ba089610b917c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/idna/0.4.0/download"
              ],
              "strip_prefix": "idna-0.4.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.idna-0.4.0.bazel"
            }
          },
          "rrra__regex-1.9.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__regex-1.9.1",
              "sha256": "b2eae68fc220f7cf2532e4494aded17545fce192d59cd996e0fe7887f4ceb575",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex/1.9.1/download"
              ],
              "strip_prefix": "regex-1.9.1",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.regex-1.9.1.bazel"
            }
          },
          "cui__anstyle-parse-0.2.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__anstyle-parse-0.2.1",
              "sha256": "938874ff5980b03a87c5524b3ae5b59cf99b1d6bc836848df7bc5ada9643c333",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anstyle-parse/0.2.1/download"
              ],
              "strip_prefix": "anstyle-parse-0.2.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.anstyle-parse-0.2.1.bazel"
            }
          },
          "rules_rust_prost__rustversion-1.0.12": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__rustversion-1.0.12",
              "sha256": "4f3208ce4d8448b3f3e7d168a73f5e0c43a61e32930de3bceeccedb388b6bf06",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustversion/1.0.12/download"
              ],
              "strip_prefix": "rustversion-1.0.12",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.rustversion-1.0.12.bazel"
            }
          },
          "rules_rust_wasm_bindgen__wait-timeout-0.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wait-timeout-0.2.0",
              "sha256": "9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wait-timeout/0.2.0/download"
              ],
              "strip_prefix": "wait-timeout-0.2.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.wait-timeout-0.2.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__windows_aarch64_gnullvm-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__windows_aarch64_gnullvm-0.48.0",
              "sha256": "91ae572e1b79dba883e0d315474df7305d12f569b400fcf90581b06062f7e1bc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_aarch64_gnullvm/0.48.0/download"
              ],
              "strip_prefix": "windows_aarch64_gnullvm-0.48.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.windows_aarch64_gnullvm-0.48.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__quick-error-1.2.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__quick-error-1.2.3",
              "sha256": "a1d01941d82fa2ab50be1e79e6714289dd7cde78eba4c074bc5a4374f650dfe0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/quick-error/1.2.3/download"
              ],
              "strip_prefix": "quick-error-1.2.3",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.quick-error-1.2.3.bazel"
            }
          },
          "rules_rust_prost__tokio-macros-2.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__tokio-macros-2.1.0",
              "sha256": "630bdcf245f78637c13ec01ffae6187cca34625e8c63150d424b59e55af2675e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tokio-macros/2.1.0/download"
              ],
              "strip_prefix": "tokio-macros-2.1.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.tokio-macros-2.1.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__wasmprinter-0.2.60": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasmprinter-0.2.60",
              "sha256": "b76cb909fe3d9b0de58cee1f4072247e680ff5cc1558ccad2790a9de14a23993",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasmprinter/0.2.60/download"
              ],
              "strip_prefix": "wasmprinter-0.2.60",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.wasmprinter-0.2.60.bazel"
            }
          },
          "rules_rust_bindgen__winapi-0.3.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__winapi-0.3.9",
              "sha256": "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi/0.3.9/download"
              ],
              "strip_prefix": "winapi-0.3.9",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.winapi-0.3.9.bazel"
            }
          },
          "cui__gix-macros-0.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-macros-0.1.0",
              "sha256": "9d8acb5ee668d55f0f2d19a320a3f9ef67a6999ad483e11135abcc2464ed18b6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-macros/0.1.0/download"
              ],
              "strip_prefix": "gix-macros-0.1.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-macros-0.1.0.bazel"
            }
          },
          "rrra__ryu-1.0.14": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__ryu-1.0.14",
              "sha256": "fe232bdf6be8c8de797b22184ee71118d63780ea42ac85b61d1baa6d3b782ae9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ryu/1.0.14/download"
              ],
              "strip_prefix": "ryu-1.0.14",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.ryu-1.0.14.bazel"
            }
          },
          "rrra__serde-1.0.171": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__serde-1.0.171",
              "sha256": "30e27d1e4fd7659406c492fd6cfaf2066ba8773de45ca75e855590f856dc34a9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/serde/1.0.171/download"
              ],
              "strip_prefix": "serde-1.0.171",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.serde-1.0.171.bazel"
            }
          },
          "rules_rust_wasm_bindgen__core-foundation-sys-0.8.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__core-foundation-sys-0.8.4",
              "sha256": "e496a50fda8aacccc86d7529e2c1e0892dbd0f898a6b5645b5561b89c3210efa",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/core-foundation-sys/0.8.4/download"
              ],
              "strip_prefix": "core-foundation-sys-0.8.4",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.core-foundation-sys-0.8.4.bazel"
            }
          },
          "rules_rust_prost__lock_api-0.4.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__lock_api-0.4.10",
              "sha256": "c1cc9717a20b1bb222f333e6a92fd32f7d8a18ddc5a3191a11af45dcbf4dcd16",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/lock_api/0.4.10/download"
              ],
              "strip_prefix": "lock_api-0.4.10",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.lock_api-0.4.10.bazel"
            }
          },
          "rules_rust_prost__futures-core-0.3.28": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__futures-core-0.3.28",
              "sha256": "4bca583b7e26f571124fe5b7561d49cb2868d79116cfa0eefce955557c6fee8c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/futures-core/0.3.28/download"
              ],
              "strip_prefix": "futures-core-0.3.28",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.futures-core-0.3.28.bazel"
            }
          },
          "rrra__winapi-x86_64-pc-windows-gnu-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__winapi-x86_64-pc-windows-gnu-0.4.0",
              "sha256": "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi-x86_64-pc-windows-gnu/0.4.0/download"
              ],
              "strip_prefix": "winapi-x86_64-pc-windows-gnu-0.4.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.winapi-x86_64-pc-windows-gnu-0.4.0.bazel"
            }
          },
          "rrra__anstyle-1.0.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__anstyle-1.0.1",
              "sha256": "3a30da5c5f2d5e72842e00bcb57657162cdabef0931f40e2deb9b4140440cecd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anstyle/1.0.1/download"
              ],
              "strip_prefix": "anstyle-1.0.1",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.anstyle-1.0.1.bazel"
            }
          },
          "cui__dunce-1.0.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__dunce-1.0.4",
              "sha256": "56ce8c6da7551ec6c462cbaf3bfbc75131ebbfa1c944aeaa9dab51ca1c5f0c3b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/dunce/1.0.4/download"
              ],
              "strip_prefix": "dunce-1.0.4",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.dunce-1.0.4.bazel"
            }
          },
          "rules_rust_bindgen__glob-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__glob-0.3.1",
              "sha256": "d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/glob/0.3.1/download"
              ],
              "strip_prefix": "glob-0.3.1",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.glob-0.3.1.bazel"
            }
          },
          "cui__phf_generator-0.11.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__phf_generator-0.11.2",
              "sha256": "48e4cc64c2ad9ebe670cb8fd69dd50ae301650392e81c05f9bfcb2d5bdbc24b0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/phf_generator/0.11.2/download"
              ],
              "strip_prefix": "phf_generator-0.11.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.phf_generator-0.11.2.bazel"
            }
          },
          "rules_rust_prost__fastrand-1.9.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__fastrand-1.9.0",
              "sha256": "e51093e27b0797c359783294ca4f0a911c270184cb10f85783b118614a1501be",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/fastrand/1.9.0/download"
              ],
              "strip_prefix": "fastrand-1.9.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.fastrand-1.9.0.bazel"
            }
          },
          "rules_rust_prost__itertools-0.10.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__itertools-0.10.5",
              "sha256": "b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/itertools/0.10.5/download"
              ],
              "strip_prefix": "itertools-0.10.5",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.itertools-0.10.5.bazel"
            }
          },
          "rules_rust_bindgen__windows_x86_64_gnu-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__windows_x86_64_gnu-0.48.0",
              "sha256": "ca2b8a661f7628cbd23440e50b05d705db3686f894fc9580820623656af974b1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_gnu/0.48.0/download"
              ],
              "strip_prefix": "windows_x86_64_gnu-0.48.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.windows_x86_64_gnu-0.48.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__memoffset-0.9.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__memoffset-0.9.0",
              "sha256": "5a634b1c61a95585bd15607c6ab0c4e5b226e695ff2800ba0cdccddf208c406c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/memoffset/0.9.0/download"
              ],
              "strip_prefix": "memoffset-0.9.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.memoffset-0.9.0.bazel"
            }
          },
          "rules_rust_bindgen__windows-targets-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__windows-targets-0.48.0",
              "sha256": "7b1eb6f0cd7c80c79759c929114ef071b87354ce476d9d94271031c0497adfd5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows-targets/0.48.0/download"
              ],
              "strip_prefix": "windows-targets-0.48.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.windows-targets-0.48.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__twoway-0.1.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__twoway-0.1.8",
              "sha256": "59b11b2b5241ba34be09c3cc85a36e56e48f9888862e19cedf23336d35316ed1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/twoway/0.1.8/download"
              ],
              "strip_prefix": "twoway-0.1.8",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.twoway-0.1.8.bazel"
            }
          },
          "cui__redox_syscall-0.4.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__redox_syscall-0.4.1",
              "sha256": "4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/redox_syscall/0.4.1/download"
              ],
              "strip_prefix": "redox_syscall-0.4.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.redox_syscall-0.4.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__id-arena-2.2.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__id-arena-2.2.1",
              "sha256": "25a2bc672d1148e28034f176e01fffebb08b35768468cc954630da77a1449005",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/id-arena/2.2.1/download"
              ],
              "strip_prefix": "id-arena-2.2.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.id-arena-2.2.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__linux-raw-sys-0.3.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__linux-raw-sys-0.3.8",
              "sha256": "ef53942eb7bf7ff43a617b3e2c1c4a5ecf5944a7c1bc12d7ee39bbb15e5c1519",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/linux-raw-sys/0.3.8/download"
              ],
              "strip_prefix": "linux-raw-sys-0.3.8",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.linux-raw-sys-0.3.8.bazel"
            }
          },
          "cui__normpath-1.1.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__normpath-1.1.1",
              "sha256": "ec60c60a693226186f5d6edf073232bfb6464ed97eb22cf3b01c1e8198fd97f5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/normpath/1.1.1/download"
              ],
              "strip_prefix": "normpath-1.1.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.normpath-1.1.1.bazel"
            }
          },
          "cui__quote-1.0.29": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__quote-1.0.29",
              "sha256": "573015e8ab27661678357f27dc26460738fd2b6c86e46f386fde94cb5d913105",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/quote/1.0.29/download"
              ],
              "strip_prefix": "quote-1.0.29",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.quote-1.0.29.bazel"
            }
          },
          "rules_rust_wasm_bindgen__safemem-0.3.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__safemem-0.3.3",
              "sha256": "ef703b7cb59335eae2eb93ceb664c0eb7ea6bf567079d843e09420219668e072",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/safemem/0.3.3/download"
              ],
              "strip_prefix": "safemem-0.3.3",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.safemem-0.3.3.bazel"
            }
          },
          "rules_rust_bindgen__lazy_static-1.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__lazy_static-1.4.0",
              "sha256": "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/lazy_static/1.4.0/download"
              ],
              "strip_prefix": "lazy_static-1.4.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.lazy_static-1.4.0.bazel"
            }
          },
          "rules_rust_prost__axum-0.6.18": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__axum-0.6.18",
              "sha256": "f8175979259124331c1d7bf6586ee7e0da434155e4b2d48ec2c8386281d8df39",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/axum/0.6.18/download"
              ],
              "strip_prefix": "axum-0.6.18",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.axum-0.6.18.bazel"
            }
          },
          "rules_rust_prost__parking_lot-0.12.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__parking_lot-0.12.1",
              "sha256": "3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/parking_lot/0.12.1/download"
              ],
              "strip_prefix": "parking_lot-0.12.1",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.parking_lot-0.12.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__assert_cmd-1.0.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__assert_cmd-1.0.8",
              "sha256": "c98233c6673d8601ab23e77eb38f999c51100d46c5703b17288c57fddf3a1ffe",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/assert_cmd/1.0.8/download"
              ],
              "strip_prefix": "assert_cmd-1.0.8",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.assert_cmd-1.0.8.bazel"
            }
          },
          "cui__cargo-platform-0.1.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__cargo-platform-0.1.4",
              "sha256": "12024c4645c97566567129c204f65d5815a8c9aecf30fcbe682b2fe034996d36",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cargo-platform/0.1.4/download"
              ],
              "strip_prefix": "cargo-platform-0.1.4",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.cargo-platform-0.1.4.bazel"
            }
          },
          "cui__serde_starlark-0.1.14": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__serde_starlark-0.1.14",
              "sha256": "29675b116dd4c7ab4012e00e71f6dee9ed8c731108468b4434779c6b9eec7957",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/serde_starlark/0.1.14/download"
              ],
              "strip_prefix": "serde_starlark-0.1.14",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.serde_starlark-0.1.14.bazel"
            }
          },
          "cui__slug-0.1.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__slug-0.1.4",
              "sha256": "b3bc762e6a4b6c6fcaade73e77f9ebc6991b676f88bb2358bddb56560f073373",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/slug/0.1.4/download"
              ],
              "strip_prefix": "slug-0.1.4",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.slug-0.1.4.bazel"
            }
          },
          "cui__ppv-lite86-0.2.17": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__ppv-lite86-0.2.17",
              "sha256": "5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ppv-lite86/0.2.17/download"
              ],
              "strip_prefix": "ppv-lite86-0.2.17",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.ppv-lite86-0.2.17.bazel"
            }
          },
          "cui__rand_core-0.6.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__rand_core-0.6.4",
              "sha256": "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rand_core/0.6.4/download"
              ],
              "strip_prefix": "rand_core-0.6.4",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.rand_core-0.6.4.bazel"
            }
          },
          "rules_rust_prost__errno-dragonfly-0.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__errno-dragonfly-0.1.2",
              "sha256": "aa68f1b12764fab894d2755d2518754e71b4fd80ecfb822714a1206c2aab39bf",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/errno-dragonfly/0.1.2/download"
              ],
              "strip_prefix": "errno-dragonfly-0.1.2",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.errno-dragonfly-0.1.2.bazel"
            }
          },
          "cui__gix-url-0.24.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-url-0.24.0",
              "sha256": "6125ecf46e8c68bf7202da6cad239831daebf0247ffbab30210d72f3856e420f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-url/0.24.0/download"
              ],
              "strip_prefix": "gix-url-0.24.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-url-0.24.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__percent-encoding-2.3.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__percent-encoding-2.3.0",
              "sha256": "9b2a4787296e9989611394c33f193f676704af1686e70b8f8033ab5ba9a35a94",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/percent-encoding/2.3.0/download"
              ],
              "strip_prefix": "percent-encoding-2.3.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.percent-encoding-2.3.0.bazel"
            }
          },
          "rules_rust_prost__wasi-0.11.0-wasi-snapshot-preview1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__wasi-0.11.0-wasi-snapshot-preview1",
              "sha256": "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasi/0.11.0+wasi-snapshot-preview1/download"
              ],
              "strip_prefix": "wasi-0.11.0+wasi-snapshot-preview1",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.wasi-0.11.0+wasi-snapshot-preview1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__rustix-0.37.23": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__rustix-0.37.23",
              "sha256": "4d69718bf81c6127a49dc64e44a742e8bb9213c0ff8869a22c308f84c1d4ab06",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustix/0.37.23/download"
              ],
              "strip_prefix": "rustix-0.37.23",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.rustix-0.37.23.bazel"
            }
          },
          "cui__clap_builder-4.3.11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__clap_builder-4.3.11",
              "sha256": "98c59138d527eeaf9b53f35a77fcc1fad9d883116070c63d5de1c7dc7b00c72b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/clap_builder/4.3.11/download"
              ],
              "strip_prefix": "clap_builder-4.3.11",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.clap_builder-4.3.11.bazel"
            }
          },
          "cui__tracing-core-0.1.32": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__tracing-core-0.1.32",
              "sha256": "c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tracing-core/0.1.32/download"
              ],
              "strip_prefix": "tracing-core-0.1.32",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.tracing-core-0.1.32.bazel"
            }
          },
          "rrra__clap_lex-0.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__clap_lex-0.5.0",
              "sha256": "2da6da31387c7e4ef160ffab6d5e7f00c42626fe39aea70a7b0f1773f7dd6c1b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/clap_lex/0.5.0/download"
              ],
              "strip_prefix": "clap_lex-0.5.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.clap_lex-0.5.0.bazel"
            }
          },
          "rules_rust_prost__base64-0.21.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__base64-0.21.2",
              "sha256": "604178f6c5c21f02dc555784810edfb88d34ac2c73b2eae109655649ee73ce3d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/base64/0.21.2/download"
              ],
              "strip_prefix": "base64-0.21.2",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.base64-0.21.2.bazel"
            }
          },
          "rules_rust_wasm_bindgen__windows_i686_msvc-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__windows_i686_msvc-0.48.0",
              "sha256": "4542c6e364ce21bf45d69fdd2a8e455fa38d316158cfd43b3ac1c5b1b19f8e00",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_i686_msvc/0.48.0/download"
              ],
              "strip_prefix": "windows_i686_msvc-0.48.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.windows_i686_msvc-0.48.0.bazel"
            }
          },
          "cui__home-0.5.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__home-0.5.5",
              "sha256": "5444c27eef6923071f7ebcc33e3444508466a76f7a2b93da00ed6e19f30c1ddb",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/home/0.5.5/download"
              ],
              "strip_prefix": "home-0.5.5",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.home-0.5.5.bazel"
            }
          },
          "cui__windows_x86_64_gnu-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__windows_x86_64_gnu-0.48.0",
              "sha256": "ca2b8a661f7628cbd23440e50b05d705db3686f894fc9580820623656af974b1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_gnu/0.48.0/download"
              ],
              "strip_prefix": "windows_x86_64_gnu-0.48.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.windows_x86_64_gnu-0.48.0.bazel"
            }
          },
          "cui__gix-actor-0.27.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-actor-0.27.0",
              "sha256": "08c60e982c5290897122d4e2622447f014a2dadd5a18cb73d50bb91b31645e27",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-actor/0.27.0/download"
              ],
              "strip_prefix": "gix-actor-0.27.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-actor-0.27.0.bazel"
            }
          },
          "cui__gix-attributes-0.19.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-attributes-0.19.0",
              "sha256": "2451665e70709ba4753b623ef97511ee98c4a73816b2c5b5df25678d607ed820",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-attributes/0.19.0/download"
              ],
              "strip_prefix": "gix-attributes-0.19.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-attributes-0.19.0.bazel"
            }
          },
          "cui__unic-ucd-version-0.9.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__unic-ucd-version-0.9.0",
              "sha256": "96bd2f2237fe450fcd0a1d2f5f4e91711124f7857ba2e964247776ebeeb7b0c4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unic-ucd-version/0.9.0/download"
              ],
              "strip_prefix": "unic-ucd-version-0.9.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.unic-ucd-version-0.9.0.bazel"
            }
          },
          "com_google_googleapis": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~com_google_googleapis",
              "urls": [
                "https://github.com/googleapis/googleapis/archive/18becb1d1426feb7399db144d7beeb3284f1ccb0.zip"
              ],
              "strip_prefix": "googleapis-18becb1d1426feb7399db144d7beeb3284f1ccb0",
              "sha256": "b8c487191eb942361af905e40172644eab490190e717c3d09bf83e87f3994fff"
            }
          },
          "cui__either-1.9.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__either-1.9.0",
              "sha256": "a26ae43d7bcc3b814de94796a5e736d4029efb0ee900c12e2d54c993ad1a1e07",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/either/1.9.0/download"
              ],
              "strip_prefix": "either-1.9.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.either-1.9.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__gimli-0.26.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__gimli-0.26.2",
              "sha256": "22030e2c5a68ec659fde1e949a745124b48e6fa8b045b7ed5bd1fe4ccc5c4e5d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gimli/0.26.2/download"
              ],
              "strip_prefix": "gimli-0.26.2",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.gimli-0.26.2.bazel"
            }
          },
          "cui__parking_lot-0.12.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__parking_lot-0.12.1",
              "sha256": "3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/parking_lot/0.12.1/download"
              ],
              "strip_prefix": "parking_lot-0.12.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.parking_lot-0.12.1.bazel"
            }
          },
          "cui__globwalk-0.8.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__globwalk-0.8.1",
              "sha256": "93e3af942408868f6934a7b85134a3230832b9977cf66125df2f9edcfce4ddcc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/globwalk/0.8.1/download"
              ],
              "strip_prefix": "globwalk-0.8.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.globwalk-0.8.1.bazel"
            }
          },
          "rules_rust_bindgen__clap-4.3.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__clap-4.3.3",
              "sha256": "ca8f255e4b8027970e78db75e78831229c9815fdbfa67eb1a1b777a62e24b4a0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/clap/4.3.3/download"
              ],
              "strip_prefix": "clap-4.3.3",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.clap-4.3.3.bazel"
            }
          },
          "rules_rust_wasm_bindgen__wasm-bindgen-wasm-interpreter-0.2.91": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasm-bindgen-wasm-interpreter-0.2.91",
              "sha256": "682940195a701dbf887f20017418b8cac916a37b3f91ededec33226619e973c1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-wasm-interpreter/0.2.91/download"
              ],
              "strip_prefix": "wasm-bindgen-wasm-interpreter-0.2.91",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.wasm-bindgen-wasm-interpreter-0.2.91.bazel"
            }
          },
          "rules_rust_prost__hyper-0.14.26": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__hyper-0.14.26",
              "sha256": "ab302d72a6f11a3b910431ff93aae7e773078c769f0a3ef15fb9ec692ed147d4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hyper/0.14.26/download"
              ],
              "strip_prefix": "hyper-0.14.26",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.hyper-0.14.26.bazel"
            }
          },
          "rules_rust_wasm_bindgen__predicates-2.1.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__predicates-2.1.5",
              "sha256": "59230a63c37f3e18569bdb90e4a89cbf5bf8b06fea0b84e65ea10cc4df47addd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/predicates/2.1.5/download"
              ],
              "strip_prefix": "predicates-2.1.5",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.predicates-2.1.5.bazel"
            }
          },
          "rules_rust_wasm_bindgen__ring-0.17.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__ring-0.17.5",
              "sha256": "fb0205304757e5d899b9c2e448b867ffd03ae7f988002e47cd24954391394d0b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ring/0.17.5/download"
              ],
              "strip_prefix": "ring-0.17.5",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.ring-0.17.5.bazel"
            }
          },
          "rules_rust_prost__memchr-2.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__memchr-2.5.0",
              "sha256": "2dffe52ecf27772e601905b7522cb4ef790d2cc203488bbd0e2fe85fcb74566d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/memchr/2.5.0/download"
              ],
              "strip_prefix": "memchr-2.5.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.memchr-2.5.0.bazel"
            }
          },
          "cui__crates-index-2.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__crates-index-2.2.0",
              "sha256": "33bc10579ea08741ae173928194b6c42c90b295d51ddd0d18238eaf15502ac87",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crates-index/2.2.0/download"
              ],
              "strip_prefix": "crates-index-2.2.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.crates-index-2.2.0.bazel"
            }
          },
          "cui__windows_x86_64_msvc-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__windows_x86_64_msvc-0.48.0",
              "sha256": "1a515f5799fe4961cb532f983ce2b23082366b898e52ffbce459c86f67c8378a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_msvc/0.48.0/download"
              ],
              "strip_prefix": "windows_x86_64_msvc-0.48.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.windows_x86_64_msvc-0.48.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__crossbeam-channel-0.5.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__crossbeam-channel-0.5.8",
              "sha256": "a33c2bf77f2df06183c3aa30d1e96c0695a313d4f9c453cc3762a6db39f99200",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crossbeam-channel/0.5.8/download"
              ],
              "strip_prefix": "crossbeam-channel-0.5.8",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.crossbeam-channel-0.5.8.bazel"
            }
          },
          "rules_rust_wasm_bindgen__windows-sys-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__windows-sys-0.48.0",
              "sha256": "677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows-sys/0.48.0/download"
              ],
              "strip_prefix": "windows-sys-0.48.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.windows-sys-0.48.0.bazel"
            }
          },
          "cui__redox_syscall-0.3.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__redox_syscall-0.3.5",
              "sha256": "567664f262709473930a4bf9e51bf2ebf3348f2e748ccc50dea20646858f8f29",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/redox_syscall/0.3.5/download"
              ],
              "strip_prefix": "redox_syscall-0.3.5",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.redox_syscall-0.3.5.bazel"
            }
          },
          "rules_rust_wasm_bindgen__flate2-1.0.28": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__flate2-1.0.28",
              "sha256": "46303f565772937ffe1d394a4fac6f411c6013172fadde9dcdb1e147a086940e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/flate2/1.0.28/download"
              ],
              "strip_prefix": "flate2-1.0.28",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.flate2-1.0.28.bazel"
            }
          },
          "rules_rust_wasm_bindgen__indexmap-1.9.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__indexmap-1.9.3",
              "sha256": "bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/indexmap/1.9.3/download"
              ],
              "strip_prefix": "indexmap-1.9.3",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.indexmap-1.9.3.bazel"
            }
          },
          "rules_rust_wasm_bindgen__once_cell-1.18.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__once_cell-1.18.0",
              "sha256": "dd8b5dd2ae5ed71462c540258bedcb51965123ad7e7ccf4b9a8cafaa4a63576d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/once_cell/1.18.0/download"
              ],
              "strip_prefix": "once_cell-1.18.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.once_cell-1.18.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__termtree-0.4.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__termtree-0.4.1",
              "sha256": "3369f5ac52d5eb6ab48c6b4ffdc8efbcad6b89c765749064ba298f2c68a16a76",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/termtree/0.4.1/download"
              ],
              "strip_prefix": "termtree-0.4.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.termtree-0.4.1.bazel"
            }
          },
          "rules_rust_bindgen__anstream-0.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__anstream-0.3.2",
              "sha256": "0ca84f3628370c59db74ee214b3263d58f9aadd9b4fe7e711fd87dc452b7f163",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anstream/0.3.2/download"
              ],
              "strip_prefix": "anstream-0.3.2",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.anstream-0.3.2.bazel"
            }
          },
          "rules_rust_wasm_bindgen__scopeguard-1.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__scopeguard-1.1.0",
              "sha256": "d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/scopeguard/1.1.0/download"
              ],
              "strip_prefix": "scopeguard-1.1.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.scopeguard-1.1.0.bazel"
            }
          },
          "cui__gix-protocol-0.40.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-protocol-0.40.0",
              "sha256": "cc7b700dc20cc9be8a5130a1fd7e10c34117ffa7068431c8c24d963f0a2e0c9b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-protocol/0.40.0/download"
              ],
              "strip_prefix": "gix-protocol-0.40.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-protocol-0.40.0.bazel"
            }
          },
          "bazelci_rules": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~bazelci_rules",
              "sha256": "eca21884e6f66a88c358e580fd67a6b148d30ab57b1680f62a96c00f9bc6a07e",
              "strip_prefix": "bazelci_rules-1.0.0",
              "url": "https://github.com/bazelbuild/continuous-integration/releases/download/rules-1.0.0/bazelci_rules-1.0.0.tar.gz"
            }
          },
          "rules_rust_wasm_bindgen__doc-comment-0.3.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__doc-comment-0.3.3",
              "sha256": "fea41bba32d969b513997752735605054bc0dfa92b4c56bf1189f2e174be7a10",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/doc-comment/0.3.3/download"
              ],
              "strip_prefix": "doc-comment-0.3.3",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.doc-comment-0.3.3.bazel"
            }
          },
          "rules_rust_wasm_bindgen__fastrand-1.9.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__fastrand-1.9.0",
              "sha256": "e51093e27b0797c359783294ca4f0a911c270184cb10f85783b118614a1501be",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/fastrand/1.9.0/download"
              ],
              "strip_prefix": "fastrand-1.9.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.fastrand-1.9.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__num_threads-0.1.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__num_threads-0.1.6",
              "sha256": "2819ce041d2ee131036f4fc9d6ae7ae125a3a40e97ba64d04fe799ad9dabbb44",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num_threads/0.1.6/download"
              ],
              "strip_prefix": "num_threads-0.1.6",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.num_threads-0.1.6.bazel"
            }
          },
          "cui__crc32fast-1.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__crc32fast-1.3.2",
              "sha256": "b540bd8bc810d3885c6ea91e2018302f68baba2129ab3e88f32389ee9370880d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crc32fast/1.3.2/download"
              ],
              "strip_prefix": "crc32fast-1.3.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.crc32fast-1.3.2.bazel"
            }
          },
          "cui__rayon-core-1.12.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__rayon-core-1.12.0",
              "sha256": "5ce3fb6ad83f861aac485e76e1985cd109d9a3713802152be56c3b1f0e0658ed",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rayon-core/1.12.0/download"
              ],
              "strip_prefix": "rayon-core-1.12.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.rayon-core-1.12.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__lazy_static-1.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__lazy_static-1.4.0",
              "sha256": "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/lazy_static/1.4.0/download"
              ],
              "strip_prefix": "lazy_static-1.4.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.lazy_static-1.4.0.bazel"
            }
          },
          "cui__thread_local-1.1.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__thread_local-1.1.4",
              "sha256": "5516c27b78311c50bf42c071425c560ac799b11c30b31f87e3081965fe5e0180",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/thread_local/1.1.4/download"
              ],
              "strip_prefix": "thread_local-1.1.4",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.thread_local-1.1.4.bazel"
            }
          },
          "rules_rust_bindgen__aho-corasick-1.0.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__aho-corasick-1.0.2",
              "sha256": "43f6cb1bf222025340178f382c426f13757b2960e89779dfcb319c32542a5a41",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/aho-corasick/1.0.2/download"
              ],
              "strip_prefix": "aho-corasick-1.0.2",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.aho-corasick-1.0.2.bazel"
            }
          },
          "rules_rust_wasm_bindgen__threadpool-1.8.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__threadpool-1.8.1",
              "sha256": "d050e60b33d41c19108b32cea32164033a9013fe3b46cbd4457559bfbf77afaa",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/threadpool/1.8.1/download"
              ],
              "strip_prefix": "threadpool-1.8.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.threadpool-1.8.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__walrus-macro-0.19.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__walrus-macro-0.19.0",
              "sha256": "0a6e5bd22c71e77d60140b0bd5be56155a37e5bd14e24f5f87298040d0cc40d7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/walrus-macro/0.19.0/download"
              ],
              "strip_prefix": "walrus-macro-0.19.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.walrus-macro-0.19.0.bazel"
            }
          },
          "cui__linux-raw-sys-0.4.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__linux-raw-sys-0.4.10",
              "sha256": "da2479e8c062e40bf0066ffa0bc823de0a9368974af99c9f6df941d2c231e03f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/linux-raw-sys/0.4.10/download"
              ],
              "strip_prefix": "linux-raw-sys-0.4.10",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.linux-raw-sys-0.4.10.bazel"
            }
          },
          "cui__rdrand-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__rdrand-0.4.0",
              "sha256": "678054eb77286b51581ba43620cc911abf02758c91f93f479767aed0f90458b2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rdrand/0.4.0/download"
              ],
              "strip_prefix": "rdrand-0.4.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.rdrand-0.4.0.bazel"
            }
          },
          "rules_rust_bindgen__anstyle-wincon-1.0.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__anstyle-wincon-1.0.1",
              "sha256": "180abfa45703aebe0093f79badacc01b8fd4ea2e35118747e5811127f926e188",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anstyle-wincon/1.0.1/download"
              ],
              "strip_prefix": "anstyle-wincon-1.0.1",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.anstyle-wincon-1.0.1.bazel"
            }
          },
          "rrra__windows_x86_64_msvc-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__windows_x86_64_msvc-0.48.0",
              "sha256": "1a515f5799fe4961cb532f983ce2b23082366b898e52ffbce459c86f67c8378a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_msvc/0.48.0/download"
              ],
              "strip_prefix": "windows_x86_64_msvc-0.48.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.windows_x86_64_msvc-0.48.0.bazel"
            }
          },
          "cui__rand_core-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__rand_core-0.3.1",
              "sha256": "7a6fdeb83b075e8266dcc8762c22776f6877a63111121f5f8c7411e5be7eed4b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rand_core/0.3.1/download"
              ],
              "strip_prefix": "rand_core-0.3.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.rand_core-0.3.1.bazel"
            }
          },
          "cui__rayon-1.8.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__rayon-1.8.0",
              "sha256": "9c27db03db7734835b3f53954b534c91069375ce6ccaa2e065441e07d9b6cdb1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rayon/1.8.0/download"
              ],
              "strip_prefix": "rayon-1.8.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.rayon-1.8.0.bazel"
            }
          },
          "cui__cpufeatures-0.2.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__cpufeatures-0.2.9",
              "sha256": "a17b76ff3a4162b0b27f354a0c87015ddad39d35f9c0c36607a3bdd175dde1f1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cpufeatures/0.2.9/download"
              ],
              "strip_prefix": "cpufeatures-0.2.9",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.cpufeatures-0.2.9.bazel"
            }
          },
          "cui__tempfile-3.8.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__tempfile-3.8.1",
              "sha256": "7ef1adac450ad7f4b3c28589471ade84f25f731a7a0fe30d71dfa9f60fd808e5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tempfile/3.8.1/download"
              ],
              "strip_prefix": "tempfile-3.8.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.tempfile-3.8.1.bazel"
            }
          },
          "rules_rust_prost__mio-0.8.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__mio-0.8.8",
              "sha256": "927a765cd3fc26206e66b296465fa9d3e5ab003e651c1b3c060e7956d96b19d2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/mio/0.8.8/download"
              ],
              "strip_prefix": "mio-0.8.8",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.mio-0.8.8.bazel"
            }
          },
          "rules_rust_wasm_bindgen__windows_aarch64_msvc-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__windows_aarch64_msvc-0.48.0",
              "sha256": "b2ef27e0d7bdfcfc7b868b317c1d32c641a6fe4629c171b8928c7b08d98d7cf3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_aarch64_msvc/0.48.0/download"
              ],
              "strip_prefix": "windows_aarch64_msvc-0.48.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.windows_aarch64_msvc-0.48.0.bazel"
            }
          },
          "cui__rustc-serialize-0.3.25": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__rustc-serialize-0.3.25",
              "sha256": "fe834bc780604f4674073badbad26d7219cadfb4a2275802db12cbae17498401",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustc-serialize/0.3.25/download"
              ],
              "strip_prefix": "rustc-serialize-0.3.25",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.rustc-serialize-0.3.25.bazel"
            }
          },
          "rrra__anyhow-1.0.71": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__anyhow-1.0.71",
              "sha256": "9c7d0618f0e0b7e8ff11427422b64564d5fb0be1940354bfe2e0529b18a9d9b8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anyhow/1.0.71/download"
              ],
              "strip_prefix": "anyhow-1.0.71",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.anyhow-1.0.71.bazel"
            }
          },
          "cui__gix-path-0.10.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-path-0.10.0",
              "sha256": "6a1d370115171e3ae03c5c6d4f7d096f2981a40ddccb98dfd704c773530ba73b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-path/0.10.0/download"
              ],
              "strip_prefix": "gix-path-0.10.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-path-0.10.0.bazel"
            }
          },
          "rules_rust_bindgen__hermit-abi-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__hermit-abi-0.3.1",
              "sha256": "fed44880c466736ef9a5c5b5facefb5ed0785676d0c02d612db14e54f0d84286",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hermit-abi/0.3.1/download"
              ],
              "strip_prefix": "hermit-abi-0.3.1",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.hermit-abi-0.3.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__multipart-0.18.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__multipart-0.18.0",
              "sha256": "00dec633863867f29cb39df64a397cdf4a6354708ddd7759f70c7fb51c5f9182",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/multipart/0.18.0/download"
              ],
              "strip_prefix": "multipart-0.18.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.multipart-0.18.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__android_system_properties-0.1.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__android_system_properties-0.1.5",
              "sha256": "819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/android_system_properties/0.1.5/download"
              ],
              "strip_prefix": "android_system_properties-0.1.5",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.android_system_properties-0.1.5.bazel"
            }
          },
          "rules_rust_wasm_bindgen__cc-1.0.83": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__cc-1.0.83",
              "sha256": "f1174fb0b6ec23863f8b971027804a42614e347eafb0a95bf0b12cdae21fc4d0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cc/1.0.83/download"
              ],
              "strip_prefix": "cc-1.0.83",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.cc-1.0.83.bazel"
            }
          },
          "cui__gix-ref-0.37.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-ref-0.37.0",
              "sha256": "22e6b749660b613641769edc1954132eb8071a13c32224891686091bef078de4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-ref/0.37.0/download"
              ],
              "strip_prefix": "gix-ref-0.37.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-ref-0.37.0.bazel"
            }
          },
          "cui__rand-0.8.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__rand-0.8.5",
              "sha256": "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rand/0.8.5/download"
              ],
              "strip_prefix": "rand-0.8.5",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.rand-0.8.5.bazel"
            }
          },
          "cui__num-integer-0.1.45": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__num-integer-0.1.45",
              "sha256": "225d3389fb3509a24c93f5c29eb6bde2586b98d9f016636dff58d7c6f7569cd9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num-integer/0.1.45/download"
              ],
              "strip_prefix": "num-integer-0.1.45",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.num-integer-0.1.45.bazel"
            }
          },
          "rules_rust_bindgen__anstyle-query-1.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__anstyle-query-1.0.0",
              "sha256": "5ca11d4be1bab0c8bc8734a9aa7bf4ee8316d462a08c6ac5052f888fef5b494b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anstyle-query/1.0.0/download"
              ],
              "strip_prefix": "anstyle-query-1.0.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.anstyle-query-1.0.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__hermit-abi-0.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__hermit-abi-0.3.2",
              "sha256": "443144c8cdadd93ebf52ddb4056d257f5b52c04d3c804e657d19eb73fc33668b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hermit-abi/0.3.2/download"
              ],
              "strip_prefix": "hermit-abi-0.3.2",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.hermit-abi-0.3.2.bazel"
            }
          },
          "rrra__utf8parse-0.2.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__utf8parse-0.2.1",
              "sha256": "711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/utf8parse/0.2.1/download"
              ],
              "strip_prefix": "utf8parse-0.2.1",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.utf8parse-0.2.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__getrandom-0.2.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__getrandom-0.2.10",
              "sha256": "be4136b2a15dd319360be1c07d9933517ccf0be8f16bf62a3bee4f0d618df427",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/getrandom/0.2.10/download"
              ],
              "strip_prefix": "getrandom-0.2.10",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.getrandom-0.2.10.bazel"
            }
          },
          "cargo_bazel.buildifier-windows-amd64.exe": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cargo_bazel.buildifier-windows-amd64.exe",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/5.0.1/buildifier-windows-amd64.exe"
              ],
              "sha256": "45e13b2951e4c611d346dacdaf0aafaa484045a3e7300fbc5dd01a896a688177",
              "downloaded_file_path": "buildifier.exe",
              "executable": true
            }
          },
          "cui__regex-1.10.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__regex-1.10.2",
              "sha256": "380b951a9c5e80ddfd6136919eef32310721aa4aacd4889a8d39124b026ab343",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex/1.10.2/download"
              ],
              "strip_prefix": "regex-1.10.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.regex-1.10.2.bazel"
            }
          },
          "rules_rust_prost__httparse-1.8.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__httparse-1.8.0",
              "sha256": "d897f394bad6a705d5f4104762e116a75639e470d80901eed05a860a95cb1904",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/httparse/1.8.0/download"
              ],
              "strip_prefix": "httparse-1.8.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.httparse-1.8.0.bazel"
            }
          },
          "rules_rust_bindgen__shlex-1.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__shlex-1.1.0",
              "sha256": "43b2853a4d09f215c24cc5489c992ce46052d359b5109343cbafbf26bc62f8a3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/shlex/1.1.0/download"
              ],
              "strip_prefix": "shlex-1.1.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.shlex-1.1.0.bazel"
            }
          },
          "rrra__log-0.4.19": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__log-0.4.19",
              "sha256": "b06a4cde4c0f271a446782e3eff8de789548ce57dbc8eca9292c27f4a42004b4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/log/0.4.19/download"
              ],
              "strip_prefix": "log-0.4.19",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.log-0.4.19.bazel"
            }
          },
          "cui__cargo_metadata-0.18.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__cargo_metadata-0.18.1",
              "sha256": "2d886547e41f740c616ae73108f6eb70afe6d940c7bc697cb30f13daec073037",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cargo_metadata/0.18.1/download"
              ],
              "strip_prefix": "cargo_metadata-0.18.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.cargo_metadata-0.18.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__predicates-1.0.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__predicates-1.0.8",
              "sha256": "f49cfaf7fdaa3bfacc6fa3e7054e65148878354a5cfddcf661df4c851f8021df",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/predicates/1.0.8/download"
              ],
              "strip_prefix": "predicates-1.0.8",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.predicates-1.0.8.bazel"
            }
          },
          "rrra__windows-targets-0.48.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__windows-targets-0.48.1",
              "sha256": "05d4b17490f70499f20b9e791dcf6a299785ce8af4d709018206dc5b4953e95f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows-targets/0.48.1/download"
              ],
              "strip_prefix": "windows-targets-0.48.1",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.windows-targets-0.48.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__serde_json-1.0.102": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__serde_json-1.0.102",
              "sha256": "b5062a995d481b2308b6064e9af76011f2921c35f97b0468811ed9f6cd91dfed",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/serde_json/1.0.102/download"
              ],
              "strip_prefix": "serde_json-1.0.102",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.serde_json-1.0.102.bazel"
            }
          },
          "cui__gix-fs-0.7.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-fs-0.7.0",
              "sha256": "09815faba62fe9b32d918b75a554686c98e43f7d48c43a80df58eb718e5c6635",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-fs/0.7.0/download"
              ],
              "strip_prefix": "gix-fs-0.7.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-fs-0.7.0.bazel"
            }
          },
          "rrra__clap_builder-4.3.11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__clap_builder-4.3.11",
              "sha256": "98c59138d527eeaf9b53f35a77fcc1fad9d883116070c63d5de1c7dc7b00c72b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/clap_builder/4.3.11/download"
              ],
              "strip_prefix": "clap_builder-4.3.11",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.clap_builder-4.3.11.bazel"
            }
          },
          "rules_rust_prost__windows-sys-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__windows-sys-0.48.0",
              "sha256": "677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows-sys/0.48.0/download"
              ],
              "strip_prefix": "windows-sys-0.48.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.windows-sys-0.48.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__windows_i686_gnu-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__windows_i686_gnu-0.48.0",
              "sha256": "622a1962a7db830d6fd0a69683c80a18fda201879f0f447f065a3b7467daa241",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_i686_gnu/0.48.0/download"
              ],
              "strip_prefix": "windows_i686_gnu-0.48.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.windows_i686_gnu-0.48.0.bazel"
            }
          },
          "cui__gix-lock-10.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-lock-10.0.0",
              "sha256": "47fc96fa8b6b6d33555021907c81eb3b27635daecf6e630630bdad44f8feaa95",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-lock/10.0.0/download"
              ],
              "strip_prefix": "gix-lock-10.0.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-lock-10.0.0.bazel"
            }
          },
          "cui__gix-sec-0.10.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-sec-0.10.0",
              "sha256": "92b9542ac025a8c02ed5d17b3fc031a111a384e859d0be3532ec4d58c40a0f28",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-sec/0.10.0/download"
              ],
              "strip_prefix": "gix-sec-0.10.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-sec-0.10.0.bazel"
            }
          },
          "rules_rust_prost__indexmap-1.9.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__indexmap-1.9.3",
              "sha256": "bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/indexmap/1.9.3/download"
              ],
              "strip_prefix": "indexmap-1.9.3",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.indexmap-1.9.3.bazel"
            }
          },
          "cui__gix-trace-0.1.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-trace-0.1.3",
              "sha256": "96b6d623a1152c3facb79067d6e2ecdae48130030cf27d6eb21109f13bd7b836",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-trace/0.1.3/download"
              ],
              "strip_prefix": "gix-trace-0.1.3",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-trace-0.1.3.bazel"
            }
          },
          "cui__num-iter-0.1.43": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__num-iter-0.1.43",
              "sha256": "7d03e6c028c5dc5cac6e2dec0efda81fc887605bb3d884578bb6d6bf7514e252",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num-iter/0.1.43/download"
              ],
              "strip_prefix": "num-iter-0.1.43",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.num-iter-0.1.43.bazel"
            }
          },
          "rules_rust_wasm_bindgen__ryu-1.0.14": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__ryu-1.0.14",
              "sha256": "fe232bdf6be8c8de797b22184ee71118d63780ea42ac85b61d1baa6d3b782ae9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ryu/1.0.14/download"
              ],
              "strip_prefix": "ryu-1.0.14",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.ryu-1.0.14.bazel"
            }
          },
          "rules_rust_prost__lazy_static-1.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__lazy_static-1.4.0",
              "sha256": "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/lazy_static/1.4.0/download"
              ],
              "strip_prefix": "lazy_static-1.4.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.lazy_static-1.4.0.bazel"
            }
          },
          "cui__humansize-2.1.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__humansize-2.1.3",
              "sha256": "6cb51c9a029ddc91b07a787f1d86b53ccfa49b0e86688c946ebe8d3555685dd7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/humansize/2.1.3/download"
              ],
              "strip_prefix": "humansize-2.1.3",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.humansize-2.1.3.bazel"
            }
          },
          "rules_rust_prost__winapi-x86_64-pc-windows-gnu-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__winapi-x86_64-pc-windows-gnu-0.4.0",
              "sha256": "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi-x86_64-pc-windows-gnu/0.4.0/download"
              ],
              "strip_prefix": "winapi-x86_64-pc-windows-gnu-0.4.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.winapi-x86_64-pc-windows-gnu-0.4.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__io-lifetimes-1.0.11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__io-lifetimes-1.0.11",
              "sha256": "eae7b9aee968036d54dce06cebaefd919e4472e753296daccd6d344e3e2df0c2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/io-lifetimes/1.0.11/download"
              ],
              "strip_prefix": "io-lifetimes-1.0.11",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.io-lifetimes-1.0.11.bazel"
            }
          },
          "rules_rust_prost__tower-service-0.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__tower-service-0.3.2",
              "sha256": "b6bc1c9ce2b5135ac7f93c72918fc37feb872bdc6a5533a8b85eb4b86bfdae52",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tower-service/0.3.2/download"
              ],
              "strip_prefix": "tower-service-0.3.2",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.tower-service-0.3.2.bazel"
            }
          },
          "rules_rust_wasm_bindgen__diff-0.1.13": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__diff-0.1.13",
              "sha256": "56254986775e3233ffa9c4d7d3faaf6d36a2c09d30b20687e9f88bc8bafc16c8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/diff/0.1.13/download"
              ],
              "strip_prefix": "diff-0.1.13",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.diff-0.1.13.bazel"
            }
          },
          "rules_rust_prost__multimap-0.8.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__multimap-0.8.3",
              "sha256": "e5ce46fe64a9d73be07dcbe690a38ce1b293be448fd8ce1e6c1b8062c9f72c6a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/multimap/0.8.3/download"
              ],
              "strip_prefix": "multimap-0.8.3",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.multimap-0.8.3.bazel"
            }
          },
          "rules_rust_wasm_bindgen__difference-2.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__difference-2.0.0",
              "sha256": "524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/difference/2.0.0/download"
              ],
              "strip_prefix": "difference-2.0.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.difference-2.0.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__unicode-segmentation-1.10.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__unicode-segmentation-1.10.1",
              "sha256": "1dd624098567895118886609431a7c3b8f516e41d30e0643f03d94592a147e36",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicode-segmentation/1.10.1/download"
              ],
              "strip_prefix": "unicode-segmentation-1.10.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.unicode-segmentation-1.10.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__proc-macro2-1.0.64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__proc-macro2-1.0.64",
              "sha256": "78803b62cbf1f46fde80d7c0e803111524b9877184cfe7c3033659490ac7a7da",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/proc-macro2/1.0.64/download"
              ],
              "strip_prefix": "proc-macro2-1.0.64",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.proc-macro2-1.0.64.bazel"
            }
          },
          "cui__rand_core-0.4.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__rand_core-0.4.2",
              "sha256": "9c33a3c44ca05fa6f1807d8e6743f3824e8509beca625669633be0acbdf509dc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rand_core/0.4.2/download"
              ],
              "strip_prefix": "rand_core-0.4.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.rand_core-0.4.2.bazel"
            }
          },
          "rrra__cc-1.0.79": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__cc-1.0.79",
              "sha256": "50d30906286121d95be3d479533b458f87493b30a4b5f79a607db8f5d11aa91f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cc/1.0.79/download"
              ],
              "strip_prefix": "cc-1.0.79",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.cc-1.0.79.bazel"
            }
          },
          "rules_rust_wasm_bindgen__rustls-webpki-0.101.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__rustls-webpki-0.101.7",
              "sha256": "8b6275d1ee7a1cd780b64aca7726599a1dbc893b1e64144529e55c3c2f745765",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustls-webpki/0.101.7/download"
              ],
              "strip_prefix": "rustls-webpki-0.101.7",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.rustls-webpki-0.101.7.bazel"
            }
          },
          "cui__phf-0.11.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__phf-0.11.2",
              "sha256": "ade2d8b8f33c7333b51bcf0428d37e217e9f32192ae4772156f65063b8ce03dc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/phf/0.11.2/download"
              ],
              "strip_prefix": "phf-0.11.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.phf-0.11.2.bazel"
            }
          },
          "rules_rust_wasm_bindgen__wasm-bindgen-threads-xform-0.2.91": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasm-bindgen-threads-xform-0.2.91",
              "sha256": "90a2e577034352f9aa9352730fcf2562c68957f2e9b9ee70ab6379510e49e2fe",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-threads-xform/0.2.91/download"
              ],
              "strip_prefix": "wasm-bindgen-threads-xform-0.2.91",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.wasm-bindgen-threads-xform-0.2.91.bazel"
            }
          },
          "rules_rust_wasm_bindgen__winapi-0.3.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__winapi-0.3.9",
              "sha256": "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi/0.3.9/download"
              ],
              "strip_prefix": "winapi-0.3.9",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.winapi-0.3.9.bazel"
            }
          },
          "rules_rust_prost": {
            "bzlFile": "@@rules_rust~0.40.0//crate_universe/private:crates_vendor.bzl",
            "ruleClassName": "crates_vendor_remote_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.bazel",
              "defs_module": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:defs.bzl"
            }
          },
          "cui__wasm-bindgen-0.2.87": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__wasm-bindgen-0.2.87",
              "sha256": "7706a72ab36d8cb1f80ffbf0e071533974a60d0a308d01a5d0375bf60499a342",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen/0.2.87/download"
              ],
              "strip_prefix": "wasm-bindgen-0.2.87",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.wasm-bindgen-0.2.87.bazel"
            }
          },
          "rules_rust_bindgen__quote-1.0.28": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__quote-1.0.28",
              "sha256": "1b9ab9c7eadfd8df19006f1cf1a4aed13540ed5cbc047010ece5826e10825488",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/quote/1.0.28/download"
              ],
              "strip_prefix": "quote-1.0.28",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.quote-1.0.28.bazel"
            }
          },
          "rules_rust_wasm_bindgen__wasmparser-0.102.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasmparser-0.102.0",
              "sha256": "48134de3d7598219ab9eaf6b91b15d8e50d31da76b8519fe4ecfcec2cf35104b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasmparser/0.102.0/download"
              ],
              "strip_prefix": "wasmparser-0.102.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.wasmparser-0.102.0.bazel"
            }
          },
          "cui__anstyle-query-1.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__anstyle-query-1.0.0",
              "sha256": "5ca11d4be1bab0c8bc8734a9aa7bf4ee8316d462a08c6ac5052f888fef5b494b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anstyle-query/1.0.0/download"
              ],
              "strip_prefix": "anstyle-query-1.0.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.anstyle-query-1.0.0.bazel"
            }
          },
          "cui__winapi-x86_64-pc-windows-gnu-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__winapi-x86_64-pc-windows-gnu-0.4.0",
              "sha256": "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi-x86_64-pc-windows-gnu/0.4.0/download"
              ],
              "strip_prefix": "winapi-x86_64-pc-windows-gnu-0.4.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.winapi-x86_64-pc-windows-gnu-0.4.0.bazel"
            }
          },
          "rrra__heck-0.4.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__heck-0.4.1",
              "sha256": "95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/heck/0.4.1/download"
              ],
              "strip_prefix": "heck-0.4.1",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.heck-0.4.1.bazel"
            }
          },
          "rules_rust_prost__hermit-abi-0.2.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__hermit-abi-0.2.6",
              "sha256": "ee512640fe35acbfb4bb779db6f0d80704c2cacfa2e39b601ef3e3f47d1ae4c7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hermit-abi/0.2.6/download"
              ],
              "strip_prefix": "hermit-abi-0.2.6",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.hermit-abi-0.2.6.bazel"
            }
          },
          "rules_rust_wasm_bindgen__autocfg-1.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__autocfg-1.1.0",
              "sha256": "d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/autocfg/1.1.0/download"
              ],
              "strip_prefix": "autocfg-1.1.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.autocfg-1.1.0.bazel"
            }
          },
          "cui__bumpalo-3.13.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__bumpalo-3.13.0",
              "sha256": "a3e2c3daef883ecc1b5d58c15adae93470a91d425f3532ba1695849656af3fc1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bumpalo/3.13.0/download"
              ],
              "strip_prefix": "bumpalo-3.13.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.bumpalo-3.13.0.bazel"
            }
          },
          "rules_rust_prost__cfg-if-1.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__cfg-if-1.0.0",
              "sha256": "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cfg-if/1.0.0/download"
              ],
              "strip_prefix": "cfg-if-1.0.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.cfg-if-1.0.0.bazel"
            }
          },
          "rules_rust_bindgen__anstyle-parse-0.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__anstyle-parse-0.2.0",
              "sha256": "e765fd216e48e067936442276d1d57399e37bce53c264d6fefbe298080cb57ee",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anstyle-parse/0.2.0/download"
              ],
              "strip_prefix": "anstyle-parse-0.2.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.anstyle-parse-0.2.0.bazel"
            }
          },
          "rules_rust_bindgen__bindgen-0.69.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__bindgen-0.69.1",
              "sha256": "9ffcebc3849946a7170a05992aac39da343a90676ab392c51a4280981d6379c2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bindgen/0.69.1/download"
              ],
              "strip_prefix": "bindgen-0.69.1",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.bindgen-0.69.1.bazel"
            }
          },
          "cui__version_check-0.9.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__version_check-0.9.4",
              "sha256": "49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/version_check/0.9.4/download"
              ],
              "strip_prefix": "version_check-0.9.4",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.version_check-0.9.4.bazel"
            }
          },
          "cui__num-complex-0.1.43": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__num-complex-0.1.43",
              "sha256": "b288631d7878aaf59442cffd36910ea604ecd7745c36054328595114001c9656",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num-complex/0.1.43/download"
              ],
              "strip_prefix": "num-complex-0.1.43",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.num-complex-0.1.43.bazel"
            }
          },
          "cui__gix-date-0.8.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-date-0.8.0",
              "sha256": "fc7df669639582dc7c02737642f76890b03b5544e141caba68a7d6b4eb551e0d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-date/0.8.0/download"
              ],
              "strip_prefix": "gix-date-0.8.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-date-0.8.0.bazel"
            }
          },
          "cui__scopeguard-1.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__scopeguard-1.2.0",
              "sha256": "94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/scopeguard/1.2.0/download"
              ],
              "strip_prefix": "scopeguard-1.2.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.scopeguard-1.2.0.bazel"
            }
          },
          "rules_rust_prost__pin-project-1.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__pin-project-1.1.0",
              "sha256": "c95a7476719eab1e366eaf73d0260af3021184f18177925b07f54b30089ceead",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/pin-project/1.1.0/download"
              ],
              "strip_prefix": "pin-project-1.1.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.pin-project-1.1.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__quote-1.0.29": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__quote-1.0.29",
              "sha256": "573015e8ab27661678357f27dc26460738fd2b6c86e46f386fde94cb5d913105",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/quote/1.0.29/download"
              ],
              "strip_prefix": "quote-1.0.29",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.quote-1.0.29.bazel"
            }
          },
          "rules_rust_bindgen__clang-sys-1.6.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__clang-sys-1.6.1",
              "sha256": "c688fc74432808e3eb684cae8830a86be1d66a2bd58e1f248ed0960a590baf6f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/clang-sys/1.6.1/download"
              ],
              "strip_prefix": "clang-sys-1.6.1",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.clang-sys-1.6.1.bazel"
            }
          },
          "cui__parse-zoneinfo-0.3.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__parse-zoneinfo-0.3.0",
              "sha256": "c705f256449c60da65e11ff6626e0c16a0a0b96aaa348de61376b249bc340f41",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/parse-zoneinfo/0.3.0/download"
              ],
              "strip_prefix": "parse-zoneinfo-0.3.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.parse-zoneinfo-0.3.0.bazel"
            }
          },
          "cui__unicode-bidi-0.3.13": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__unicode-bidi-0.3.13",
              "sha256": "92888ba5573ff080736b3648696b70cafad7d250551175acbaa4e0385b3e1460",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicode-bidi/0.3.13/download"
              ],
              "strip_prefix": "unicode-bidi-0.3.13",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.unicode-bidi-0.3.13.bazel"
            }
          },
          "cui__gix-traverse-0.33.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-traverse-0.33.0",
              "sha256": "22ef04ab3643acba289b5cedd25d6f53c0430770b1d689d1d654511e6fb81ba0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-traverse/0.33.0/download"
              ],
              "strip_prefix": "gix-traverse-0.33.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-traverse-0.33.0.bazel"
            }
          },
          "rrra__anstyle-parse-0.2.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__anstyle-parse-0.2.1",
              "sha256": "938874ff5980b03a87c5524b3ae5b59cf99b1d6bc836848df7bc5ada9643c333",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anstyle-parse/0.2.1/download"
              ],
              "strip_prefix": "anstyle-parse-0.2.1",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.anstyle-parse-0.2.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__stable_deref_trait-1.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__stable_deref_trait-1.2.0",
              "sha256": "a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/stable_deref_trait/1.2.0/download"
              ],
              "strip_prefix": "stable_deref_trait-1.2.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.stable_deref_trait-1.2.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__num_cpus-1.16.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__num_cpus-1.16.0",
              "sha256": "4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num_cpus/1.16.0/download"
              ],
              "strip_prefix": "num_cpus-1.16.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.num_cpus-1.16.0.bazel"
            }
          },
          "llvm-raw": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~llvm-raw",
              "urls": [
                "https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.6/llvm-project-14.0.6.src.tar.xz"
              ],
              "strip_prefix": "llvm-project-14.0.6.src",
              "sha256": "8b3cfd7bc695bd6cea0f37f53f0981f34f87496e79e2529874fd03a2f9dd3a8a",
              "build_file_content": "# empty",
              "patch_args": [
                "-p1"
              ],
              "patches": [
                "@@rules_rust~0.40.0//bindgen/3rdparty/patches:llvm-project.cxx17.patch",
                "@@rules_rust~0.40.0//bindgen/3rdparty/patches:llvm-project.incompatible_disallow_empty_glob.patch"
              ]
            }
          },
          "cui__miniz_oxide-0.7.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__miniz_oxide-0.7.1",
              "sha256": "e7810e0be55b428ada41041c41f32c9f1a42817901b4ccf45fa3d4b6561e74c7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/miniz_oxide/0.7.1/download"
              ],
              "strip_prefix": "miniz_oxide-0.7.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.miniz_oxide-0.7.1.bazel"
            }
          },
          "cui__phf_codegen-0.11.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__phf_codegen-0.11.2",
              "sha256": "e8d39688d359e6b34654d328e262234662d16cc0f60ec8dcbe5e718709342a5a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/phf_codegen/0.11.2/download"
              ],
              "strip_prefix": "phf_codegen-0.11.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.phf_codegen-0.11.2.bazel"
            }
          },
          "cui__winapi-util-0.1.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__winapi-util-0.1.5",
              "sha256": "70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi-util/0.1.5/download"
              ],
              "strip_prefix": "winapi-util-0.1.5",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.winapi-util-0.1.5.bazel"
            }
          },
          "rules_rust_bindgen__io-lifetimes-1.0.11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__io-lifetimes-1.0.11",
              "sha256": "eae7b9aee968036d54dce06cebaefd919e4472e753296daccd6d344e3e2df0c2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/io-lifetimes/1.0.11/download"
              ],
              "strip_prefix": "io-lifetimes-1.0.11",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.io-lifetimes-1.0.11.bazel"
            }
          },
          "cui__unic-char-range-0.9.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__unic-char-range-0.9.0",
              "sha256": "0398022d5f700414f6b899e10b8348231abf9173fa93144cbc1a43b9793c1fbc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unic-char-range/0.9.0/download"
              ],
              "strip_prefix": "unic-char-range-0.9.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.unic-char-range-0.9.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__leb128-0.2.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__leb128-0.2.5",
              "sha256": "884e2677b40cc8c339eaefcb701c32ef1fd2493d71118dc0ca4b6a736c93bd67",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/leb128/0.2.5/download"
              ],
              "strip_prefix": "leb128-0.2.5",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.leb128-0.2.5.bazel"
            }
          },
          "cui__crossbeam-deque-0.8.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__crossbeam-deque-0.8.3",
              "sha256": "ce6fd6f855243022dcecf8702fef0c297d4338e226845fe067f6341ad9fa0cef",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crossbeam-deque/0.8.3/download"
              ],
              "strip_prefix": "crossbeam-deque-0.8.3",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.crossbeam-deque-0.8.3.bazel"
            }
          },
          "rules_rust_wasm_bindgen__predicates-core-1.0.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__predicates-core-1.0.6",
              "sha256": "b794032607612e7abeb4db69adb4e33590fa6cf1149e95fd7cb00e634b92f174",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/predicates-core/1.0.6/download"
              ],
              "strip_prefix": "predicates-core-1.0.6",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.predicates-core-1.0.6.bazel"
            }
          },
          "cui__android_system_properties-0.1.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__android_system_properties-0.1.5",
              "sha256": "819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/android_system_properties/0.1.5/download"
              ],
              "strip_prefix": "android_system_properties-0.1.5",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.android_system_properties-0.1.5.bazel"
            }
          },
          "cui__windows_aarch64_msvc-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__windows_aarch64_msvc-0.48.0",
              "sha256": "b2ef27e0d7bdfcfc7b868b317c1d32c641a6fe4629c171b8928c7b08d98d7cf3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_aarch64_msvc/0.48.0/download"
              ],
              "strip_prefix": "windows_aarch64_msvc-0.48.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.windows_aarch64_msvc-0.48.0.bazel"
            }
          },
          "cui__anstyle-1.0.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__anstyle-1.0.1",
              "sha256": "3a30da5c5f2d5e72842e00bcb57657162cdabef0931f40e2deb9b4140440cecd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anstyle/1.0.1/download"
              ],
              "strip_prefix": "anstyle-1.0.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.anstyle-1.0.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__wasm-bindgen-0.2.91": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasm-bindgen-0.2.91",
              "sha256": "c1e124130aee3fb58c5bdd6b639a0509486b0338acaaae0c84a5124b0f588b7f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen/0.2.91/download"
              ],
              "strip_prefix": "wasm-bindgen-0.2.91",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.wasm-bindgen-0.2.91.bazel"
            }
          },
          "cui__pest_meta-2.7.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__pest_meta-2.7.0",
              "sha256": "a01f71cb40bd8bb94232df14b946909e14660e33fc05db3e50ae2a82d7ea0ca0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/pest_meta/2.7.0/download"
              ],
              "strip_prefix": "pest_meta-2.7.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.pest_meta-2.7.0.bazel"
            }
          },
          "cui__anstyle-wincon-1.0.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__anstyle-wincon-1.0.1",
              "sha256": "180abfa45703aebe0093f79badacc01b8fd4ea2e35118747e5811127f926e188",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anstyle-wincon/1.0.1/download"
              ],
              "strip_prefix": "anstyle-wincon-1.0.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.anstyle-wincon-1.0.1.bazel"
            }
          },
          "rrra__anstyle-query-1.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__anstyle-query-1.0.0",
              "sha256": "5ca11d4be1bab0c8bc8734a9aa7bf4ee8316d462a08c6ac5052f888fef5b494b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anstyle-query/1.0.0/download"
              ],
              "strip_prefix": "anstyle-query-1.0.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.anstyle-query-1.0.0.bazel"
            }
          },
          "rules_rust_prost__winapi-i686-pc-windows-gnu-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__winapi-i686-pc-windows-gnu-0.4.0",
              "sha256": "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi-i686-pc-windows-gnu/0.4.0/download"
              ],
              "strip_prefix": "winapi-i686-pc-windows-gnu-0.4.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.winapi-i686-pc-windows-gnu-0.4.0.bazel"
            }
          },
          "rrra__clap_derive-4.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__clap_derive-4.3.2",
              "sha256": "b8cd2b2a819ad6eec39e8f1d6b53001af1e5469f8c177579cdaeb313115b825f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/clap_derive/4.3.2/download"
              ],
              "strip_prefix": "clap_derive-4.3.2",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.clap_derive-4.3.2.bazel"
            }
          },
          "cui__gix-hash-0.13.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-hash-0.13.1",
              "sha256": "1884c7b41ea0875217c1be9ce91322f90bde433e91d374d0e1276073a51ccc60",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-hash/0.13.1/download"
              ],
              "strip_prefix": "gix-hash-0.13.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-hash-0.13.1.bazel"
            }
          },
          "cui__maybe-async-0.2.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__maybe-async-0.2.7",
              "sha256": "0f1b8c13cb1f814b634a96b2c725449fe7ed464a7b8781de8688be5ffbd3f305",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/maybe-async/0.2.7/download"
              ],
              "strip_prefix": "maybe-async-0.2.7",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.maybe-async-0.2.7.bazel"
            }
          },
          "cui__regex-automata-0.3.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__regex-automata-0.3.3",
              "sha256": "39354c10dd07468c2e73926b23bb9c2caca74c5501e38a35da70406f1d923310",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex-automata/0.3.3/download"
              ],
              "strip_prefix": "regex-automata-0.3.3",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.regex-automata-0.3.3.bazel"
            }
          },
          "rrra__windows_aarch64_msvc-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__windows_aarch64_msvc-0.48.0",
              "sha256": "b2ef27e0d7bdfcfc7b868b317c1d32c641a6fe4629c171b8928c7b08d98d7cf3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_aarch64_msvc/0.48.0/download"
              ],
              "strip_prefix": "windows_aarch64_msvc-0.48.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.windows_aarch64_msvc-0.48.0.bazel"
            }
          },
          "cui__gix-filter-0.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-filter-0.5.0",
              "sha256": "1be40d28cd41445bb6cd52c4d847d915900e5466f7433eaee6a9e0a3d1d88b08",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-filter/0.5.0/download"
              ],
              "strip_prefix": "gix-filter-0.5.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-filter-0.5.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__mime-0.3.17": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__mime-0.3.17",
              "sha256": "6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/mime/0.3.17/download"
              ],
              "strip_prefix": "mime-0.3.17",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.mime-0.3.17.bazel"
            }
          },
          "rules_rust_prost__which-4.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__which-4.4.0",
              "sha256": "2441c784c52b289a054b7201fc93253e288f094e2f4be9058343127c4226a269",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/which/4.4.0/download"
              ],
              "strip_prefix": "which-4.4.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.which-4.4.0.bazel"
            }
          },
          "rrra__anstyle-wincon-1.0.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__anstyle-wincon-1.0.1",
              "sha256": "180abfa45703aebe0093f79badacc01b8fd4ea2e35118747e5811127f926e188",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anstyle-wincon/1.0.1/download"
              ],
              "strip_prefix": "anstyle-wincon-1.0.1",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.anstyle-wincon-1.0.1.bazel"
            }
          },
          "rrra__rustix-0.37.23": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__rustix-0.37.23",
              "sha256": "4d69718bf81c6127a49dc64e44a742e8bb9213c0ff8869a22c308f84c1d4ab06",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustix/0.37.23/download"
              ],
              "strip_prefix": "rustix-0.37.23",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.rustix-0.37.23.bazel"
            }
          },
          "rules_rust_prost__hermit-abi-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__hermit-abi-0.3.1",
              "sha256": "fed44880c466736ef9a5c5b5facefb5ed0785676d0c02d612db14e54f0d84286",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hermit-abi/0.3.1/download"
              ],
              "strip_prefix": "hermit-abi-0.3.1",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.hermit-abi-0.3.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__adler-1.0.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__adler-1.0.2",
              "sha256": "f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/adler/1.0.2/download"
              ],
              "strip_prefix": "adler-1.0.2",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.adler-1.0.2.bazel"
            }
          },
          "rules_rust_wasm_bindgen__log-0.4.19": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__log-0.4.19",
              "sha256": "b06a4cde4c0f271a446782e3eff8de789548ce57dbc8eca9292c27f4a42004b4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/log/0.4.19/download"
              ],
              "strip_prefix": "log-0.4.19",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.log-0.4.19.bazel"
            }
          },
          "rules_rust_bindgen__heck-0.4.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__heck-0.4.1",
              "sha256": "95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/heck/0.4.1/download"
              ],
              "strip_prefix": "heck-0.4.1",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.heck-0.4.1.bazel"
            }
          },
          "cui__maplit-1.0.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__maplit-1.0.2",
              "sha256": "3e2e65a1a2e43cfcb47a895c4c8b10d1f4a61097f9f254f183aee60cad9c651d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/maplit/1.0.2/download"
              ],
              "strip_prefix": "maplit-1.0.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.maplit-1.0.2.bazel"
            }
          },
          "rrra__syn-2.0.25": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__syn-2.0.25",
              "sha256": "15e3fc8c0c74267e2df136e5e5fb656a464158aa57624053375eb9c8c6e25ae2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/syn/2.0.25/download"
              ],
              "strip_prefix": "syn-2.0.25",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.syn-2.0.25.bazel"
            }
          },
          "cui__digest-0.10.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__digest-0.10.7",
              "sha256": "9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/digest/0.10.7/download"
              ],
              "strip_prefix": "digest-0.10.7",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.digest-0.10.7.bazel"
            }
          },
          "cui__gix-worktree-0.26.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-worktree-0.26.0",
              "sha256": "9f5e32972801bd82d56609e6fc84efc358fa1f11f25c5e83b7807ee2280f14fe",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-worktree/0.26.0/download"
              ],
              "strip_prefix": "gix-worktree-0.26.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-worktree-0.26.0.bazel"
            }
          },
          "cui__equivalent-1.0.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__equivalent-1.0.1",
              "sha256": "5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/equivalent/1.0.1/download"
              ],
              "strip_prefix": "equivalent-1.0.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.equivalent-1.0.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__semver-1.0.17": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__semver-1.0.17",
              "sha256": "bebd363326d05ec3e2f532ab7660680f3b02130d780c299bca73469d521bc0ed",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/semver/1.0.17/download"
              ],
              "strip_prefix": "semver-1.0.17",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.semver-1.0.17.bazel"
            }
          },
          "cui": {
            "bzlFile": "@@rules_rust~0.40.0//crate_universe/private:crates_vendor.bzl",
            "ruleClassName": "crates_vendor_remote_repository",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.bazel",
              "defs_module": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:defs.bzl"
            }
          },
          "rules_rust_wasm_bindgen__memchr-2.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__memchr-2.5.0",
              "sha256": "2dffe52ecf27772e601905b7522cb4ef790d2cc203488bbd0e2fe85fcb74566d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/memchr/2.5.0/download"
              ],
              "strip_prefix": "memchr-2.5.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.memchr-2.5.0.bazel"
            }
          },
          "cui__once_cell-1.18.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__once_cell-1.18.0",
              "sha256": "dd8b5dd2ae5ed71462c540258bedcb51965123ad7e7ccf4b9a8cafaa4a63576d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/once_cell/1.18.0/download"
              ],
              "strip_prefix": "once_cell-1.18.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.once_cell-1.18.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__wasmparser-0.80.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasmparser-0.80.2",
              "sha256": "449167e2832691a1bff24cde28d2804e90e09586a448c8e76984792c44334a6b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasmparser/0.80.2/download"
              ],
              "strip_prefix": "wasmparser-0.80.2",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.wasmparser-0.80.2.bazel"
            }
          },
          "rrra__once_cell-1.18.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__once_cell-1.18.0",
              "sha256": "dd8b5dd2ae5ed71462c540258bedcb51965123ad7e7ccf4b9a8cafaa4a63576d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/once_cell/1.18.0/download"
              ],
              "strip_prefix": "once_cell-1.18.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.once_cell-1.18.0.bazel"
            }
          },
          "cui__heck-0.4.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__heck-0.4.1",
              "sha256": "95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/heck/0.4.1/download"
              ],
              "strip_prefix": "heck-0.4.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.heck-0.4.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__winapi-x86_64-pc-windows-gnu-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__winapi-x86_64-pc-windows-gnu-0.4.0",
              "sha256": "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi-x86_64-pc-windows-gnu/0.4.0/download"
              ],
              "strip_prefix": "winapi-x86_64-pc-windows-gnu-0.4.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.winapi-x86_64-pc-windows-gnu-0.4.0.bazel"
            }
          },
          "rules_rust_bindgen__is-terminal-0.4.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__is-terminal-0.4.7",
              "sha256": "adcf93614601c8129ddf72e2d5633df827ba6551541c6d8c59520a371475be1f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/is-terminal/0.4.7/download"
              ],
              "strip_prefix": "is-terminal-0.4.7",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.is-terminal-0.4.7.bazel"
            }
          },
          "cui__autocfg-1.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__autocfg-1.1.0",
              "sha256": "d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/autocfg/1.1.0/download"
              ],
              "strip_prefix": "autocfg-1.1.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.autocfg-1.1.0.bazel"
            }
          },
          "rules_rust_prost__tokio-util-0.7.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__tokio-util-0.7.8",
              "sha256": "806fe8c2c87eccc8b3267cbae29ed3ab2d0bd37fca70ab622e46aaa9375ddb7d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tokio-util/0.7.8/download"
              ],
              "strip_prefix": "tokio-util-0.7.8",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.tokio-util-0.7.8.bazel"
            }
          },
          "libc": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~libc",
              "build_file_content": "load(\"@rules_rust//rust:defs.bzl\", \"rust_library\")\n\nrust_library(\n    name = \"libc\",\n    srcs = glob([\"src/**/*.rs\"]),\n    edition = \"2015\",\n    rustc_flags = [\n        # In most cases, warnings in 3rd party crates are not interesting as\n        # they're out of the control of consumers. The flag here silences\n        # warnings. For more details see:\n        # https://doc.rust-lang.org/rustc/lints/levels.html\n        \"--cap-lints=allow\",\n    ],\n    visibility = [\"//visibility:public\"],\n)\n",
              "sha256": "1ac4c2ac6ed5a8fb9020c166bc63316205f1dc78d4b964ad31f4f21eb73f0c6d",
              "strip_prefix": "libc-0.2.20",
              "urls": [
                "https://mirror.bazel.build/github.com/rust-lang/libc/archive/0.2.20.zip",
                "https://github.com/rust-lang/libc/archive/0.2.20.zip"
              ]
            }
          },
          "rrra__either-1.8.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__either-1.8.1",
              "sha256": "7fcaabb2fef8c910e7f4c7ce9f67a1283a1715879a7c230ca9d6d1ae31f16d91",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/either/1.8.1/download"
              ],
              "strip_prefix": "either-1.8.1",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.either-1.8.1.bazel"
            }
          },
          "rules_rust_bindgen__minimal-lexical-0.2.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__minimal-lexical-0.2.1",
              "sha256": "68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/minimal-lexical/0.2.1/download"
              ],
              "strip_prefix": "minimal-lexical-0.2.1",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.minimal-lexical-0.2.1.bazel"
            }
          },
          "rules_rust_prost__tokio-io-timeout-1.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__tokio-io-timeout-1.2.0",
              "sha256": "30b74022ada614a1b4834de765f9bb43877f910cc8ce4be40e89042c9223a8bf",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tokio-io-timeout/1.2.0/download"
              ],
              "strip_prefix": "tokio-io-timeout-1.2.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.tokio-io-timeout-1.2.0.bazel"
            }
          },
          "cui__num-traits-0.2.15": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__num-traits-0.2.15",
              "sha256": "578ede34cf02f8924ab9447f50c28075b4d3e5b269972345e7e0372b38c6cdcd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num-traits/0.2.15/download"
              ],
              "strip_prefix": "num-traits-0.2.15",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.num-traits-0.2.15.bazel"
            }
          },
          "rules_rust_wasm_bindgen__base64-0.13.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__base64-0.13.1",
              "sha256": "9e1b586273c5702936fe7b7d6896644d8be71e6314cfe09d3167c95f712589e8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/base64/0.13.1/download"
              ],
              "strip_prefix": "base64-0.13.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.base64-0.13.1.bazel"
            }
          },
          "rrra__regex-automata-0.3.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__regex-automata-0.3.3",
              "sha256": "39354c10dd07468c2e73926b23bb9c2caca74c5501e38a35da70406f1d923310",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex-automata/0.3.3/download"
              ],
              "strip_prefix": "regex-automata-0.3.3",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.regex-automata-0.3.3.bazel"
            }
          },
          "cui__spdx-0.10.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__spdx-0.10.3",
              "sha256": "62bde1398b09b9f93fc2fc9b9da86e362693e999d3a54a8ac47a99a5a73f638b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/spdx/0.10.3/download"
              ],
              "strip_prefix": "spdx-0.10.3",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.spdx-0.10.3.bazel"
            }
          },
          "rules_rust_wasm_bindgen__normalize-line-endings-0.3.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__normalize-line-endings-0.3.0",
              "sha256": "61807f77802ff30975e01f4f071c8ba10c022052f98b3294119f3e615d13e5be",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/normalize-line-endings/0.3.0/download"
              ],
              "strip_prefix": "normalize-line-endings-0.3.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.normalize-line-endings-0.3.0.bazel"
            }
          },
          "rules_rust_prost__h2-0.3.19": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__h2-0.3.19",
              "sha256": "d357c7ae988e7d2182f7d7871d0b963962420b0678b0997ce7de72001aeab782",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/h2/0.3.19/download"
              ],
              "strip_prefix": "h2-0.3.19",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.h2-0.3.19.bazel"
            }
          },
          "rules_rust_wasm_bindgen__wasmparser-0.108.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasmparser-0.108.0",
              "sha256": "76c956109dcb41436a39391139d9b6e2d0a5e0b158e1293ef352ec977e5e36c5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasmparser/0.108.0/download"
              ],
              "strip_prefix": "wasmparser-0.108.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.wasmparser-0.108.0.bazel"
            }
          },
          "rules_rust_bindgen__colorchoice-1.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__colorchoice-1.0.0",
              "sha256": "acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/colorchoice/1.0.0/download"
              ],
              "strip_prefix": "colorchoice-1.0.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.colorchoice-1.0.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__humantime-2.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__humantime-2.1.0",
              "sha256": "9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/humantime/2.1.0/download"
              ],
              "strip_prefix": "humantime-2.1.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.humantime-2.1.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__rand_chacha-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__rand_chacha-0.3.1",
              "sha256": "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rand_chacha/0.3.1/download"
              ],
              "strip_prefix": "rand_chacha-0.3.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.rand_chacha-0.3.1.bazel"
            }
          },
          "rules_rust_bindgen__nom-7.1.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__nom-7.1.3",
              "sha256": "d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/nom/7.1.3/download"
              ],
              "strip_prefix": "nom-7.1.3",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.nom-7.1.3.bazel"
            }
          },
          "cui__strsim-0.10.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__strsim-0.10.0",
              "sha256": "73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/strsim/0.10.0/download"
              ],
              "strip_prefix": "strsim-0.10.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.strsim-0.10.0.bazel"
            }
          },
          "rules_rust_prost__windows_aarch64_gnullvm-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__windows_aarch64_gnullvm-0.48.0",
              "sha256": "91ae572e1b79dba883e0d315474df7305d12f569b400fcf90581b06062f7e1bc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_aarch64_gnullvm/0.48.0/download"
              ],
              "strip_prefix": "windows_aarch64_gnullvm-0.48.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.windows_aarch64_gnullvm-0.48.0.bazel"
            }
          },
          "cui__cfg-if-1.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__cfg-if-1.0.0",
              "sha256": "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cfg-if/1.0.0/download"
              ],
              "strip_prefix": "cfg-if-1.0.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.cfg-if-1.0.0.bazel"
            }
          },
          "cui__errno-dragonfly-0.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__errno-dragonfly-0.1.2",
              "sha256": "aa68f1b12764fab894d2755d2518754e71b4fd80ecfb822714a1206c2aab39bf",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/errno-dragonfly/0.1.2/download"
              ],
              "strip_prefix": "errno-dragonfly-0.1.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.errno-dragonfly-0.1.2.bazel"
            }
          },
          "rules_rust_wasm_bindgen__hashbrown-0.12.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__hashbrown-0.12.3",
              "sha256": "8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hashbrown/0.12.3/download"
              ],
              "strip_prefix": "hashbrown-0.12.3",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.hashbrown-0.12.3.bazel"
            }
          },
          "cui__clap-4.3.11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__clap-4.3.11",
              "sha256": "1640e5cc7fb47dbb8338fd471b105e7ed6c3cb2aeb00c2e067127ffd3764a05d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/clap/4.3.11/download"
              ],
              "strip_prefix": "clap-4.3.11",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.clap-4.3.11.bazel"
            }
          },
          "rules_rust_bindgen__regex-syntax-0.7.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__regex-syntax-0.7.2",
              "sha256": "436b050e76ed2903236f032a59761c1eb99e1b0aead2c257922771dab1fc8c78",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex-syntax/0.7.2/download"
              ],
              "strip_prefix": "regex-syntax-0.7.2",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.regex-syntax-0.7.2.bazel"
            }
          },
          "rules_rust_bindgen__cexpr-0.6.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__cexpr-0.6.0",
              "sha256": "6fac387a98bb7c37292057cffc56d62ecb629900026402633ae9160df93a8766",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cexpr/0.6.0/download"
              ],
              "strip_prefix": "cexpr-0.6.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.cexpr-0.6.0.bazel"
            }
          },
          "cui__proc-macro2-1.0.64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__proc-macro2-1.0.64",
              "sha256": "78803b62cbf1f46fde80d7c0e803111524b9877184cfe7c3033659490ac7a7da",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/proc-macro2/1.0.64/download"
              ],
              "strip_prefix": "proc-macro2-1.0.64",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.proc-macro2-1.0.64.bazel"
            }
          },
          "cui__num-bigint-0.1.44": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__num-bigint-0.1.44",
              "sha256": "e63899ad0da84ce718c14936262a41cee2c79c981fc0a0e7c7beb47d5a07e8c1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num-bigint/0.1.44/download"
              ],
              "strip_prefix": "num-bigint-0.1.44",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.num-bigint-0.1.44.bazel"
            }
          },
          "cui__gix-prompt-0.7.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-prompt-0.7.0",
              "sha256": "5c9a913769516f5e9d937afac206fb76428e3d7238e538845842887fda584678",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-prompt/0.7.0/download"
              ],
              "strip_prefix": "gix-prompt-0.7.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-prompt-0.7.0.bazel"
            }
          },
          "cui__nu-ansi-term-0.46.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__nu-ansi-term-0.46.0",
              "sha256": "77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/nu-ansi-term/0.46.0/download"
              ],
              "strip_prefix": "nu-ansi-term-0.46.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.nu-ansi-term-0.46.0.bazel"
            }
          },
          "cui__lazy_static-1.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__lazy_static-1.4.0",
              "sha256": "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/lazy_static/1.4.0/download"
              ],
              "strip_prefix": "lazy_static-1.4.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.lazy_static-1.4.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__serde_derive-1.0.171": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__serde_derive-1.0.171",
              "sha256": "389894603bd18c46fa56231694f8d827779c0951a667087194cf9de94ed24682",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/serde_derive/1.0.171/download"
              ],
              "strip_prefix": "serde_derive-1.0.171",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.serde_derive-1.0.171.bazel"
            }
          },
          "rules_rust_bindgen__anstyle-1.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__anstyle-1.0.0",
              "sha256": "41ed9a86bf92ae6580e0a31281f65a1b1d867c0cc68d5346e2ae128dddfa6a7d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anstyle/1.0.0/download"
              ],
              "strip_prefix": "anstyle-1.0.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.anstyle-1.0.0.bazel"
            }
          },
          "cui__gix-packetline-0.16.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-packetline-0.16.7",
              "sha256": "8a8384b1e964151aff0d5632dd9b191059d07dff358b96bd940f1b452600d7ab",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-packetline/0.16.7/download"
              ],
              "strip_prefix": "gix-packetline-0.16.7",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-packetline-0.16.7.bazel"
            }
          },
          "cui__thiserror-impl-1.0.50": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__thiserror-impl-1.0.50",
              "sha256": "266b2e40bc00e5a6c09c3584011e08b06f123c00362c92b975ba9843aaaa14b8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/thiserror-impl/1.0.50/download"
              ],
              "strip_prefix": "thiserror-impl-1.0.50",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.thiserror-impl-1.0.50.bazel"
            }
          },
          "cui__time-core-0.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__time-core-0.1.2",
              "sha256": "ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/time-core/0.1.2/download"
              ],
              "strip_prefix": "time-core-0.1.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.time-core-0.1.2.bazel"
            }
          },
          "rules_rust_prost__either-1.8.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__either-1.8.1",
              "sha256": "7fcaabb2fef8c910e7f4c7ce9f67a1283a1715879a7c230ca9d6d1ae31f16d91",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/either/1.8.1/download"
              ],
              "strip_prefix": "either-1.8.1",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.either-1.8.1.bazel"
            }
          },
          "cui__itertools-0.12.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__itertools-0.12.0",
              "sha256": "25db6b064527c5d482d0423354fcd07a89a2dfe07b67892e62411946db7f07b0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/itertools/0.12.0/download"
              ],
              "strip_prefix": "itertools-0.12.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.itertools-0.12.0.bazel"
            }
          },
          "cui__time-macros-0.2.15": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__time-macros-0.2.15",
              "sha256": "4ad70d68dba9e1f8aceda7aa6711965dfec1cac869f311a51bd08b3a2ccbce20",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/time-macros/0.2.15/download"
              ],
              "strip_prefix": "time-macros-0.2.15",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.time-macros-0.2.15.bazel"
            }
          },
          "rules_rust_prost__try-lock-0.2.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__try-lock-0.2.4",
              "sha256": "3528ecfd12c466c6f163363caf2d02a71161dd5e1cc6ae7b34207ea2d42d81ed",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/try-lock/0.2.4/download"
              ],
              "strip_prefix": "try-lock-0.2.4",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.try-lock-0.2.4.bazel"
            }
          },
          "cui__tera-1.19.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__tera-1.19.1",
              "sha256": "970dff17c11e884a4a09bc76e3a17ef71e01bb13447a11e85226e254fe6d10b8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tera/1.19.1/download"
              ],
              "strip_prefix": "tera-1.19.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.tera-1.19.1.bazel"
            }
          },
          "rules_rust_bindgen__bindgen-cli-0.69.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__bindgen-cli-0.69.1",
              "integrity": "sha256-iFZe4JEQqZ54KZiX+/7VA7mqAwZThu6MGBl/yvIotQE=",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bindgen-cli/0.69.1/download"
              ],
              "strip_prefix": "bindgen-cli-0.69.1",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty:BUILD.bindgen-cli.bazel"
            }
          },
          "rules_rust_wasm_bindgen__tempfile-3.6.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__tempfile-3.6.0",
              "sha256": "31c0432476357e58790aaa47a8efb0c5138f137343f3b5f23bd36a27e3b0a6d6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tempfile/3.6.0/download"
              ],
              "strip_prefix": "tempfile-3.6.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.tempfile-3.6.0.bazel"
            }
          },
          "rules_rust_prost__axum-core-0.3.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__axum-core-0.3.4",
              "sha256": "759fa577a247914fd3f7f76d62972792636412fbfd634cd452f6a385a74d2d2c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/axum-core/0.3.4/download"
              ],
              "strip_prefix": "axum-core-0.3.4",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.axum-core-0.3.4.bazel"
            }
          },
          "cui__thiserror-1.0.50": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__thiserror-1.0.50",
              "sha256": "f9a7210f5c9a7156bb50aa36aed4c95afb51df0df00713949448cf9e97d382d2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/thiserror/1.0.50/download"
              ],
              "strip_prefix": "thiserror-1.0.50",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.thiserror-1.0.50.bazel"
            }
          },
          "cui__globset-0.4.11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__globset-0.4.11",
              "sha256": "1391ab1f92ffcc08911957149833e682aa3fe252b9f45f966d2ef972274c97df",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/globset/0.4.11/download"
              ],
              "strip_prefix": "globset-0.4.11",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.globset-0.4.11.bazel"
            }
          },
          "cui__colorchoice-1.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__colorchoice-1.0.0",
              "sha256": "acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/colorchoice/1.0.0/download"
              ],
              "strip_prefix": "colorchoice-1.0.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.colorchoice-1.0.0.bazel"
            }
          },
          "rrra__windows-sys-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__windows-sys-0.48.0",
              "sha256": "677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows-sys/0.48.0/download"
              ],
              "strip_prefix": "windows-sys-0.48.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.windows-sys-0.48.0.bazel"
            }
          },
          "rules_rust_bindgen__linux-raw-sys-0.3.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__linux-raw-sys-0.3.8",
              "sha256": "ef53942eb7bf7ff43a617b3e2c1c4a5ecf5944a7c1bc12d7ee39bbb15e5c1519",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/linux-raw-sys/0.3.8/download"
              ],
              "strip_prefix": "linux-raw-sys-0.3.8",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.linux-raw-sys-0.3.8.bazel"
            }
          },
          "rules_rust_prost__libc-0.2.146": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__libc-0.2.146",
              "sha256": "f92be4933c13fd498862a9e02a3055f8a8d9c039ce33db97306fd5a6caa7f29b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/libc/0.2.146/download"
              ],
              "strip_prefix": "libc-0.2.146",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.libc-0.2.146.bazel"
            }
          },
          "rules_rust_wasm_bindgen__regex-automata-0.3.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__regex-automata-0.3.3",
              "sha256": "39354c10dd07468c2e73926b23bb9c2caca74c5501e38a35da70406f1d923310",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex-automata/0.3.3/download"
              ],
              "strip_prefix": "regex-automata-0.3.3",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.regex-automata-0.3.3.bazel"
            }
          },
          "rules_rust_wasm_bindgen__wasm-bindgen-multi-value-xform-0.2.91": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasm-bindgen-multi-value-xform-0.2.91",
              "sha256": "d1e019acde479e2f090fb7f14a51fa0077ec3a7bb12a56e0e888a82be7b5bd3f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-multi-value-xform/0.2.91/download"
              ],
              "strip_prefix": "wasm-bindgen-multi-value-xform-0.2.91",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.wasm-bindgen-multi-value-xform-0.2.91.bazel"
            }
          },
          "rules_rust_wasm_bindgen__itertools-0.10.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__itertools-0.10.5",
              "sha256": "b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/itertools/0.10.5/download"
              ],
              "strip_prefix": "itertools-0.10.5",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.itertools-0.10.5.bazel"
            }
          },
          "cui__windows-sys-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__windows-sys-0.48.0",
              "sha256": "677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows-sys/0.48.0/download"
              ],
              "strip_prefix": "windows-sys-0.48.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.windows-sys-0.48.0.bazel"
            }
          },
          "cui__typenum-1.16.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__typenum-1.16.0",
              "sha256": "497961ef93d974e23eb6f433eb5fe1b7930b659f06d12dec6fc44a8f554c0bba",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/typenum/1.16.0/download"
              ],
              "strip_prefix": "typenum-1.16.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.typenum-1.16.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__rand-0.8.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__rand-0.8.5",
              "sha256": "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rand/0.8.5/download"
              ],
              "strip_prefix": "rand-0.8.5",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.rand-0.8.5.bazel"
            }
          },
          "cui__errno-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__errno-0.3.1",
              "sha256": "4bcfec3a70f97c962c307b2d2c56e358cf1d00b558d74262b5f929ee8cc7e73a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/errno/0.3.1/download"
              ],
              "strip_prefix": "errno-0.3.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.errno-0.3.1.bazel"
            }
          },
          "cui__num-rational-0.1.42": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__num-rational-0.1.42",
              "sha256": "ee314c74bd753fc86b4780aa9475da469155f3848473a261d2d18e35245a784e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num-rational/0.1.42/download"
              ],
              "strip_prefix": "num-rational-0.1.42",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.num-rational-0.1.42.bazel"
            }
          },
          "rules_rust_wasm_bindgen__rayon-1.7.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__rayon-1.7.0",
              "sha256": "1d2df5196e37bcc87abebc0053e20787d73847bb33134a69841207dd0a47f03b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rayon/1.7.0/download"
              ],
              "strip_prefix": "rayon-1.7.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.rayon-1.7.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__spin-0.9.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__spin-0.9.8",
              "sha256": "6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/spin/0.9.8/download"
              ],
              "strip_prefix": "spin-0.9.8",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.spin-0.9.8.bazel"
            }
          },
          "rules_rust_wasm_bindgen__difflib-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__difflib-0.4.0",
              "sha256": "6184e33543162437515c2e2b48714794e37845ec9851711914eec9d308f6ebe8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/difflib/0.4.0/download"
              ],
              "strip_prefix": "difflib-0.4.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.difflib-0.4.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__num-traits-0.2.15": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__num-traits-0.2.15",
              "sha256": "578ede34cf02f8924ab9447f50c28075b4d3e5b269972345e7e0372b38c6cdcd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num-traits/0.2.15/download"
              ],
              "strip_prefix": "num-traits-0.2.15",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.num-traits-0.2.15.bazel"
            }
          },
          "cui__sha2-0.10.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__sha2-0.10.8",
              "sha256": "793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/sha2/0.10.8/download"
              ],
              "strip_prefix": "sha2-0.10.8",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.sha2-0.10.8.bazel"
            }
          },
          "cui__clru-0.6.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__clru-0.6.1",
              "sha256": "b8191fa7302e03607ff0e237d4246cc043ff5b3cb9409d995172ba3bea16b807",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/clru/0.6.1/download"
              ],
              "strip_prefix": "clru-0.6.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.clru-0.6.1.bazel"
            }
          },
          "cui__rand-0.4.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__rand-0.4.6",
              "sha256": "552840b97013b1a26992c11eac34bdd778e464601a4c2054b5f0bff7c6761293",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rand/0.4.6/download"
              ],
              "strip_prefix": "rand-0.4.6",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.rand-0.4.6.bazel"
            }
          },
          "rules_rust_prost__heck-0.4.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__heck-0.4.1",
              "sha256": "95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/heck/0.4.1/download"
              ],
              "strip_prefix": "heck-0.4.1",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.heck-0.4.1.bazel"
            }
          },
          "cui__rand_chacha-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__rand_chacha-0.3.1",
              "sha256": "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rand_chacha/0.3.1/download"
              ],
              "strip_prefix": "rand_chacha-0.3.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.rand_chacha-0.3.1.bazel"
            }
          },
          "rrra__io-lifetimes-1.0.11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__io-lifetimes-1.0.11",
              "sha256": "eae7b9aee968036d54dce06cebaefd919e4472e753296daccd6d344e3e2df0c2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/io-lifetimes/1.0.11/download"
              ],
              "strip_prefix": "io-lifetimes-1.0.11",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.io-lifetimes-1.0.11.bazel"
            }
          },
          "rrra__anstream-0.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__anstream-0.3.2",
              "sha256": "0ca84f3628370c59db74ee214b3263d58f9aadd9b4fe7e711fd87dc452b7f163",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anstream/0.3.2/download"
              ],
              "strip_prefix": "anstream-0.3.2",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.anstream-0.3.2.bazel"
            }
          },
          "cui__phf_shared-0.11.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__phf_shared-0.11.2",
              "sha256": "90fcb95eef784c2ac79119d1dd819e162b5da872ce6f3c3abe1e8ca1c082f72b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/phf_shared/0.11.2/download"
              ],
              "strip_prefix": "phf_shared-0.11.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.phf_shared-0.11.2.bazel"
            }
          },
          "rrra__bitflags-1.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__bitflags-1.3.2",
              "sha256": "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bitflags/1.3.2/download"
              ],
              "strip_prefix": "bitflags-1.3.2",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.bitflags-1.3.2.bazel"
            }
          },
          "cui__cargo-lock-9.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__cargo-lock-9.0.0",
              "sha256": "e11c675378efb449ed3ce8de78d75d0d80542fc98487c26aba28eb3b82feac72",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cargo-lock/9.0.0/download"
              ],
              "strip_prefix": "cargo-lock-9.0.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.cargo-lock-9.0.0.bazel"
            }
          },
          "rules_rust_bindgen__winapi-util-0.1.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__winapi-util-0.1.5",
              "sha256": "70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi-util/0.1.5/download"
              ],
              "strip_prefix": "winapi-util-0.1.5",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.winapi-util-0.1.5.bazel"
            }
          },
          "rules_rust_wasm_bindgen__buf_redux-0.8.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__buf_redux-0.8.4",
              "sha256": "b953a6887648bb07a535631f2bc00fbdb2a2216f135552cb3f534ed136b9c07f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/buf_redux/0.8.4/download"
              ],
              "strip_prefix": "buf_redux-0.8.4",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.buf_redux-0.8.4.bazel"
            }
          },
          "rules_rust_prost__redox_syscall-0.3.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__redox_syscall-0.3.5",
              "sha256": "567664f262709473930a4bf9e51bf2ebf3348f2e748ccc50dea20646858f8f29",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/redox_syscall/0.3.5/download"
              ],
              "strip_prefix": "redox_syscall-0.3.5",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.redox_syscall-0.3.5.bazel"
            }
          },
          "cui__faster-hex-0.8.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__faster-hex-0.8.1",
              "sha256": "239f7bfb930f820ab16a9cd95afc26f88264cf6905c960b340a615384aa3338a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/faster-hex/0.8.1/download"
              ],
              "strip_prefix": "faster-hex-0.8.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.faster-hex-0.8.1.bazel"
            }
          },
          "cui__gix-packetline-blocking-0.16.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-packetline-blocking-0.16.6",
              "sha256": "7d8395f7501c84d6a1fe902035fdfd8cd86d89e2dd6be0200ec1a72fd3c92d39",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-packetline-blocking/0.16.6/download"
              ],
              "strip_prefix": "gix-packetline-blocking-0.16.6",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-packetline-blocking-0.16.6.bazel"
            }
          },
          "cui__windows_aarch64_gnullvm-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__windows_aarch64_gnullvm-0.48.0",
              "sha256": "91ae572e1b79dba883e0d315474df7305d12f569b400fcf90581b06062f7e1bc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_aarch64_gnullvm/0.48.0/download"
              ],
              "strip_prefix": "windows_aarch64_gnullvm-0.48.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.windows_aarch64_gnullvm-0.48.0.bazel"
            }
          },
          "rules_rust_prost__tracing-core-0.1.31": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__tracing-core-0.1.31",
              "sha256": "0955b8137a1df6f1a2e9a37d8a6656291ff0297c1a97c24e0d8425fe2312f79a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tracing-core/0.1.31/download"
              ],
              "strip_prefix": "tracing-core-0.1.31",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.tracing-core-0.1.31.bazel"
            }
          },
          "rrra__env_logger-0.10.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__env_logger-0.10.0",
              "sha256": "85cdab6a89accf66733ad5a1693a4dcced6aeff64602b634530dd73c1f3ee9f0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/env_logger/0.10.0/download"
              ],
              "strip_prefix": "env_logger-0.10.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.env_logger-0.10.0.bazel"
            }
          },
          "rules_rust_prost__hashbrown-0.12.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__hashbrown-0.12.3",
              "sha256": "8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hashbrown/0.12.3/download"
              ],
              "strip_prefix": "hashbrown-0.12.3",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.hashbrown-0.12.3.bazel"
            }
          },
          "rules_rust_wasm_bindgen__aho-corasick-1.0.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__aho-corasick-1.0.2",
              "sha256": "43f6cb1bf222025340178f382c426f13757b2960e89779dfcb319c32542a5a41",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/aho-corasick/1.0.2/download"
              ],
              "strip_prefix": "aho-corasick-1.0.2",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.aho-corasick-1.0.2.bazel"
            }
          },
          "cui__crossbeam-0.8.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__crossbeam-0.8.2",
              "sha256": "2801af0d36612ae591caa9568261fddce32ce6e08a7275ea334a06a4ad021a2c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crossbeam/0.8.2/download"
              ],
              "strip_prefix": "crossbeam-0.8.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.crossbeam-0.8.2.bazel"
            }
          },
          "rules_rust_prost__futures-channel-0.3.28": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__futures-channel-0.3.28",
              "sha256": "955518d47e09b25bbebc7a18df10b81f0c766eaf4c4f1cccef2fca5f2a4fb5f2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/futures-channel/0.3.28/download"
              ],
              "strip_prefix": "futures-channel-0.3.28",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.futures-channel-0.3.28.bazel"
            }
          },
          "cui__time-0.3.30": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__time-0.3.30",
              "sha256": "c4a34ab300f2dee6e562c10a046fc05e358b29f9bf92277f30c3c8d82275f6f5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/time/0.3.30/download"
              ],
              "strip_prefix": "time-0.3.30",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.time-0.3.30.bazel"
            }
          },
          "rules_rust_prost__scopeguard-1.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__scopeguard-1.1.0",
              "sha256": "d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/scopeguard/1.1.0/download"
              ],
              "strip_prefix": "scopeguard-1.1.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.scopeguard-1.1.0.bazel"
            }
          },
          "rules_rust_bindgen__unicode-ident-1.0.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__unicode-ident-1.0.9",
              "sha256": "b15811caf2415fb889178633e7724bad2509101cde276048e013b9def5e51fa0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicode-ident/1.0.9/download"
              ],
              "strip_prefix": "unicode-ident-1.0.9",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.unicode-ident-1.0.9.bazel"
            }
          },
          "rules_rust_prost__futures-util-0.3.28": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__futures-util-0.3.28",
              "sha256": "26b01e40b772d54cf6c6d721c1d1abd0647a0106a12ecaa1c186273392a69533",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/futures-util/0.3.28/download"
              ],
              "strip_prefix": "futures-util-0.3.28",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.futures-util-0.3.28.bazel"
            }
          },
          "rules_rust_prost__log-0.4.19": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__log-0.4.19",
              "sha256": "b06a4cde4c0f271a446782e3eff8de789548ce57dbc8eca9292c27f4a42004b4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/log/0.4.19/download"
              ],
              "strip_prefix": "log-0.4.19",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.log-0.4.19.bazel"
            }
          },
          "cui__ucd-trie-0.1.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__ucd-trie-0.1.6",
              "sha256": "ed646292ffc8188ef8ea4d1e0e0150fb15a5c2e12ad9b8fc191ae7a8a7f3c4b9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ucd-trie/0.1.6/download"
              ],
              "strip_prefix": "ucd-trie-0.1.6",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.ucd-trie-0.1.6.bazel"
            }
          },
          "cui__gix-pack-0.43.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-pack-0.43.0",
              "sha256": "7536203a45b31e1bc5694bbf90ba8da1b736c77040dd6a520db369f371eb1ab3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-pack/0.43.0/download"
              ],
              "strip_prefix": "gix-pack-0.43.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-pack-0.43.0.bazel"
            }
          },
          "rules_rust_prost__serde-1.0.164": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__serde-1.0.164",
              "sha256": "9e8c8cf938e98f769bc164923b06dce91cea1751522f46f8466461af04c9027d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/serde/1.0.164/download"
              ],
              "strip_prefix": "serde-1.0.164",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.serde-1.0.164.bazel"
            }
          },
          "cui__crossbeam-utils-0.8.16": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__crossbeam-utils-0.8.16",
              "sha256": "5a22b2d63d4d1dc0b7f1b6b2747dd0088008a9be28b6ddf0b1e7d335e3037294",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crossbeam-utils/0.8.16/download"
              ],
              "strip_prefix": "crossbeam-utils-0.8.16",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.crossbeam-utils-0.8.16.bazel"
            }
          },
          "cui__unic-segment-0.9.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__unic-segment-0.9.0",
              "sha256": "e4ed5d26be57f84f176157270c112ef57b86debac9cd21daaabbe56db0f88f23",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unic-segment/0.9.0/download"
              ],
              "strip_prefix": "unic-segment-0.9.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.unic-segment-0.9.0.bazel"
            }
          },
          "cui__regex-automata-0.4.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__regex-automata-0.4.3",
              "sha256": "5f804c7828047e88b2d32e2d7fe5a105da8ee3264f01902f796c8e067dc2483f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex-automata/0.4.3/download"
              ],
              "strip_prefix": "regex-automata-0.4.3",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.regex-automata-0.4.3.bazel"
            }
          },
          "rules_rust_prost__prettyplease-0.1.25": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__prettyplease-0.1.25",
              "sha256": "6c8646e95016a7a6c4adea95bafa8a16baab64b583356217f2c85db4a39d9a86",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/prettyplease/0.1.25/download"
              ],
              "strip_prefix": "prettyplease-0.1.25",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.prettyplease-0.1.25.bazel"
            }
          },
          "rules_rust_wasm_bindgen__filetime-0.2.21": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__filetime-0.2.21",
              "sha256": "5cbc844cecaee9d4443931972e1289c8ff485cb4cc2767cb03ca139ed6885153",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/filetime/0.2.21/download"
              ],
              "strip_prefix": "filetime-0.2.21",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.filetime-0.2.21.bazel"
            }
          },
          "cui__toml-0.7.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__toml-0.7.6",
              "sha256": "c17e963a819c331dcacd7ab957d80bc2b9a9c1e71c804826d2f283dd65306542",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/toml/0.7.6/download"
              ],
              "strip_prefix": "toml-0.7.6",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.toml-0.7.6.bazel"
            }
          },
          "rules_rust_prost__tempfile-3.6.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__tempfile-3.6.0",
              "sha256": "31c0432476357e58790aaa47a8efb0c5138f137343f3b5f23bd36a27e3b0a6d6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tempfile/3.6.0/download"
              ],
              "strip_prefix": "tempfile-3.6.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.tempfile-3.6.0.bazel"
            }
          },
          "rules_rust_prost__tokio-stream-0.1.14": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__tokio-stream-0.1.14",
              "sha256": "397c988d37662c7dda6d2208364a706264bf3d6138b11d436cbac0ad38832842",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tokio-stream/0.1.14/download"
              ],
              "strip_prefix": "tokio-stream-0.1.14",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.tokio-stream-0.1.14.bazel"
            }
          },
          "rules_rust_prost__windows-targets-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__windows-targets-0.48.0",
              "sha256": "7b1eb6f0cd7c80c79759c929114ef071b87354ce476d9d94271031c0497adfd5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows-targets/0.48.0/download"
              ],
              "strip_prefix": "windows-targets-0.48.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.windows-targets-0.48.0.bazel"
            }
          },
          "cui__unic-ucd-segment-0.9.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__unic-ucd-segment-0.9.0",
              "sha256": "2079c122a62205b421f499da10f3ee0f7697f012f55b675e002483c73ea34700",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unic-ucd-segment/0.9.0/download"
              ],
              "strip_prefix": "unic-ucd-segment-0.9.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.unic-ucd-segment-0.9.0.bazel"
            }
          },
          "rules_rust_prost__petgraph-0.6.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__petgraph-0.6.3",
              "sha256": "4dd7d28ee937e54fe3080c91faa1c3a46c06de6252988a7f4592ba2310ef22a4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/petgraph/0.6.3/download"
              ],
              "strip_prefix": "petgraph-0.6.3",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.petgraph-0.6.3.bazel"
            }
          },
          "rules_rust_wasm_bindgen__android-tzdata-0.1.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__android-tzdata-0.1.1",
              "sha256": "e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/android-tzdata/0.1.1/download"
              ],
              "strip_prefix": "android-tzdata-0.1.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.android-tzdata-0.1.1.bazel"
            }
          },
          "generated_inputs_in_external_repo": {
            "bzlFile": "@@rules_rust~0.40.0//test/generated_inputs:external_repo.bzl",
            "ruleClassName": "_generated_inputs_in_external_repo",
            "attributes": {
              "name": "rules_rust~0.40.0~i~generated_inputs_in_external_repo"
            }
          },
          "cui__gix-submodule-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-submodule-0.4.0",
              "sha256": "dd0150e82e9282d3f2ab2dd57a22f9f6c3447b9d9856e5321ac92d38e3e0e2b7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-submodule/0.4.0/download"
              ],
              "strip_prefix": "gix-submodule-0.4.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-submodule-0.4.0.bazel"
            }
          },
          "cui__serde_spanned-0.6.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__serde_spanned-0.6.5",
              "sha256": "eb3622f419d1296904700073ea6cc23ad690adbd66f13ea683df73298736f0c1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/serde_spanned/0.6.5/download"
              ],
              "strip_prefix": "serde_spanned-0.6.5",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.serde_spanned-0.6.5.bazel"
            }
          },
          "cui__gix-revwalk-0.8.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-revwalk-0.8.0",
              "sha256": "e9870c6b1032f2084567710c3b2106ac603377f8d25766b8a6b7c33e6e3ca279",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-revwalk/0.8.0/download"
              ],
              "strip_prefix": "gix-revwalk-0.8.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-revwalk-0.8.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__windows-targets-0.48.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__windows-targets-0.48.1",
              "sha256": "05d4b17490f70499f20b9e791dcf6a299785ce8af4d709018206dc5b4953e95f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows-targets/0.48.1/download"
              ],
              "strip_prefix": "windows-targets-0.48.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.windows-targets-0.48.1.bazel"
            }
          },
          "rules_rust_prost__syn-1.0.109": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__syn-1.0.109",
              "sha256": "72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/syn/1.0.109/download"
              ],
              "strip_prefix": "syn-1.0.109",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.syn-1.0.109.bazel"
            }
          },
          "rules_rust_prost__mime-0.3.17": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__mime-0.3.17",
              "sha256": "6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/mime/0.3.17/download"
              ],
              "strip_prefix": "mime-0.3.17",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.mime-0.3.17.bazel"
            }
          },
          "cui__gix-quote-0.4.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-quote-0.4.7",
              "sha256": "475c86a97dd0127ba4465fbb239abac9ea10e68301470c9791a6dd5351cdc905",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-quote/0.4.7/download"
              ],
              "strip_prefix": "gix-quote-0.4.7",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-quote-0.4.7.bazel"
            }
          },
          "rrra__linux-raw-sys-0.3.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__linux-raw-sys-0.3.8",
              "sha256": "ef53942eb7bf7ff43a617b3e2c1c4a5ecf5944a7c1bc12d7ee39bbb15e5c1519",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/linux-raw-sys/0.3.8/download"
              ],
              "strip_prefix": "linux-raw-sys-0.3.8",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.linux-raw-sys-0.3.8.bazel"
            }
          },
          "cui__memmap2-0.7.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__memmap2-0.7.1",
              "sha256": "f49388d20533534cd19360ad3d6a7dadc885944aa802ba3995040c5ec11288c6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/memmap2/0.7.1/download"
              ],
              "strip_prefix": "memmap2-0.7.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.memmap2-0.7.1.bazel"
            }
          },
          "cui__percent-encoding-2.3.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__percent-encoding-2.3.0",
              "sha256": "9b2a4787296e9989611394c33f193f676704af1686e70b8f8033ab5ba9a35a94",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/percent-encoding/2.3.0/download"
              ],
              "strip_prefix": "percent-encoding-2.3.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.percent-encoding-2.3.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__hashbrown-0.14.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__hashbrown-0.14.0",
              "sha256": "2c6201b9ff9fd90a5a3bac2e56a830d0caa509576f0e503818ee82c181b3437a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hashbrown/0.14.0/download"
              ],
              "strip_prefix": "hashbrown-0.14.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.hashbrown-0.14.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__equivalent-1.0.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__equivalent-1.0.1",
              "sha256": "5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/equivalent/1.0.1/download"
              ],
              "strip_prefix": "equivalent-1.0.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.equivalent-1.0.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__fallible-iterator-0.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__fallible-iterator-0.2.0",
              "sha256": "4443176a9f2c162692bd3d352d745ef9413eec5782a80d8fd6f8a1ac692a07f7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/fallible-iterator/0.2.0/download"
              ],
              "strip_prefix": "fallible-iterator-0.2.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.fallible-iterator-0.2.0.bazel"
            }
          },
          "cui__toml_datetime-0.6.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__toml_datetime-0.6.5",
              "sha256": "3550f4e9685620ac18a50ed434eb3aec30db8ba93b0287467bca5826ea25baf1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/toml_datetime/0.6.5/download"
              ],
              "strip_prefix": "toml_datetime-0.6.5",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.toml_datetime-0.6.5.bazel"
            }
          },
          "cui__pest_derive-2.7.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__pest_derive-2.7.0",
              "sha256": "aef623c9bbfa0eedf5a0efba11a5ee83209c326653ca31ff019bec3a95bfff2b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/pest_derive/2.7.0/download"
              ],
              "strip_prefix": "pest_derive-2.7.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.pest_derive-2.7.0.bazel"
            }
          },
          "rules_rust_prost__once_cell-1.18.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__once_cell-1.18.0",
              "sha256": "dd8b5dd2ae5ed71462c540258bedcb51965123ad7e7ccf4b9a8cafaa4a63576d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/once_cell/1.18.0/download"
              ],
              "strip_prefix": "once_cell-1.18.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.once_cell-1.18.0.bazel"
            }
          },
          "cui__tinyvec-1.6.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__tinyvec-1.6.0",
              "sha256": "87cc5ceb3875bb20c2890005a4e226a4651264a5c75edb2421b52861a0a0cb50",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tinyvec/1.6.0/download"
              ],
              "strip_prefix": "tinyvec-1.6.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.tinyvec-1.6.0.bazel"
            }
          },
          "cui__btoi-0.4.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__btoi-0.4.3",
              "sha256": "9dd6407f73a9b8b6162d8a2ef999fe6afd7cc15902ebf42c5cd296addf17e0ad",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/btoi/0.4.3/download"
              ],
              "strip_prefix": "btoi-0.4.3",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.btoi-0.4.3.bazel"
            }
          },
          "rules_rust_prost__ppv-lite86-0.2.17": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__ppv-lite86-0.2.17",
              "sha256": "5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ppv-lite86/0.2.17/download"
              ],
              "strip_prefix": "ppv-lite86-0.2.17",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.ppv-lite86-0.2.17.bazel"
            }
          },
          "rules_rust_prost__winapi-0.3.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__winapi-0.3.9",
              "sha256": "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi/0.3.9/download"
              ],
              "strip_prefix": "winapi-0.3.9",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.winapi-0.3.9.bazel"
            }
          },
          "cui__hermit-abi-0.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__hermit-abi-0.3.2",
              "sha256": "443144c8cdadd93ebf52ddb4056d257f5b52c04d3c804e657d19eb73fc33668b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hermit-abi/0.3.2/download"
              ],
              "strip_prefix": "hermit-abi-0.3.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.hermit-abi-0.3.2.bazel"
            }
          },
          "rules_rust_wasm_bindgen__regex-syntax-0.7.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__regex-syntax-0.7.4",
              "sha256": "e5ea92a5b6195c6ef2a0295ea818b312502c6fc94dde986c5553242e18fd4ce2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex-syntax/0.7.4/download"
              ],
              "strip_prefix": "regex-syntax-0.7.4",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.regex-syntax-0.7.4.bazel"
            }
          },
          "rules_rust_bindgen__errno-dragonfly-0.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__errno-dragonfly-0.1.2",
              "sha256": "aa68f1b12764fab894d2755d2518754e71b4fd80ecfb822714a1206c2aab39bf",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/errno-dragonfly/0.1.2/download"
              ],
              "strip_prefix": "errno-dragonfly-0.1.2",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.errno-dragonfly-0.1.2.bazel"
            }
          },
          "rules_rust_wasm_bindgen__miniz_oxide-0.7.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__miniz_oxide-0.7.1",
              "sha256": "e7810e0be55b428ada41041c41f32c9f1a42817901b4ccf45fa3d4b6561e74c7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/miniz_oxide/0.7.1/download"
              ],
              "strip_prefix": "miniz_oxide-0.7.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.miniz_oxide-0.7.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__winapi-util-0.1.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__winapi-util-0.1.5",
              "sha256": "70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi-util/0.1.5/download"
              ],
              "strip_prefix": "winapi-util-0.1.5",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.winapi-util-0.1.5.bazel"
            }
          },
          "rules_rust_bindgen__windows_x86_64_gnullvm-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__windows_x86_64_gnullvm-0.48.0",
              "sha256": "7896dbc1f41e08872e9d5e8f8baa8fdd2677f29468c4e156210174edc7f7b953",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_gnullvm/0.48.0/download"
              ],
              "strip_prefix": "windows_x86_64_gnullvm-0.48.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.windows_x86_64_gnullvm-0.48.0.bazel"
            }
          },
          "rules_rust_bindgen__syn-2.0.18": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__syn-2.0.18",
              "sha256": "32d41677bcbe24c20c52e7c70b0d8db04134c5d1066bf98662e2871ad200ea3e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/syn/2.0.18/download"
              ],
              "strip_prefix": "syn-2.0.18",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.syn-2.0.18.bazel"
            }
          },
          "rules_rust_bindgen__yansi-term-0.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__yansi-term-0.1.2",
              "sha256": "fe5c30ade05e61656247b2e334a031dfd0cc466fadef865bdcdea8d537951bf1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/yansi-term/0.1.2/download"
              ],
              "strip_prefix": "yansi-term-0.1.2",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.yansi-term-0.1.2.bazel"
            }
          },
          "cui__toml_edit-0.22.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__toml_edit-0.22.4",
              "sha256": "0c9ffdf896f8daaabf9b66ba8e77ea1ed5ed0f72821b398aba62352e95062951",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/toml_edit/0.22.4/download"
              ],
              "strip_prefix": "toml_edit-0.22.4",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.toml_edit-0.22.4.bazel"
            }
          },
          "cui__gix-utils-0.1.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-utils-0.1.5",
              "sha256": "b85d89dc728613e26e0ed952a19583744e7f5240fcd4aa30d6c824ffd8b52f0f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-utils/0.1.5/download"
              ],
              "strip_prefix": "gix-utils-0.1.5",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-utils-0.1.5.bazel"
            }
          },
          "rules_rust_wasm_bindgen__unicase-2.6.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__unicase-2.6.0",
              "sha256": "50f37be617794602aabbeee0be4f259dc1778fabe05e2d67ee8f79326d5cb4f6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicase/2.6.0/download"
              ],
              "strip_prefix": "unicase-2.6.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.unicase-2.6.0.bazel"
            }
          },
          "rules_rust_bindgen__windows_aarch64_msvc-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__windows_aarch64_msvc-0.48.0",
              "sha256": "b2ef27e0d7bdfcfc7b868b317c1d32c641a6fe4629c171b8928c7b08d98d7cf3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_aarch64_msvc/0.48.0/download"
              ],
              "strip_prefix": "windows_aarch64_msvc-0.48.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.windows_aarch64_msvc-0.48.0.bazel"
            }
          },
          "rules_rust_bindgen__cc-1.0.79": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__cc-1.0.79",
              "sha256": "50d30906286121d95be3d479533b458f87493b30a4b5f79a607db8f5d11aa91f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cc/1.0.79/download"
              ],
              "strip_prefix": "cc-1.0.79",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.cc-1.0.79.bazel"
            }
          },
          "rrra__unicode-ident-1.0.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__unicode-ident-1.0.10",
              "sha256": "22049a19f4a68748a168c0fc439f9516686aa045927ff767eca0a85101fb6e73",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicode-ident/1.0.10/download"
              ],
              "strip_prefix": "unicode-ident-1.0.10",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.unicode-ident-1.0.10.bazel"
            }
          },
          "cui__block-buffer-0.10.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__block-buffer-0.10.4",
              "sha256": "3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/block-buffer/0.10.4/download"
              ],
              "strip_prefix": "block-buffer-0.10.4",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.block-buffer-0.10.4.bazel"
            }
          },
          "cui__clap_lex-0.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__clap_lex-0.5.0",
              "sha256": "2da6da31387c7e4ef160ffab6d5e7f00c42626fe39aea70a7b0f1773f7dd6c1b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/clap_lex/0.5.0/download"
              ],
              "strip_prefix": "clap_lex-0.5.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.clap_lex-0.5.0.bazel"
            }
          },
          "cui__indexmap-2.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__indexmap-2.1.0",
              "sha256": "d530e1a18b1cb4c484e6e34556a0d948706958449fca0cab753d649f2bce3d1f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/indexmap/2.1.0/download"
              ],
              "strip_prefix": "indexmap-2.1.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.indexmap-2.1.0.bazel"
            }
          },
          "cui__hex-0.4.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__hex-0.4.3",
              "sha256": "7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hex/0.4.3/download"
              ],
              "strip_prefix": "hex-0.4.3",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.hex-0.4.3.bazel"
            }
          },
          "rules_rust_prost__quote-1.0.28": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__quote-1.0.28",
              "sha256": "1b9ab9c7eadfd8df19006f1cf1a4aed13540ed5cbc047010ece5826e10825488",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/quote/1.0.28/download"
              ],
              "strip_prefix": "quote-1.0.28",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.quote-1.0.28.bazel"
            }
          },
          "rules_rust_wasm_bindgen__windows-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__windows-0.48.0",
              "sha256": "e686886bc078bc1b0b600cac0147aadb815089b6e4da64016cbd754b6342700f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows/0.48.0/download"
              ],
              "strip_prefix": "windows-0.48.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.windows-0.48.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__unicode-normalization-0.1.22": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__unicode-normalization-0.1.22",
              "sha256": "5c5713f0fc4b5db668a2ac63cdb7bb4469d8c9fed047b1d0292cc7b0ce2ba921",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicode-normalization/0.1.22/download"
              ],
              "strip_prefix": "unicode-normalization-0.1.22",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.unicode-normalization-0.1.22.bazel"
            }
          },
          "cui__chrono-tz-build-0.2.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__chrono-tz-build-0.2.1",
              "sha256": "433e39f13c9a060046954e0592a8d0a4bcb1040125cbf91cb8ee58964cfb350f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/chrono-tz-build/0.2.1/download"
              ],
              "strip_prefix": "chrono-tz-build-0.2.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.chrono-tz-build-0.2.1.bazel"
            }
          },
          "cui__gix-bitmap-0.2.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-bitmap-0.2.7",
              "sha256": "0ccab4bc576844ddb51b78d81b4a42d73e6229660fa614dfc3d3999c874d1959",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-bitmap/0.2.7/download"
              ],
              "strip_prefix": "gix-bitmap-0.2.7",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-bitmap-0.2.7.bazel"
            }
          },
          "cargo_bazel.buildifier-linux-arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cargo_bazel.buildifier-linux-arm64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/5.0.1/buildifier-linux-arm64"
              ],
              "sha256": "c657c628fca72b7e0446f1a542231722a10ba4321597bd6f6249a5da6060b6ff",
              "downloaded_file_path": "buildifier.exe",
              "executable": true
            }
          },
          "rules_rust_wasm_bindgen__anyhow-1.0.71": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__anyhow-1.0.71",
              "sha256": "9c7d0618f0e0b7e8ff11427422b64564d5fb0be1940354bfe2e0529b18a9d9b8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anyhow/1.0.71/download"
              ],
              "strip_prefix": "anyhow-1.0.71",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.anyhow-1.0.71.bazel"
            }
          },
          "rules_rust_bindgen__memchr-2.5.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__memchr-2.5.0",
              "sha256": "2dffe52ecf27772e601905b7522cb4ef790d2cc203488bbd0e2fe85fcb74566d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/memchr/2.5.0/download"
              ],
              "strip_prefix": "memchr-2.5.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.memchr-2.5.0.bazel"
            }
          },
          "cui__gix-pathspec-0.3.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-pathspec-0.3.0",
              "sha256": "c3e26c9b47c51be73f98d38c84494bd5fb99334c5d6fda14ef5d036d50a9e5fd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-pathspec/0.3.0/download"
              ],
              "strip_prefix": "gix-pathspec-0.3.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-pathspec-0.3.0.bazel"
            }
          },
          "rrra__libc-0.2.147": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__libc-0.2.147",
              "sha256": "b4668fb0ea861c1df094127ac5f1da3409a82116a4ba74fca2e58ef927159bb3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/libc/0.2.147/download"
              ],
              "strip_prefix": "libc-0.2.147",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.libc-0.2.147.bazel"
            }
          },
          "rules_rust_prost__parking_lot_core-0.9.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__parking_lot_core-0.9.8",
              "sha256": "93f00c865fe7cabf650081affecd3871070f26767e7b2070a3ffae14c654b447",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/parking_lot_core/0.9.8/download"
              ],
              "strip_prefix": "parking_lot_core-0.9.8",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.parking_lot_core-0.9.8.bazel"
            }
          },
          "rules_rust_wasm_bindgen__base64-0.21.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__base64-0.21.5",
              "sha256": "35636a1494ede3b646cc98f74f8e62c773a38a659ebc777a2cf26b9b74171df9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/base64/0.21.5/download"
              ],
              "strip_prefix": "base64-0.21.5",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.base64-0.21.5.bazel"
            }
          },
          "cui__tracing-attributes-0.1.27": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__tracing-attributes-0.1.27",
              "sha256": "34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tracing-attributes/0.1.27/download"
              ],
              "strip_prefix": "tracing-attributes-0.1.27",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.tracing-attributes-0.1.27.bazel"
            }
          },
          "cui__iana-time-zone-0.1.57": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__iana-time-zone-0.1.57",
              "sha256": "2fad5b825842d2b38bd206f3e81d6957625fd7f0a361e345c30e01a0ae2dd613",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/iana-time-zone/0.1.57/download"
              ],
              "strip_prefix": "iana-time-zone-0.1.57",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.iana-time-zone-0.1.57.bazel"
            }
          },
          "cui__toml_edit-0.19.13": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__toml_edit-0.19.13",
              "sha256": "5f8751d9c1b03c6500c387e96f81f815a4f8e72d142d2d4a9ffa6fedd51ddee7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/toml_edit/0.19.13/download"
              ],
              "strip_prefix": "toml_edit-0.19.13",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.toml_edit-0.19.13.bazel"
            }
          },
          "rules_rust_prost__matchit-0.7.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__matchit-0.7.0",
              "sha256": "b87248edafb776e59e6ee64a79086f65890d3510f2c656c000bf2a7e8a0aea40",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/matchit/0.7.0/download"
              ],
              "strip_prefix": "matchit-0.7.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.matchit-0.7.0.bazel"
            }
          },
          "rules_rust_test_load_arbitrary_tool": {
            "bzlFile": "@@rules_rust~0.40.0//test/load_arbitrary_tool:load_arbitrary_tool_test.bzl",
            "ruleClassName": "_load_arbitrary_tool_test",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_test_load_arbitrary_tool"
            }
          },
          "rules_rust_prost__tokio-1.28.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__tokio-1.28.2",
              "sha256": "94d7b1cfd2aa4011f2de74c2c4c63665e27a71006b0a192dcd2710272e73dfa2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tokio/1.28.2/download"
              ],
              "strip_prefix": "tokio-1.28.2",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.tokio-1.28.2.bazel"
            }
          },
          "rules_rust_wasm_bindgen__chunked_transfer-1.4.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__chunked_transfer-1.4.1",
              "sha256": "cca491388666e04d7248af3f60f0c40cfb0991c72205595d7c396e3510207d1a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/chunked_transfer/1.4.1/download"
              ],
              "strip_prefix": "chunked_transfer-1.4.1",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.chunked_transfer-1.4.1.bazel"
            }
          },
          "cui__gix-chunk-0.4.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-chunk-0.4.4",
              "sha256": "5b42ea64420f7994000130328f3c7a2038f639120518870436d31b8bde704493",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-chunk/0.4.4/download"
              ],
              "strip_prefix": "gix-chunk-0.4.4",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-chunk-0.4.4.bazel"
            }
          },
          "rules_rust_prost__sync_wrapper-0.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__sync_wrapper-0.1.2",
              "sha256": "2047c6ded9c721764247e62cd3b03c09ffc529b2ba5b10ec482ae507a4a70160",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/sync_wrapper/0.1.2/download"
              ],
              "strip_prefix": "sync_wrapper-0.1.2",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.sync_wrapper-0.1.2.bazel"
            }
          },
          "cui__idna-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__idna-0.4.0",
              "sha256": "7d20d6b07bfbc108882d88ed8e37d39636dcc260e15e30c45e6ba089610b917c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/idna/0.4.0/download"
              ],
              "strip_prefix": "idna-0.4.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.idna-0.4.0.bazel"
            }
          },
          "cui__tinyvec_macros-0.1.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__tinyvec_macros-0.1.1",
              "sha256": "1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tinyvec_macros/0.1.1/download"
              ],
              "strip_prefix": "tinyvec_macros-0.1.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.tinyvec_macros-0.1.1.bazel"
            }
          },
          "cui__wasm-bindgen-macro-support-0.2.87": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__wasm-bindgen-macro-support-0.2.87",
              "sha256": "54681b18a46765f095758388f2d0cf16eb8d4169b639ab575a8f5693af210c7b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-macro-support/0.2.87/download"
              ],
              "strip_prefix": "wasm-bindgen-macro-support-0.2.87",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.wasm-bindgen-macro-support-0.2.87.bazel"
            }
          },
          "rrra__windows_i686_gnu-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__windows_i686_gnu-0.48.0",
              "sha256": "622a1962a7db830d6fd0a69683c80a18fda201879f0f447f065a3b7467daa241",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_i686_gnu/0.48.0/download"
              ],
              "strip_prefix": "windows_i686_gnu-0.48.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.windows_i686_gnu-0.48.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__errno-dragonfly-0.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__errno-dragonfly-0.1.2",
              "sha256": "aa68f1b12764fab894d2755d2518754e71b4fd80ecfb822714a1206c2aab39bf",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/errno-dragonfly/0.1.2/download"
              ],
              "strip_prefix": "errno-dragonfly-0.1.2",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.errno-dragonfly-0.1.2.bazel"
            }
          },
          "rules_rust_prost__hyper-timeout-0.4.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__hyper-timeout-0.4.1",
              "sha256": "bbb958482e8c7be4bc3cf272a766a2b0bf1a6755e7a6ae777f017a31d11b13b1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hyper-timeout/0.4.1/download"
              ],
              "strip_prefix": "hyper-timeout-0.4.1",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.hyper-timeout-0.4.1.bazel"
            }
          },
          "rules_rust_bindgen__rustc-hash-1.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__rustc-hash-1.1.0",
              "sha256": "08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustc-hash/1.1.0/download"
              ],
              "strip_prefix": "rustc-hash-1.1.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.rustc-hash-1.1.0.bazel"
            }
          },
          "cui__unic-char-property-0.9.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__unic-char-property-0.9.0",
              "sha256": "a8c57a407d9b6fa02b4795eb81c5b6652060a15a7903ea981f3d723e6c0be221",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unic-char-property/0.9.0/download"
              ],
              "strip_prefix": "unic-char-property-0.9.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.unic-char-property-0.9.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__sha1_smol-1.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__sha1_smol-1.0.0",
              "sha256": "ae1a47186c03a32177042e55dbc5fd5aee900b8e0069a8d70fba96a9375cd012",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/sha1_smol/1.0.0/download"
              ],
              "strip_prefix": "sha1_smol-1.0.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.sha1_smol-1.0.0.bazel"
            }
          },
          "rules_rust_prost__http-0.2.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__http-0.2.9",
              "sha256": "bd6effc99afb63425aff9b05836f029929e345a6148a14b7ecd5ab67af944482",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/http/0.2.9/download"
              ],
              "strip_prefix": "http-0.2.9",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.http-0.2.9.bazel"
            }
          },
          "cui__crossbeam-epoch-0.9.15": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__crossbeam-epoch-0.9.15",
              "sha256": "ae211234986c545741a7dc064309f67ee1e5ad243d0e48335adc0484d960bcc7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crossbeam-epoch/0.9.15/download"
              ],
              "strip_prefix": "crossbeam-epoch-0.9.15",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.crossbeam-epoch-0.9.15.bazel"
            }
          },
          "cui__siphasher-0.3.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__siphasher-0.3.10",
              "sha256": "7bd3e3206899af3f8b12af284fafc038cc1dc2b41d1b89dd17297221c5d225de",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/siphasher/0.3.10/download"
              ],
              "strip_prefix": "siphasher-0.3.10",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.siphasher-0.3.10.bazel"
            }
          },
          "cui__tracing-0.1.40": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__tracing-0.1.40",
              "sha256": "c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tracing/0.1.40/download"
              ],
              "strip_prefix": "tracing-0.1.40",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.tracing-0.1.40.bazel"
            }
          },
          "rules_rust_wasm_bindgen__syn-2.0.25": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__syn-2.0.25",
              "sha256": "15e3fc8c0c74267e2df136e5e5fb656a464158aa57624053375eb9c8c6e25ae2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/syn/2.0.25/download"
              ],
              "strip_prefix": "syn-2.0.25",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.syn-2.0.25.bazel"
            }
          },
          "rules_rust_wasm_bindgen__version_check-0.9.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__version_check-0.9.4",
              "sha256": "49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/version_check/0.9.4/download"
              ],
              "strip_prefix": "version_check-0.9.4",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.version_check-0.9.4.bazel"
            }
          },
          "cui__gix-config-value-0.14.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-config-value-0.14.0",
              "sha256": "ea7505b97f4d8e7933e29735a568ba2f86d8de466669d9f0e8321384f9972f47",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-config-value/0.14.0/download"
              ],
              "strip_prefix": "gix-config-value-0.14.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-config-value-0.14.0.bazel"
            }
          },
          "rrra__is-terminal-0.4.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__is-terminal-0.4.7",
              "sha256": "adcf93614601c8129ddf72e2d5633df827ba6551541c6d8c59520a371475be1f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/is-terminal/0.4.7/download"
              ],
              "strip_prefix": "is-terminal-0.4.7",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.is-terminal-0.4.7.bazel"
            }
          },
          "rules_rust_wasm_bindgen__chrono-0.4.26": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__chrono-0.4.26",
              "sha256": "ec837a71355b28f6556dbd569b37b3f363091c0bd4b2e735674521b4c5fd9bc5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/chrono/0.4.26/download"
              ],
              "strip_prefix": "chrono-0.4.26",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.chrono-0.4.26.bazel"
            }
          },
          "rrra__errno-dragonfly-0.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__errno-dragonfly-0.1.2",
              "sha256": "aa68f1b12764fab894d2755d2518754e71b4fd80ecfb822714a1206c2aab39bf",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/errno-dragonfly/0.1.2/download"
              ],
              "strip_prefix": "errno-dragonfly-0.1.2",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.errno-dragonfly-0.1.2.bazel"
            }
          },
          "rules_rust_wasm_bindgen__instant-0.1.12": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__instant-0.1.12",
              "sha256": "7a5bbe824c507c5da5956355e86a746d82e0e1464f65d862cc5e71da70e94b2c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/instant/0.1.12/download"
              ],
              "strip_prefix": "instant-0.1.12",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.instant-0.1.12.bazel"
            }
          },
          "cui__same-file-1.0.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__same-file-1.0.6",
              "sha256": "93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/same-file/1.0.6/download"
              ],
              "strip_prefix": "same-file-1.0.6",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.same-file-1.0.6.bazel"
            }
          },
          "rules_rust_wasm_bindgen__regex-automata-0.1.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__regex-automata-0.1.10",
              "sha256": "6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex-automata/0.1.10/download"
              ],
              "strip_prefix": "regex-automata-0.1.10",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.regex-automata-0.1.10.bazel"
            }
          },
          "cui__linux-raw-sys-0.3.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__linux-raw-sys-0.3.8",
              "sha256": "ef53942eb7bf7ff43a617b3e2c1c4a5ecf5944a7c1bc12d7ee39bbb15e5c1519",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/linux-raw-sys/0.3.8/download"
              ],
              "strip_prefix": "linux-raw-sys-0.3.8",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.linux-raw-sys-0.3.8.bazel"
            }
          },
          "rules_rust_bindgen__termcolor-1.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__termcolor-1.2.0",
              "sha256": "be55cf8942feac5c765c2c993422806843c9a9a45d4d5c407ad6dd2ea95eb9b6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/termcolor/1.2.0/download"
              ],
              "strip_prefix": "termcolor-1.2.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.termcolor-1.2.0.bazel"
            }
          },
          "rrra__hermit-abi-0.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__hermit-abi-0.3.2",
              "sha256": "443144c8cdadd93ebf52ddb4056d257f5b52c04d3c804e657d19eb73fc33668b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hermit-abi/0.3.2/download"
              ],
              "strip_prefix": "hermit-abi-0.3.2",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.hermit-abi-0.3.2.bazel"
            }
          },
          "rules_rust_bindgen__strsim-0.10.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__strsim-0.10.0",
              "sha256": "73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/strsim/0.10.0/download"
              ],
              "strip_prefix": "strsim-0.10.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.strsim-0.10.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__rand_core-0.6.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__rand_core-0.6.4",
              "sha256": "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rand_core/0.6.4/download"
              ],
              "strip_prefix": "rand_core-0.6.4",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.rand_core-0.6.4.bazel"
            }
          },
          "cui__crossbeam-channel-0.5.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__crossbeam-channel-0.5.8",
              "sha256": "a33c2bf77f2df06183c3aa30d1e96c0695a313d4f9c453cc3762a6db39f99200",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crossbeam-channel/0.5.8/download"
              ],
              "strip_prefix": "crossbeam-channel-0.5.8",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.crossbeam-channel-0.5.8.bazel"
            }
          },
          "cui__arrayvec-0.7.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__arrayvec-0.7.4",
              "sha256": "96d30a06541fbafbc7f82ed10c06164cfbd2c401138f6addd8404629c4b16711",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/arrayvec/0.7.4/download"
              ],
              "strip_prefix": "arrayvec-0.7.4",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.arrayvec-0.7.4.bazel"
            }
          },
          "cui__cc-1.0.79": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__cc-1.0.79",
              "sha256": "50d30906286121d95be3d479533b458f87493b30a4b5f79a607db8f5d11aa91f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cc/1.0.79/download"
              ],
              "strip_prefix": "cc-1.0.79",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.cc-1.0.79.bazel"
            }
          },
          "rules_rust_prost__rand-0.8.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__rand-0.8.5",
              "sha256": "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rand/0.8.5/download"
              ],
              "strip_prefix": "rand-0.8.5",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.rand-0.8.5.bazel"
            }
          },
          "cui__gix-validate-0.8.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-validate-0.8.0",
              "sha256": "e05cab2b03a45b866156e052aa38619f4ece4adcb2f79978bfc249bc3b21b8c5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-validate/0.8.0/download"
              ],
              "strip_prefix": "gix-validate-0.8.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-validate-0.8.0.bazel"
            }
          },
          "rules_rust_prost__anyhow-1.0.71": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__anyhow-1.0.71",
              "sha256": "9c7d0618f0e0b7e8ff11427422b64564d5fb0be1940354bfe2e0529b18a9d9b8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anyhow/1.0.71/download"
              ],
              "strip_prefix": "anyhow-1.0.71",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.anyhow-1.0.71.bazel"
            }
          },
          "rules_rust_prost__errno-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__errno-0.3.1",
              "sha256": "4bcfec3a70f97c962c307b2d2c56e358cf1d00b558d74262b5f929ee8cc7e73a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/errno/0.3.1/download"
              ],
              "strip_prefix": "errno-0.3.1",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.errno-0.3.1.bazel"
            }
          },
          "cui__is-terminal-0.4.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__is-terminal-0.4.7",
              "sha256": "adcf93614601c8129ddf72e2d5633df827ba6551541c6d8c59520a371475be1f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/is-terminal/0.4.7/download"
              ],
              "strip_prefix": "is-terminal-0.4.7",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.is-terminal-0.4.7.bazel"
            }
          },
          "cui__unicode-width-0.1.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__unicode-width-0.1.10",
              "sha256": "c0edd1e5b14653f783770bce4a4dabb4a5108a5370a5f5d8cfe8710c361f6c8b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicode-width/0.1.10/download"
              ],
              "strip_prefix": "unicode-width-0.1.10",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.unicode-width-0.1.10.bazel"
            }
          },
          "rules_rust_wasm_bindgen__js-sys-0.3.64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__js-sys-0.3.64",
              "sha256": "c5f195fe497f702db0f318b07fdd68edb16955aed830df8363d837542f8f935a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/js-sys/0.3.64/download"
              ],
              "strip_prefix": "js-sys-0.3.64",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.js-sys-0.3.64.bazel"
            }
          },
          "rrra__humantime-2.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__humantime-2.1.0",
              "sha256": "9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/humantime/2.1.0/download"
              ],
              "strip_prefix": "humantime-2.1.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.humantime-2.1.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__libc-0.2.150": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__libc-0.2.150",
              "sha256": "89d92a4743f9a61002fae18374ed11e7973f530cb3a3255fb354818118b2203c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/libc/0.2.150/download"
              ],
              "strip_prefix": "libc-0.2.150",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.libc-0.2.150.bazel"
            }
          },
          "rules_rust_bindgen__env_logger-0.10.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__env_logger-0.10.0",
              "sha256": "85cdab6a89accf66733ad5a1693a4dcced6aeff64602b634530dd73c1f3ee9f0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/env_logger/0.10.0/download"
              ],
              "strip_prefix": "env_logger-0.10.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.env_logger-0.10.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__time-0.3.23": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__time-0.3.23",
              "sha256": "59e399c068f43a5d116fedaf73b203fa4f9c519f17e2b34f63221d3792f81446",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/time/0.3.23/download"
              ],
              "strip_prefix": "time-0.3.23",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.time-0.3.23.bazel"
            }
          },
          "cui__toml-0.8.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__toml-0.8.10",
              "sha256": "9a9aad4a3066010876e8dcf5a8a06e70a558751117a145c6ce2b82c2e2054290",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/toml/0.8.10/download"
              ],
              "strip_prefix": "toml-0.8.10",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.toml-0.8.10.bazel"
            }
          },
          "rules_rust_prost__tracing-attributes-0.1.26": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__tracing-attributes-0.1.26",
              "sha256": "5f4f31f56159e98206da9efd823404b79b6ef3143b4a7ab76e67b1751b25a4ab",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tracing-attributes/0.1.26/download"
              ],
              "strip_prefix": "tracing-attributes-0.1.26",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.tracing-attributes-0.1.26.bazel"
            }
          },
          "rules_rust_prost__instant-0.1.12": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__instant-0.1.12",
              "sha256": "7a5bbe824c507c5da5956355e86a746d82e0e1464f65d862cc5e71da70e94b2c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/instant/0.1.12/download"
              ],
              "strip_prefix": "instant-0.1.12",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.instant-0.1.12.bazel"
            }
          },
          "cui__gix-transport-0.37.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-transport-0.37.0",
              "sha256": "b9ec726e6a245e68ace59a34126a1d679de60360676612985e70b0d3b102fb4e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-transport/0.37.0/download"
              ],
              "strip_prefix": "gix-transport-0.37.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-transport-0.37.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__indexmap-2.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__indexmap-2.0.0",
              "sha256": "d5477fe2230a79769d8dc68e0eabf5437907c0457a5614a9e8dddb67f65eb65d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/indexmap/2.0.0/download"
              ],
              "strip_prefix": "indexmap-2.0.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.indexmap-2.0.0.bazel"
            }
          },
          "cui__windows_i686_gnu-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__windows_i686_gnu-0.48.0",
              "sha256": "622a1962a7db830d6fd0a69683c80a18fda201879f0f447f065a3b7467daa241",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_i686_gnu/0.48.0/download"
              ],
              "strip_prefix": "windows_i686_gnu-0.48.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.windows_i686_gnu-0.48.0.bazel"
            }
          },
          "rrra__proc-macro2-1.0.64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__proc-macro2-1.0.64",
              "sha256": "78803b62cbf1f46fde80d7c0e803111524b9877184cfe7c3033659490ac7a7da",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/proc-macro2/1.0.64/download"
              ],
              "strip_prefix": "proc-macro2-1.0.64",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.proc-macro2-1.0.64.bazel"
            }
          },
          "rules_rust_wasm_bindgen__predicates-tree-1.0.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__predicates-tree-1.0.9",
              "sha256": "368ba315fb8c5052ab692e68a0eefec6ec57b23a36959c14496f0b0df2c0cecf",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/predicates-tree/1.0.9/download"
              ],
              "strip_prefix": "predicates-tree-1.0.9",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.predicates-tree-1.0.9.bazel"
            }
          },
          "rrra__errno-0.3.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__errno-0.3.1",
              "sha256": "4bcfec3a70f97c962c307b2d2c56e358cf1d00b558d74262b5f929ee8cc7e73a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/errno/0.3.1/download"
              ],
              "strip_prefix": "errno-0.3.1",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.errno-0.3.1.bazel"
            }
          },
          "cui__num_threads-0.1.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__num_threads-0.1.6",
              "sha256": "2819ce041d2ee131036f4fc9d6ae7ae125a3a40e97ba64d04fe799ad9dabbb44",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/num_threads/0.1.6/download"
              ],
              "strip_prefix": "num_threads-0.1.6",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.num_threads-0.1.6.bazel"
            }
          },
          "rules_rust_prost__pin-project-internal-1.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__pin-project-internal-1.1.0",
              "sha256": "39407670928234ebc5e6e580247dd567ad73a3578460c5990f9503df207e8f07",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/pin-project-internal/1.1.0/download"
              ],
              "strip_prefix": "pin-project-internal-1.1.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.pin-project-internal-1.1.0.bazel"
            }
          },
          "cui__rustc-hash-1.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__rustc-hash-1.1.0",
              "sha256": "08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rustc-hash/1.1.0/download"
              ],
              "strip_prefix": "rustc-hash-1.1.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.rustc-hash-1.1.0.bazel"
            }
          },
          "cui__sharded-slab-0.1.7": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__sharded-slab-0.1.7",
              "sha256": "f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/sharded-slab/0.1.7/download"
              ],
              "strip_prefix": "sharded-slab-0.1.7",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.sharded-slab-0.1.7.bazel"
            }
          },
          "rrra__itoa-1.0.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__itoa-1.0.8",
              "sha256": "62b02a5381cc465bd3041d84623d0fa3b66738b52b8e2fc3bab8ad63ab032f4a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/itoa/1.0.8/download"
              ],
              "strip_prefix": "itoa-1.0.8",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.itoa-1.0.8.bazel"
            }
          },
          "cui__arc-swap-1.6.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__arc-swap-1.6.0",
              "sha256": "bddcadddf5e9015d310179a59bb28c4d4b9920ad0f11e8e14dbadf654890c9a6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/arc-swap/1.6.0/download"
              ],
              "strip_prefix": "arc-swap-1.6.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.arc-swap-1.6.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__webpki-roots-0.25.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__webpki-roots-0.25.2",
              "sha256": "14247bb57be4f377dfb94c72830b8ce8fc6beac03cf4bf7b9732eadd414123fc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/webpki-roots/0.25.2/download"
              ],
              "strip_prefix": "webpki-roots-0.25.2",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.webpki-roots-0.25.2.bazel"
            }
          },
          "cui__form_urlencoded-1.2.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__form_urlencoded-1.2.0",
              "sha256": "a62bc1cf6f830c2ec14a513a9fb124d0a213a629668a4186f329db21fe045652",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/form_urlencoded/1.2.0/download"
              ],
              "strip_prefix": "form_urlencoded-1.2.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.form_urlencoded-1.2.0.bazel"
            }
          },
          "cui__gix-features-0.35.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-features-0.35.0",
              "sha256": "9b9ff423ae4983f762659040d13dd7a5defbd54b6a04ac3cc7347741cec828cd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-features/0.35.0/download"
              ],
              "strip_prefix": "gix-features-0.35.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-features-0.35.0.bazel"
            }
          },
          "cui__gix-commitgraph-0.21.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-commitgraph-0.21.0",
              "sha256": "e75a975ee22cf0a002bfe9b5d5cb3d2a88e263a8a178cd7509133cff10f4df8a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-commitgraph/0.21.0/download"
              ],
              "strip_prefix": "gix-commitgraph-0.21.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-commitgraph-0.21.0.bazel"
            }
          },
          "cui__lock_api-0.4.11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__lock_api-0.4.11",
              "sha256": "3c168f8615b12bc01f9c17e2eb0cc07dcae1940121185446edc3744920e8ef45",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/lock_api/0.4.11/download"
              ],
              "strip_prefix": "lock_api-0.4.11",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.lock_api-0.4.11.bazel"
            }
          },
          "rrra__serde_json-1.0.102": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__serde_json-1.0.102",
              "sha256": "b5062a995d481b2308b6064e9af76011f2921c35f97b0468811ed9f6cd91dfed",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/serde_json/1.0.102/download"
              ],
              "strip_prefix": "serde_json-1.0.102",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.serde_json-1.0.102.bazel"
            }
          },
          "rules_rust_prost__tonic-build-0.8.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__tonic-build-0.8.4",
              "sha256": "5bf5e9b9c0f7e0a7c027dcfaba7b2c60816c7049171f679d99ee2ff65d0de8c4",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tonic-build/0.8.4/download"
              ],
              "strip_prefix": "tonic-build-0.8.4",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.tonic-build-0.8.4.bazel"
            }
          },
          "rules_rust_wasm_bindgen__rouille-3.6.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__rouille-3.6.2",
              "sha256": "3716fbf57fc1084d7a706adf4e445298d123e4a44294c4e8213caf1b85fcc921",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rouille/3.6.2/download"
              ],
              "strip_prefix": "rouille-3.6.2",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.rouille-3.6.2.bazel"
            }
          },
          "cui__android-tzdata-0.1.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__android-tzdata-0.1.1",
              "sha256": "e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/android-tzdata/0.1.1/download"
              ],
              "strip_prefix": "android-tzdata-0.1.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.android-tzdata-0.1.1.bazel"
            }
          },
          "rules_rust_wasm_bindgen__winapi-i686-pc-windows-gnu-0.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__winapi-i686-pc-windows-gnu-0.4.0",
              "sha256": "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winapi-i686-pc-windows-gnu/0.4.0/download"
              ],
              "strip_prefix": "winapi-i686-pc-windows-gnu-0.4.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.winapi-i686-pc-windows-gnu-0.4.0.bazel"
            }
          },
          "cui__anyhow-1.0.75": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__anyhow-1.0.75",
              "sha256": "a4668cab20f66d8d020e1fbc0ebe47217433c1b6c8f2040faf858554e394ace6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/anyhow/1.0.75/download"
              ],
              "strip_prefix": "anyhow-1.0.75",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.anyhow-1.0.75.bazel"
            }
          },
          "rules_rust_prost__futures-task-0.3.28": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__futures-task-0.3.28",
              "sha256": "76d3d132be6c0e6aa1534069c705a74a5997a356c0dc2f86a47765e5617c5b65",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/futures-task/0.3.28/download"
              ],
              "strip_prefix": "futures-task-0.3.28",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.futures-task-0.3.28.bazel"
            }
          },
          "rules_rust_wasm_bindgen__url-2.4.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__url-2.4.0",
              "sha256": "50bff7831e19200a85b17131d085c25d7811bc4e186efdaf54bbd132994a88cb",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/url/2.4.0/download"
              ],
              "strip_prefix": "url-2.4.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.url-2.4.0.bazel"
            }
          },
          "cui__uluru-3.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__uluru-3.0.0",
              "sha256": "794a32261a1f5eb6a4462c81b59cec87b5c27d5deea7dd1ac8fc781c41d226db",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/uluru/3.0.0/download"
              ],
              "strip_prefix": "uluru-3.0.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.uluru-3.0.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__syn-1.0.109": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__syn-1.0.109",
              "sha256": "72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/syn/1.0.109/download"
              ],
              "strip_prefix": "syn-1.0.109",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.syn-1.0.109.bazel"
            }
          },
          "cui__serde-1.0.190": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__serde-1.0.190",
              "sha256": "91d3c334ca1ee894a2c6f6ad698fe8c435b76d504b13d436f0685d648d6d96f7",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/serde/1.0.190/download"
              ],
              "strip_prefix": "serde-1.0.190",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.serde-1.0.190.bazel"
            }
          },
          "rules_rust_prost__socket2-0.4.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__socket2-0.4.9",
              "sha256": "64a4a911eed85daf18834cfaa86a79b7d266ff93ff5ba14005426219480ed662",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/socket2/0.4.9/download"
              ],
              "strip_prefix": "socket2-0.4.9",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.socket2-0.4.9.bazel"
            }
          },
          "rules_rust_wasm_bindgen__ascii-1.1.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__ascii-1.1.0",
              "sha256": "d92bec98840b8f03a5ff5413de5293bfcd8bf96467cf5452609f939ec6f5de16",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/ascii/1.1.0/download"
              ],
              "strip_prefix": "ascii-1.1.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.ascii-1.1.0.bazel"
            }
          },
          "rules_rust_prost__prost-types-0.11.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__prost-types-0.11.9",
              "sha256": "213622a1460818959ac1181aaeb2dc9c7f63df720db7d788b3e24eacd1983e13",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/prost-types/0.11.9/download"
              ],
              "strip_prefix": "prost-types-0.11.9",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.prost-types-0.11.9.bazel"
            }
          },
          "rules_rust_wasm_bindgen__bstr-0.2.17": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__bstr-0.2.17",
              "sha256": "ba3569f383e8f1598449f1a423e72e99569137b47740b1da11ef19af3d5c3223",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bstr/0.2.17/download"
              ],
              "strip_prefix": "bstr-0.2.17",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.bstr-0.2.17.bazel"
            }
          },
          "rules_rust_prost__futures-sink-0.3.28": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__futures-sink-0.3.28",
              "sha256": "f43be4fe21a13b9781a69afa4985b0f6ee0e1afab2c6f454a8cf30e2b2237b6e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/futures-sink/0.3.28/download"
              ],
              "strip_prefix": "futures-sink-0.3.28",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.futures-sink-0.3.28.bazel"
            }
          },
          "rules_rust_prost__unicode-ident-1.0.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__unicode-ident-1.0.9",
              "sha256": "b15811caf2415fb889178633e7724bad2509101cde276048e013b9def5e51fa0",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicode-ident/1.0.9/download"
              ],
              "strip_prefix": "unicode-ident-1.0.9",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.unicode-ident-1.0.9.bazel"
            }
          },
          "cui__aho-corasick-1.0.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__aho-corasick-1.0.2",
              "sha256": "43f6cb1bf222025340178f382c426f13757b2960e89779dfcb319c32542a5a41",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/aho-corasick/1.0.2/download"
              ],
              "strip_prefix": "aho-corasick-1.0.2",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.aho-corasick-1.0.2.bazel"
            }
          },
          "cui__libc-0.2.149": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__libc-0.2.149",
              "sha256": "a08173bc88b7955d1b3145aa561539096c421ac8debde8cbc3612ec635fee29b",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/libc/0.2.149/download"
              ],
              "strip_prefix": "libc-0.2.149",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.libc-0.2.149.bazel"
            }
          },
          "rules_rust_wasm_bindgen__tinyvec-1.6.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__tinyvec-1.6.0",
              "sha256": "87cc5ceb3875bb20c2890005a4e226a4651264a5c75edb2421b52861a0a0cb50",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tinyvec/1.6.0/download"
              ],
              "strip_prefix": "tinyvec-1.6.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.tinyvec-1.6.0.bazel"
            }
          },
          "cui__unicode-linebreak-0.1.5": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__unicode-linebreak-0.1.5",
              "sha256": "3b09c83c3c29d37506a3e260c08c03743a6bb66a9cd432c6934ab501a190571f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicode-linebreak/0.1.5/download"
              ],
              "strip_prefix": "unicode-linebreak-0.1.5",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.unicode-linebreak-0.1.5.bazel"
            }
          },
          "rules_rust_bindgen__windows_x86_64_msvc-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__windows_x86_64_msvc-0.48.0",
              "sha256": "1a515f5799fe4961cb532f983ce2b23082366b898e52ffbce459c86f67c8378a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_msvc/0.48.0/download"
              ],
              "strip_prefix": "windows_x86_64_msvc-0.48.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.windows_x86_64_msvc-0.48.0.bazel"
            }
          },
          "rrra__itertools-0.11.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__itertools-0.11.0",
              "sha256": "b1c173a5686ce8bfa551b3563d0c2170bf24ca44da99c7ca4bfdab5418c3fe57",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/itertools/0.11.0/download"
              ],
              "strip_prefix": "itertools-0.11.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.itertools-0.11.0.bazel"
            }
          },
          "rules_rust_bindgen__regex-1.8.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__regex-1.8.4",
              "sha256": "d0ab3ca65655bb1e41f2a8c8cd662eb4fb035e67c3f78da1d61dffe89d07300f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex/1.8.4/download"
              ],
              "strip_prefix": "regex-1.8.4",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.regex-1.8.4.bazel"
            }
          },
          "cui__hashbrown-0.14.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__hashbrown-0.14.3",
              "sha256": "290f1a1d9242c78d09ce40a5e87e7554ee637af1351968159f4952f028f75604",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/hashbrown/0.14.3/download"
              ],
              "strip_prefix": "hashbrown-0.14.3",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.hashbrown-0.14.3.bazel"
            }
          },
          "cui__crypto-common-0.1.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__crypto-common-0.1.6",
              "sha256": "1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crypto-common/0.1.6/download"
              ],
              "strip_prefix": "crypto-common-0.1.6",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.crypto-common-0.1.6.bazel"
            }
          },
          "rrra__windows_x86_64_gnu-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__windows_x86_64_gnu-0.48.0",
              "sha256": "ca2b8a661f7628cbd23440e50b05d705db3686f894fc9580820623656af974b1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_gnu/0.48.0/download"
              ],
              "strip_prefix": "windows_x86_64_gnu-0.48.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.windows_x86_64_gnu-0.48.0.bazel"
            }
          },
          "cui__winnow-0.5.18": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__winnow-0.5.18",
              "sha256": "176b6138793677221d420fd2f0aeeced263f197688b36484660da767bca2fa32",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/winnow/0.5.18/download"
              ],
              "strip_prefix": "winnow-0.5.18",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.winnow-0.5.18.bazel"
            }
          },
          "cui__byteyarn-0.2.3": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__byteyarn-0.2.3",
              "sha256": "a7534301c0ea17abb4db06d75efc7b4b0fa360fce8e175a4330d721c71c942ff",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/byteyarn/0.2.3/download"
              ],
              "strip_prefix": "byteyarn-0.2.3",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.byteyarn-0.2.3.bazel"
            }
          },
          "rules_rust_wasm_bindgen__crossbeam-utils-0.8.16": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__crossbeam-utils-0.8.16",
              "sha256": "5a22b2d63d4d1dc0b7f1b6b2747dd0088008a9be28b6ddf0b1e7d335e3037294",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/crossbeam-utils/0.8.16/download"
              ],
              "strip_prefix": "crossbeam-utils-0.8.16",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.crossbeam-utils-0.8.16.bazel"
            }
          },
          "cui__memchr-2.6.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__memchr-2.6.4",
              "sha256": "f665ee40bc4a3c5590afb1e9677db74a508659dfd71e126420da8274909a0167",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/memchr/2.6.4/download"
              ],
              "strip_prefix": "memchr-2.6.4",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.memchr-2.6.4.bazel"
            }
          },
          "rrra__serde_derive-1.0.171": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__serde_derive-1.0.171",
              "sha256": "389894603bd18c46fa56231694f8d827779c0951a667087194cf9de94ed24682",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/serde_derive/1.0.171/download"
              ],
              "strip_prefix": "serde_derive-1.0.171",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.serde_derive-1.0.171.bazel"
            }
          },
          "cui__bitflags-2.4.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__bitflags-2.4.1",
              "sha256": "327762f6e5a765692301e5bb513e0d9fef63be86bbc14528052b1cd3e6f03e07",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bitflags/2.4.1/download"
              ],
              "strip_prefix": "bitflags-2.4.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.bitflags-2.4.1.bazel"
            }
          },
          "rules_rust_prost__io-lifetimes-1.0.11": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__io-lifetimes-1.0.11",
              "sha256": "eae7b9aee968036d54dce06cebaefd919e4472e753296daccd6d344e3e2df0c2",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/io-lifetimes/1.0.11/download"
              ],
              "strip_prefix": "io-lifetimes-1.0.11",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.io-lifetimes-1.0.11.bazel"
            }
          },
          "rrra__windows_aarch64_gnullvm-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rrra__windows_aarch64_gnullvm-0.48.0",
              "sha256": "91ae572e1b79dba883e0d315474df7305d12f569b400fcf90581b06062f7e1bc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_aarch64_gnullvm/0.48.0/download"
              ],
              "strip_prefix": "windows_aarch64_gnullvm-0.48.0",
              "build_file": "@@rules_rust~0.40.0//tools/rust_analyzer/3rdparty/crates:BUILD.windows_aarch64_gnullvm-0.48.0.bazel"
            }
          },
          "rules_rust_prost__itoa-1.0.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__itoa-1.0.6",
              "sha256": "453ad9f582a441959e5f0d088b02ce04cfe8d51a8eaf077f12ac6d3e94164ca6",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/itoa/1.0.6/download"
              ],
              "strip_prefix": "itoa-1.0.6",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.itoa-1.0.6.bazel"
            }
          },
          "rules_rust_wasm_bindgen__cfg-if-1.0.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__cfg-if-1.0.0",
              "sha256": "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/cfg-if/1.0.0/download"
              ],
              "strip_prefix": "cfg-if-1.0.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.cfg-if-1.0.0.bazel"
            }
          },
          "rules_rust_prost__windows_x86_64_gnullvm-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__windows_x86_64_gnullvm-0.48.0",
              "sha256": "7896dbc1f41e08872e9d5e8f8baa8fdd2677f29468c4e156210174edc7f7b953",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_x86_64_gnullvm/0.48.0/download"
              ],
              "strip_prefix": "windows_x86_64_gnullvm-0.48.0",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.windows_x86_64_gnullvm-0.48.0.bazel"
            }
          },
          "rules_rust_prost__pin-project-lite-0.2.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__pin-project-lite-0.2.9",
              "sha256": "e0a7ae3ac2f1173085d398531c705756c94a4c56843785df85a60c1a0afac116",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/pin-project-lite/0.2.9/download"
              ],
              "strip_prefix": "pin-project-lite-0.2.9",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.pin-project-lite-0.2.9.bazel"
            }
          },
          "cui__gix-credentials-0.20.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-credentials-0.20.0",
              "sha256": "46900b884cc5af6a6c141ee741607c0c651a4e1d33614b8d888a1ba81cc0bc8a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-credentials/0.20.0/download"
              ],
              "strip_prefix": "gix-credentials-0.20.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-credentials-0.20.0.bazel"
            }
          },
          "rules_rust_prost__syn-2.0.18": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__syn-2.0.18",
              "sha256": "32d41677bcbe24c20c52e7c70b0d8db04134c5d1066bf98662e2871ad200ea3e",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/syn/2.0.18/download"
              ],
              "strip_prefix": "syn-2.0.18",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.syn-2.0.18.bazel"
            }
          },
          "rules_rust_prost__linux-raw-sys-0.3.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__linux-raw-sys-0.3.8",
              "sha256": "ef53942eb7bf7ff43a617b3e2c1c4a5ecf5944a7c1bc12d7ee39bbb15e5c1519",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/linux-raw-sys/0.3.8/download"
              ],
              "strip_prefix": "linux-raw-sys-0.3.8",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.linux-raw-sys-0.3.8.bazel"
            }
          },
          "rules_rust_wasm_bindgen__wasm-bindgen-cli-support-0.2.91": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasm-bindgen-cli-support-0.2.91",
              "sha256": "806a045c4ec4ef7c3ad86dc27bcb641b84d9eeb3846200f56d7ab0885241d654",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-cli-support/0.2.91/download"
              ],
              "strip_prefix": "wasm-bindgen-cli-support-0.2.91",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.wasm-bindgen-cli-support-0.2.91.bazel"
            }
          },
          "cui__serde_derive-1.0.190": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__serde_derive-1.0.190",
              "sha256": "67c5609f394e5c2bd7fc51efda478004ea80ef42fee983d5c67a65e34f32c0e3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/serde_derive/1.0.190/download"
              ],
              "strip_prefix": "serde_derive-1.0.190",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.serde_derive-1.0.190.bazel"
            }
          },
          "rules_rust_prost__regex-syntax-0.7.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__regex-syntax-0.7.2",
              "sha256": "436b050e76ed2903236f032a59761c1eb99e1b0aead2c257922771dab1fc8c78",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/regex-syntax/0.7.2/download"
              ],
              "strip_prefix": "regex-syntax-0.7.2",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.regex-syntax-0.7.2.bazel"
            }
          },
          "rules_rust_wasm_bindgen__serde-1.0.171": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__serde-1.0.171",
              "sha256": "30e27d1e4fd7659406c492fd6cfaf2066ba8773de45ca75e855590f856dc34a9",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/serde/1.0.171/download"
              ],
              "strip_prefix": "serde-1.0.171",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.serde-1.0.171.bazel"
            }
          },
          "rules_rust_wasm_bindgen__wasm-bindgen-macro-0.2.91": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasm-bindgen-macro-0.2.91",
              "sha256": "b30af9e2d358182b5c7449424f017eba305ed32a7010509ede96cdc4696c46ed",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/wasm-bindgen-macro/0.2.91/download"
              ],
              "strip_prefix": "wasm-bindgen-macro-0.2.91",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.wasm-bindgen-macro-0.2.91.bazel"
            }
          },
          "cui__pest_generator-2.7.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__pest_generator-2.7.0",
              "sha256": "b3e8cba4ec22bada7fc55ffe51e2deb6a0e0db2d0b7ab0b103acc80d2510c190",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/pest_generator/2.7.0/download"
              ],
              "strip_prefix": "pest_generator-2.7.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.pest_generator-2.7.0.bazel"
            }
          },
          "cui__chrono-tz-0.8.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__chrono-tz-0.8.4",
              "sha256": "e23185c0e21df6ed832a12e2bda87c7d1def6842881fb634a8511ced741b0d76",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/chrono-tz/0.8.4/download"
              ],
              "strip_prefix": "chrono-tz-0.8.4",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.chrono-tz-0.8.4.bazel"
            }
          },
          "cui__gix-revision-0.22.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-revision-0.22.0",
              "sha256": "c8c4b15cf2ab7a35f5bcb3ef146187c8d36df0177e171ca061913cbaaa890e89",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-revision/0.22.0/download"
              ],
              "strip_prefix": "gix-revision-0.22.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-revision-0.22.0.bazel"
            }
          },
          "cui__camino-1.1.6": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__camino-1.1.6",
              "sha256": "c59e92b5a388f549b863a7bea62612c09f24c8393560709a54558a9abdfb3b9c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/camino/1.1.6/download"
              ],
              "strip_prefix": "camino-1.1.6",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.camino-1.1.6.bazel"
            }
          },
          "cross_x86_64-pc-windows-msvc": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cross_x86_64-pc-windows-msvc",
              "urls": [
                "https://github.com/rust-embedded/cross/releases/download/v0.2.1/cross-v0.2.1-x86_64-pc-windows-msvc.tar.gz"
              ],
              "sha256": "3af59ff5a2229f92b54df937c50a9a88c96dffc8ac3dde520a38fdf046d656c4",
              "build_file_content": "exports_files(glob([\"**\"]), visibility = [\"//visibility:public\"])"
            }
          },
          "rules_rust_prost__signal-hook-registry-1.4.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__signal-hook-registry-1.4.1",
              "sha256": "d8229b473baa5980ac72ef434c4415e70c4b5e71b423043adb4ba059f89c99a1",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/signal-hook-registry/1.4.1/download"
              ],
              "strip_prefix": "signal-hook-registry-1.4.1",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.signal-hook-registry-1.4.1.bazel"
            }
          },
          "cui__gix-config-0.30.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-config-0.30.0",
              "sha256": "c171514b40487d3f677ae37efc0f45ac980e3169f23c27eb30a70b47fdf88ab5",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-config/0.30.0/download"
              ],
              "strip_prefix": "gix-config-0.30.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-config-0.30.0.bazel"
            }
          },
          "cui__unicode-ident-1.0.10": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__unicode-ident-1.0.10",
              "sha256": "22049a19f4a68748a168c0fc439f9516686aa045927ff767eca0a85101fb6e73",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unicode-ident/1.0.10/download"
              ],
              "strip_prefix": "unicode-ident-1.0.10",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.unicode-ident-1.0.10.bazel"
            }
          },
          "rules_rust_prost__heck": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__heck",
              "sha256": "95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/heck/0.4.1/download"
              ],
              "strip_prefix": "heck-0.4.1",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.heck-0.4.1.bazel"
            }
          },
          "rules_rust_prost__prost-build-0.11.9": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__prost-build-0.11.9",
              "sha256": "119533552c9a7ffacc21e099c24a0ac8bb19c2a2a3f363de84cd9b844feab270",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/prost-build/0.11.9/download"
              ],
              "strip_prefix": "prost-build-0.11.9",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.prost-build-0.11.9.bazel"
            }
          },
          "cui__gix-discover-0.25.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-discover-0.25.0",
              "sha256": "69507643d75a0ea9a402fcf73ced517d2b95cc95385904ac09d03e0b952fde33",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-discover/0.25.0/download"
              ],
              "strip_prefix": "gix-discover-0.25.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-discover-0.25.0.bazel"
            }
          },
          "cui__unic-common-0.9.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__unic-common-0.9.0",
              "sha256": "80d7ff825a6a654ee85a63e80f92f054f904f21e7d12da4e22f9834a4aaa35bc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/unic-common/0.9.0/download"
              ],
              "strip_prefix": "unic-common-0.9.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.unic-common-0.9.0.bazel"
            }
          },
          "rules_rust_prost__tower-0.4.13": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_prost__tower-0.4.13",
              "sha256": "b8fa9be0de6cf49e536ce1851f987bd21a43b771b09473c3549a6c853db37c1c",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/tower/0.4.13/download"
              ],
              "strip_prefix": "tower-0.4.13",
              "build_file": "@@rules_rust~0.40.0//proto/prost/private/3rdparty/crates:BUILD.tower-0.4.13.bazel"
            }
          },
          "rules_rust_wasm_bindgen__itoa-1.0.8": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__itoa-1.0.8",
              "sha256": "62b02a5381cc465bd3041d84623d0fa3b66738b52b8e2fc3bab8ad63ab032f4a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/itoa/1.0.8/download"
              ],
              "strip_prefix": "itoa-1.0.8",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.itoa-1.0.8.bazel"
            }
          },
          "rules_rust_bindgen__libloading-0.7.4": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__libloading-0.7.4",
              "sha256": "b67380fd3b2fbe7527a606e18729d21c6f3951633d0500574c4dc22d2d638b9f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/libloading/0.7.4/download"
              ],
              "strip_prefix": "libloading-0.7.4",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.libloading-0.7.4.bazel"
            }
          },
          "rules_rust_bindgen__windows_aarch64_gnullvm-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__windows_aarch64_gnullvm-0.48.0",
              "sha256": "91ae572e1b79dba883e0d315474df7305d12f569b400fcf90581b06062f7e1bc",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows_aarch64_gnullvm/0.48.0/download"
              ],
              "strip_prefix": "windows_aarch64_gnullvm-0.48.0",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.windows_aarch64_gnullvm-0.48.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__alloc-stdlib-0.2.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__alloc-stdlib-0.2.2",
              "sha256": "94fb8275041c72129eb51b7d0322c29b8387a0386127718b096429201a5d6ece",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/alloc-stdlib/0.2.2/download"
              ],
              "strip_prefix": "alloc-stdlib-0.2.2",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.alloc-stdlib-0.2.2.bazel"
            }
          },
          "rules_rust_wasm_bindgen__bitflags-1.3.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__bitflags-1.3.2",
              "sha256": "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/bitflags/1.3.2/download"
              ],
              "strip_prefix": "bitflags-1.3.2",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.bitflags-1.3.2.bazel"
            }
          },
          "rules_rust_bindgen__peeking_take_while-0.1.2": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_bindgen__peeking_take_while-0.1.2",
              "sha256": "19b17cddbe7ec3f8bc800887bab5e717348c95ea2ca0b1bf0837fb964dc67099",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/peeking_take_while/0.1.2/download"
              ],
              "strip_prefix": "peeking_take_while-0.1.2",
              "build_file": "@@rules_rust~0.40.0//bindgen/3rdparty/crates:BUILD.peeking_take_while-0.1.2.bazel"
            }
          },
          "cui__gix-ignore-0.8.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__gix-ignore-0.8.0",
              "sha256": "b048f443a1f6b02da4205c34d2e287e3fd45d75e8e2f06cfb216630ea9bff5e3",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/gix-ignore/0.8.0/download"
              ],
              "strip_prefix": "gix-ignore-0.8.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.gix-ignore-0.8.0.bazel"
            }
          },
          "rules_rust_wasm_bindgen__rayon-core-1.11.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__rayon-core-1.11.0",
              "sha256": "4b8f95bd6966f5c87776639160a66bd8ab9895d9d4ab01ddba9fc60661aebe8d",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/rayon-core/1.11.0/download"
              ],
              "strip_prefix": "rayon-core-1.11.0",
              "build_file": "@@rules_rust~0.40.0//wasm_bindgen/3rdparty/crates:BUILD.rayon-core-1.11.0.bazel"
            }
          },
          "cui__utf8parse-0.2.1": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__utf8parse-0.2.1",
              "sha256": "711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/utf8parse/0.2.1/download"
              ],
              "strip_prefix": "utf8parse-0.2.1",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.utf8parse-0.2.1.bazel"
            }
          },
          "cui__windows-0.48.0": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_rust~0.40.0~i~cui__windows-0.48.0",
              "sha256": "e686886bc078bc1b0b600cac0147aadb815089b6e4da64016cbd754b6342700f",
              "type": "tar.gz",
              "urls": [
                "https://crates.io/api/v1/crates/windows/0.48.0/download"
              ],
              "strip_prefix": "windows-0.48.0",
              "build_file": "@@rules_rust~0.40.0//crate_universe/3rdparty/crates:BUILD.windows-0.48.0.bazel"
            }
          }
        },
        "moduleExtensionMetadata": {
          "explicitRootModuleDirectDeps": [
            "rules_rust_tinyjson",
            "cui",
            "cui__anyhow-1.0.75",
            "cui__camino-1.1.6",
            "cui__cargo-lock-9.0.0",
            "cui__cargo-platform-0.1.4",
            "cui__cargo_metadata-0.18.1",
            "cui__cargo_toml-0.17.1",
            "cui__cfg-expr-0.15.5",
            "cui__clap-4.3.11",
            "cui__crates-index-2.2.0",
            "cui__hex-0.4.3",
            "cui__indoc-2.0.4",
            "cui__itertools-0.12.0",
            "cui__normpath-1.1.1",
            "cui__pathdiff-0.2.1",
            "cui__regex-1.10.2",
            "cui__semver-1.0.20",
            "cui__serde-1.0.190",
            "cui__serde_json-1.0.108",
            "cui__serde_starlark-0.1.14",
            "cui__sha2-0.10.8",
            "cui__spdx-0.10.3",
            "cui__tempfile-3.8.1",
            "cui__tera-1.19.1",
            "cui__textwrap-0.16.0",
            "cui__toml-0.8.10",
            "cui__tracing-0.1.40",
            "cui__tracing-subscriber-0.3.17",
            "cui__maplit-1.0.2",
            "cui__spectral-0.6.0",
            "cargo_bazel.buildifier-darwin-amd64",
            "cargo_bazel.buildifier-darwin-arm64",
            "cargo_bazel.buildifier-linux-amd64",
            "cargo_bazel.buildifier-linux-arm64",
            "cargo_bazel.buildifier-windows-amd64.exe",
            "rules_rust_prost__heck",
            "rules_rust_prost",
            "rules_rust_prost__h2-0.3.19",
            "rules_rust_prost__prost-0.11.9",
            "rules_rust_prost__prost-types-0.11.9",
            "rules_rust_prost__protoc-gen-prost-0.2.2",
            "rules_rust_prost__protoc-gen-tonic-0.2.2",
            "rules_rust_prost__tokio-1.28.2",
            "rules_rust_prost__tokio-stream-0.1.14",
            "rules_rust_prost__tonic-0.9.2",
            "llvm-raw",
            "rules_rust_bindgen__bindgen-cli-0.69.1",
            "rules_rust_bindgen__bindgen-0.69.1",
            "rules_rust_bindgen__clang-sys-1.6.1",
            "rules_rust_bindgen__clap-4.3.3",
            "rules_rust_bindgen__clap_complete-4.3.1",
            "rules_rust_bindgen__env_logger-0.10.0",
            "rrra__anyhow-1.0.71",
            "rrra__clap-4.3.11",
            "rrra__env_logger-0.10.0",
            "rrra__itertools-0.11.0",
            "rrra__log-0.4.19",
            "rrra__serde-1.0.171",
            "rrra__serde_json-1.0.102",
            "rules_rust_wasm_bindgen_cli",
            "rules_rust_wasm_bindgen__anyhow-1.0.71",
            "rules_rust_wasm_bindgen__docopt-1.1.1",
            "rules_rust_wasm_bindgen__env_logger-0.8.4",
            "rules_rust_wasm_bindgen__log-0.4.19",
            "rules_rust_wasm_bindgen__rouille-3.6.2",
            "rules_rust_wasm_bindgen__serde-1.0.171",
            "rules_rust_wasm_bindgen__serde_derive-1.0.171",
            "rules_rust_wasm_bindgen__serde_json-1.0.102",
            "rules_rust_wasm_bindgen__ureq-2.8.0",
            "rules_rust_wasm_bindgen__walrus-0.20.3",
            "rules_rust_wasm_bindgen__wasm-bindgen-0.2.91",
            "rules_rust_wasm_bindgen__wasm-bindgen-cli-support-0.2.91",
            "rules_rust_wasm_bindgen__wasm-bindgen-shared-0.2.91",
            "rules_rust_wasm_bindgen__assert_cmd-1.0.8",
            "rules_rust_wasm_bindgen__diff-0.1.13",
            "rules_rust_wasm_bindgen__predicates-1.0.8",
            "rules_rust_wasm_bindgen__rayon-1.7.0",
            "rules_rust_wasm_bindgen__tempfile-3.6.0",
            "rules_rust_wasm_bindgen__wasmparser-0.102.0",
            "rules_rust_wasm_bindgen__wasmprinter-0.2.60",
            "rules_rust_test_load_arbitrary_tool",
            "generated_inputs_in_external_repo",
            "libc",
            "rules_rust_toolchain_test_target_json",
            "com_google_googleapis",
            "bazelci_rules"
          ],
          "explicitRootModuleDirectDevDeps": [],
          "useAllRepos": "NO"
        },
        "recordedRepoMappingEntries": [
          [
            "rules_rust~0.40.0",
            "bazel_skylib",
            "bazel_skylib~1.5.0"
          ],
          [
            "rules_rust~0.40.0",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_rust~0.40.0",
            "cui__anyhow-1.0.75",
            "rules_rust~0.40.0~i~cui__anyhow-1.0.75"
          ],
          [
            "rules_rust~0.40.0",
            "cui__camino-1.1.6",
            "rules_rust~0.40.0~i~cui__camino-1.1.6"
          ],
          [
            "rules_rust~0.40.0",
            "cui__cargo-lock-9.0.0",
            "rules_rust~0.40.0~i~cui__cargo-lock-9.0.0"
          ],
          [
            "rules_rust~0.40.0",
            "cui__cargo-platform-0.1.4",
            "rules_rust~0.40.0~i~cui__cargo-platform-0.1.4"
          ],
          [
            "rules_rust~0.40.0",
            "cui__cargo_metadata-0.18.1",
            "rules_rust~0.40.0~i~cui__cargo_metadata-0.18.1"
          ],
          [
            "rules_rust~0.40.0",
            "cui__cargo_toml-0.17.1",
            "rules_rust~0.40.0~i~cui__cargo_toml-0.17.1"
          ],
          [
            "rules_rust~0.40.0",
            "cui__cfg-expr-0.15.5",
            "rules_rust~0.40.0~i~cui__cfg-expr-0.15.5"
          ],
          [
            "rules_rust~0.40.0",
            "cui__clap-4.3.11",
            "rules_rust~0.40.0~i~cui__clap-4.3.11"
          ],
          [
            "rules_rust~0.40.0",
            "cui__crates-index-2.2.0",
            "rules_rust~0.40.0~i~cui__crates-index-2.2.0"
          ],
          [
            "rules_rust~0.40.0",
            "cui__hex-0.4.3",
            "rules_rust~0.40.0~i~cui__hex-0.4.3"
          ],
          [
            "rules_rust~0.40.0",
            "cui__indoc-2.0.4",
            "rules_rust~0.40.0~i~cui__indoc-2.0.4"
          ],
          [
            "rules_rust~0.40.0",
            "cui__itertools-0.12.0",
            "rules_rust~0.40.0~i~cui__itertools-0.12.0"
          ],
          [
            "rules_rust~0.40.0",
            "cui__maplit-1.0.2",
            "rules_rust~0.40.0~i~cui__maplit-1.0.2"
          ],
          [
            "rules_rust~0.40.0",
            "cui__normpath-1.1.1",
            "rules_rust~0.40.0~i~cui__normpath-1.1.1"
          ],
          [
            "rules_rust~0.40.0",
            "cui__pathdiff-0.2.1",
            "rules_rust~0.40.0~i~cui__pathdiff-0.2.1"
          ],
          [
            "rules_rust~0.40.0",
            "cui__regex-1.10.2",
            "rules_rust~0.40.0~i~cui__regex-1.10.2"
          ],
          [
            "rules_rust~0.40.0",
            "cui__semver-1.0.20",
            "rules_rust~0.40.0~i~cui__semver-1.0.20"
          ],
          [
            "rules_rust~0.40.0",
            "cui__serde-1.0.190",
            "rules_rust~0.40.0~i~cui__serde-1.0.190"
          ],
          [
            "rules_rust~0.40.0",
            "cui__serde_json-1.0.108",
            "rules_rust~0.40.0~i~cui__serde_json-1.0.108"
          ],
          [
            "rules_rust~0.40.0",
            "cui__serde_starlark-0.1.14",
            "rules_rust~0.40.0~i~cui__serde_starlark-0.1.14"
          ],
          [
            "rules_rust~0.40.0",
            "cui__sha2-0.10.8",
            "rules_rust~0.40.0~i~cui__sha2-0.10.8"
          ],
          [
            "rules_rust~0.40.0",
            "cui__spdx-0.10.3",
            "rules_rust~0.40.0~i~cui__spdx-0.10.3"
          ],
          [
            "rules_rust~0.40.0",
            "cui__spectral-0.6.0",
            "rules_rust~0.40.0~i~cui__spectral-0.6.0"
          ],
          [
            "rules_rust~0.40.0",
            "cui__tempfile-3.8.1",
            "rules_rust~0.40.0~i~cui__tempfile-3.8.1"
          ],
          [
            "rules_rust~0.40.0",
            "cui__tera-1.19.1",
            "rules_rust~0.40.0~i~cui__tera-1.19.1"
          ],
          [
            "rules_rust~0.40.0",
            "cui__textwrap-0.16.0",
            "rules_rust~0.40.0~i~cui__textwrap-0.16.0"
          ],
          [
            "rules_rust~0.40.0",
            "cui__toml-0.8.10",
            "rules_rust~0.40.0~i~cui__toml-0.8.10"
          ],
          [
            "rules_rust~0.40.0",
            "cui__tracing-0.1.40",
            "rules_rust~0.40.0~i~cui__tracing-0.1.40"
          ],
          [
            "rules_rust~0.40.0",
            "cui__tracing-subscriber-0.3.17",
            "rules_rust~0.40.0~i~cui__tracing-subscriber-0.3.17"
          ],
          [
            "rules_rust~0.40.0",
            "rrra__anyhow-1.0.71",
            "rules_rust~0.40.0~i~rrra__anyhow-1.0.71"
          ],
          [
            "rules_rust~0.40.0",
            "rrra__clap-4.3.11",
            "rules_rust~0.40.0~i~rrra__clap-4.3.11"
          ],
          [
            "rules_rust~0.40.0",
            "rrra__env_logger-0.10.0",
            "rules_rust~0.40.0~i~rrra__env_logger-0.10.0"
          ],
          [
            "rules_rust~0.40.0",
            "rrra__itertools-0.11.0",
            "rules_rust~0.40.0~i~rrra__itertools-0.11.0"
          ],
          [
            "rules_rust~0.40.0",
            "rrra__log-0.4.19",
            "rules_rust~0.40.0~i~rrra__log-0.4.19"
          ],
          [
            "rules_rust~0.40.0",
            "rrra__serde-1.0.171",
            "rules_rust~0.40.0~i~rrra__serde-1.0.171"
          ],
          [
            "rules_rust~0.40.0",
            "rrra__serde_json-1.0.102",
            "rules_rust~0.40.0~i~rrra__serde_json-1.0.102"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust",
            "rules_rust~0.40.0"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_bindgen__bindgen-0.69.1",
            "rules_rust~0.40.0~i~rules_rust_bindgen__bindgen-0.69.1"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_bindgen__clang-sys-1.6.1",
            "rules_rust~0.40.0~i~rules_rust_bindgen__clang-sys-1.6.1"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_bindgen__clap-4.3.3",
            "rules_rust~0.40.0~i~rules_rust_bindgen__clap-4.3.3"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_bindgen__clap_complete-4.3.1",
            "rules_rust~0.40.0~i~rules_rust_bindgen__clap_complete-4.3.1"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_bindgen__env_logger-0.10.0",
            "rules_rust~0.40.0~i~rules_rust_bindgen__env_logger-0.10.0"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_prost__h2-0.3.19",
            "rules_rust~0.40.0~i~rules_rust_prost__h2-0.3.19"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_prost__prost-0.11.9",
            "rules_rust~0.40.0~i~rules_rust_prost__prost-0.11.9"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_prost__prost-types-0.11.9",
            "rules_rust~0.40.0~i~rules_rust_prost__prost-types-0.11.9"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_prost__protoc-gen-prost-0.2.2",
            "rules_rust~0.40.0~i~rules_rust_prost__protoc-gen-prost-0.2.2"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_prost__protoc-gen-tonic-0.2.2",
            "rules_rust~0.40.0~i~rules_rust_prost__protoc-gen-tonic-0.2.2"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_prost__tokio-1.28.2",
            "rules_rust~0.40.0~i~rules_rust_prost__tokio-1.28.2"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_prost__tokio-stream-0.1.14",
            "rules_rust~0.40.0~i~rules_rust_prost__tokio-stream-0.1.14"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_prost__tonic-0.9.2",
            "rules_rust~0.40.0~i~rules_rust_prost__tonic-0.9.2"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__anyhow-1.0.71",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__anyhow-1.0.71"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__assert_cmd-1.0.8",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__assert_cmd-1.0.8"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__diff-0.1.13",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__diff-0.1.13"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__docopt-1.1.1",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__docopt-1.1.1"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__env_logger-0.8.4",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__env_logger-0.8.4"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__log-0.4.19",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__log-0.4.19"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__predicates-1.0.8",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__predicates-1.0.8"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__rayon-1.7.0",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__rayon-1.7.0"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__rouille-3.6.2",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__rouille-3.6.2"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__serde-1.0.171",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__serde-1.0.171"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__serde_derive-1.0.171",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__serde_derive-1.0.171"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__serde_json-1.0.102",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__serde_json-1.0.102"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__tempfile-3.6.0",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__tempfile-3.6.0"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__ureq-2.8.0",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__ureq-2.8.0"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__walrus-0.20.3",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__walrus-0.20.3"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__wasm-bindgen-0.2.91",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasm-bindgen-0.2.91"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__wasm-bindgen-cli-support-0.2.91",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasm-bindgen-cli-support-0.2.91"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__wasm-bindgen-shared-0.2.91",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasm-bindgen-shared-0.2.91"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__wasmparser-0.102.0",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasmparser-0.102.0"
          ],
          [
            "rules_rust~0.40.0",
            "rules_rust_wasm_bindgen__wasmprinter-0.2.60",
            "rules_rust~0.40.0~i~rules_rust_wasm_bindgen__wasmprinter-0.2.60"
          ]
        ]
      }
    }
  }
}
